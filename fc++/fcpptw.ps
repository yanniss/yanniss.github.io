%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: fc++.dvi
%%Pages: 16
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips fc++.dvi -o fc++.ps
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 2001.08.08:1041
%%BeginProcSet: texc.pro
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (fc++.dvi)
@start
%DVIPSBitmapFont: Fa cmsy9 9 1
/Fa 1 25 df<013F16402601FFE015E04813F8487F4813FF4880D83FC06D1301273E001F
E014C048D907F8130300786D6C13070070D900FFEB0F8000F091387FE07F486EB512006F
5B03075B6F5B03005B0040ED1F8033127C9B3C>24 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy10 10 1
/Fb 1 16 df<EB1FF0EBFFFE487F000714C04814E04814F04814F8A24814FCA3B612FEA9
6C14FCA36C14F8A26C14F06C14E06C14C0000114006C5BEB1FF01F1F7BA42A>15
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmbx12 12 42
/Fc 42 123 df<B612F8A91D097F9A25>45 D<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA
7FFCEA3FF8EA1FF0EA07C00F0F788E1F>I<EC03C01407141F147FEB03FF133FB6FCA413
C3EA0003B3B3ADB712FCA5264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E00003
15F82607FC0313FE3A0FE0007FFFD81F806D138048C7000F13C0488001C015E001F07F00
FF6E13F07F17F881A46C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC
4B5A5E4B5A4B5A4A90C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D9
07E014F0495A495A49C8FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D41
7BC038>I<ECFFF0010713FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81
D80FF86D138013FE001F16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B
020F1380902607FFFEC7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0
A26F13F0A217F8A3EA0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80
491380D81FF0491300D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D
427BC038>I<163FA25E5E5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87
EC1F07143E147E147C14F8EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A485A
485A120F5B48C7FC123E5A12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038>
I<0007150301E0143F01FFEB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9
FCAAEC3FF001C1B5FC01C714C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D13
804915C0497F6C4815E0C8FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C
4815E05B007EC74813C0123E003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6CB6
12F0C65D013F1480010F01FCC7FC010113C02D427BC038>I<4AB47E021F13F0027F13FC
49B6FC01079038807F8090390FFC001FD93FF014C04948137F4948EBFFE048495A5A1400
485A120FA248486D13C0EE7F80EE1E00003F92C7FCA25B127FA2EC07FC91381FFF8000FF
017F13E091B512F89039F9F01FFC9039FBC007FE9039FF8003FF17804A6C13C05B6F13E0
A24915F0A317F85BA4127FA5123FA217F07F121FA2000F4A13E0A26C6C15C06D4913806C
018014006C6D485A6C9038E01FFC6DB55A011F5C010714C0010191C7FC9038003FF02D42
7BC038>I<121E121F13FC90B712FEA45A17FC17F817F017E017C0A2481680007EC8EA3F
00007C157E5E00785D15014B5A00F84A5A484A5A5E151FC848C7FC157E5DA24A5A14035D
14074A5AA2141F5D143FA2147F5D14FFA25BA35B92C8FCA35BA55BAA6D5A6D5A6D5A2F44
7AC238>I<EC7FF00103B5FC010F14C0013F14F090397F801FFC3A01FC0003FE48486D7E
497F4848EC7F80163F484815C0A2001F151FA27FA27F7F01FE143F6D158002C0137F02F0
14006C01FC5B6E485A6C9038FF83FCEDE7F86CECFFE06C5D6C92C7FC6D14C06D80010F14
F882013F8090B7FC48013F14802607FC0F14C0260FF80314E04848C6FC496D13F0003F14
1F48481307496D13F8150000FF157F90C8123F161F160FA21607A36D15F0127F160F6D15
E06C6C141F6DEC3FC06C6CEC7F80D80FFE903801FF003A07FFC00FFE6C90B55AC615F001
3F14C0010F91C7FC010013F02D427BC038>I<EE1F80A24C7EA24C7EA34C7EA24B7FA34B
7FA24B7FA34B7F169F031F80161F82033F80ED3E07037E80157C8203FC804B7E02018115
F0820203814B137F0207815D173F020F814B7F021F8292C77EA24A82023E80027E82027F
B7FCA291B87EA2498302F0C8FCA20103834A157F0107834A153FA249488284011F8491C9
7E4984133E017E82B6020FB612F0A54C457CC455>65 D<DCFFF01470031F01FF14F04AB6
EAE0010207EDF803023FEDFE0791B539E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0
804990C87E4948814948814948167F4849163F4849161F5A4A160F485B19074890CAFC19
035A5BA2007F1801A34994C7FC12FFAE127F7F1AF0A2123FA27F6C18011AE06C7F19036C
6D17C06E16077E6C6DEE0F806C6DEE1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0EC
07F0010101FEEC1FE06D903AFFF001FF80023F90B6C7FC020715FC020115F0DA001F1480
030001F8C8FC44467AC451>67 D<B9FC18F018FE727E19E026003FFEC7001F13F805017F
9438003FFF060F7F727F727F727F84737E737EA2737EA2737EA21B80A2851BC0A51BE0AD
1BC0A51B8061A21B006162193F624F5A19FF624E5B06075B4E5B063F90C7FC4DB45A050F
13F8BA5A19C04EC8FC18F095C9FC4B447CC356>I<B7D88003B612FEA526003FFEC9EBF8
00B3A791B9FCA54AC9FCB3AAB7D88003B612FEA54F447CC358>72
D<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523447DC32A>I<923807FFC092B512FE02
07ECFFC0021F15F091267FFE0013FC902601FFF0EB1FFF01070180010313C04990C76C7F
D91FFC6E6C7E49486F7E49486F7E01FF8348496F7E48496F1380A248496F13C0A24890C9
6C13E0A24819F04982003F19F8A3007F19FC49177FA400FF19FEAD007F19FC6D17FFA300
3F19F8A26D5E6C19F0A26E5D6C19E0A26C6D4B13C06C19806E5D6C6D4B13006C6D4B5A6D
6C4B5A6D6C4B5A6D6C4A5B6D01C001075B6D01F0011F5B010101FE90B5C7FC6D90B65A02
3F15F8020715C002004AC8FC030713C047467AC454>79 D<B9FC18F018FE727E19E0D800
1F90C7000F7F05017F716C7E727E727E721380A21AC084A21AE0A91AC0A24E1380A21A00
604E5A4E5A4D485A050F5B92B712C096C7FC18FC18C092CBFCB3A7B712E0A543447DC34D
>I<B812F8EFFFC018F818FE727ED8001F90C7003F13E005037F05007F727E727E727EA2
8684A286A762A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC18F818
E018F892C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F73131F7214
1EB700E06DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC354>82
D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9489038801FFF3907FC
00014848EB007F4848143F4848140F491407007F15035B1601160012FF177CA27FA26D15
3C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C816C6F7E6C826C826C6C
81011F810107811300020F80140003077FED007F82040F1380828212F082A282A27EA218
007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F
92C7FCD8F80714FC48C614F0480107138031467AC43E>I<003FBA12E0A59026FE000FEB
8003D87FE09338003FF049171F90C71607A2007E1803007C1801A300781800A400F819F8
481978A5C81700B3B3A20107B8FCA545437CC24E>I<B76C010FB512F8A526003FFEC938
03E000B3B3A9011F17076280190F6D606F151F6D95C7FC6D6D5D197E6D6D5D6D6D1403DA
7FFC4A5A6EB4EC3FF0020F9039F003FFE06E90B61280020193C8FC6E6C14FC030F14E092
26007FFEC9FC4D457CC356>I<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF8
4848EB1FFC6D6D7E486C6D7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC
1307013F13F19038FFFC01000313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D
5B6C6C5B4B13F0D83FFE013EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D9
0FFCC9FC322F7DAD36>97 D<EC3FFC49B512C0010F14F0013F14FC90397FF003FE9039FF
C001FF0003495A48494813805B120F485AA2485A6F1300007F6E5AED00784991C7FCA212
FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB1F006C6D133E6C01F05B
3A007FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32>99
D<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F14CF9039FFF807
FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3127F5BA212FFAC12
7FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314FC6C9038F01FEF
6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<EC3FF80103B57E01
0F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D1380485A001FED
7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F17
F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE01
1FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<EDFF80020F13E0027F13F0
49B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03F0
ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC522>I<DAFFE0137E01
0F9039FE03FF80013FEBFF8F90B812C048D9C07F133F489038001FF84848EB0FFC484890
3907FE1F80001F9238FF0F00496D90C7FCA2003F82A8001F93C7FCA26D5B000F5D6C6C49
5A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013E0000F90CAFCA47F7F7F
90B612C016FC6CEDFF8017E06C826C16FC7E000382000F82D81FF0C77ED83FC014074848
020113808248C9FC177FA46D15FF007F17006D5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B07
FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32427DAC38>I<EB7FC0
B5FCA512037EB1ED07FE92383FFF8092B512E002C114F89139C7F03FFC9138CF801F9139
DF000FFE14DE14FC4A6D7E5CA25CA35CB3A7B60083B512FEA537457CC43E>I<137C48B4
FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFFA5
12037EB3AFB6FCA518467CC520>I<EB7FC0B5FCA512037EB3B3B3A3B61280A519457CC4
20>108 D<90277F8007FEEC0FFCB590263FFFC090387FFF8092B5D8F001B512E002816E
4880913D87F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D99F009026FF3E007F6C019E
6D013C130F02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B60081B60003B512FEA5572D
7CAC5E>I<90397F8007FEB590383FFF8092B512E0028114F8913987F03FFC91388F801F
000390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E
>I<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4848C7
EA3FE000078248486E7E49140F001F82A2003F82491407007F82A400FF1780AA007F1700
A46C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90
C7FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>I<90397FC00FF8B590B5
7E02C314E002CF14F89139DFC03FFC9139FF001FFE000301FCEB07FF6C496D13804A15C0
4A6D13E05C7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C13E06E15C06E5B6E49
13806E4913006E495A9139DFC07FFC02CFB512F002C314C002C091C7FCED1FF092C9FCAD
B67EA536407DAC3E>I<90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1FFE
000313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A5272D
7DAC2E>114 D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48C7
121F127E00FE140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC6C
800003806C15806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA26C
15C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FEC7
FC232F7CAD2C>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B5
1280B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391FFC
1F006DB5FC6D13FC01015B9038003FE023407EBE2C>I<D97FC049B4FCB50103B5FCA500
03EC000F6C81B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512C7010F
1407010313FE9026007FF0EBFC00372E7CAC3E>I<B6903803FFFCA5000101E09038003E
006C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92
C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5B
A36E5BA26E90C8FCA26E5AA26E5AA21578362C7EAB3B>I<B5D8FE1FB539801FFFF0A500
019027C0003FE0C7EA7C007114786E17F86C6F6C5C6E1601017F6E6C5CA26E011F140301
3F6F5C6E013F1407011F6F5CA26E0179140F010F048090C7FC6E01F95C6D02F0EBC01E15
806D902681E07F5B18E003C3157C6D9139C03FF07815E76DDA801F5B18F803FF14F96E90
39000FFDE018FF6E486D5BA36E486D5BA26E486D90C8FCA24B7F02075DA26E48147C4B14
3C4C2C7EAB51>I<B6903803FFFCA5000101E09038003E006C163C80017F5D8017F8013F
5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6DEBE01E163E6D14
3CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E
5AA21578A215F85D14015D001F1303D83F805B387FC007D8FFE05B140F92C9FC5C143E49
5A387FC1F8EB07F06CB45A6C5B000790CAFCEA01FC36407EAB3B>121
D<001FB71280A49026FC001F130001E0495A5B49495A90C7485A48495B123E4A5B4A5B00
3C495BA24A90C7FC4A5A4A5AC7FC4A5A495B495BA2495B499038800780491300A2495A49
48130F49481400A2485B48495B485BA248495B4890C75A48485C15034848EB1FFEB7FCA4
292C7DAB32>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmtt8 8 15
/Fd 15 122 df<EB7FC03803FFF04813FC001F7F48EBFF80EA7F80397E003FC000FEEB0F
E04813076CEB03F0A31401127C1238C7FC1403A2EC07E0A2EC0FC0141FEC3F80150014FE
1301EB03F8495A495AEB3FC0495A01FEC7FC485A485AD80FF013E0391FE001F0EA3F8048
B5FCB6FCA36C14E01C2A7DA923>50 D<EC0380EC0FC0141F143F14FF491380903807FE00
495A495AEB7FE0495A4890C7FCEA07FE485AEA1FF0EA7FE0485A90C8FCA213C06C7EEA1F
F0EA0FFC6C7EEA01FF6C13C06D7EEB1FF86D7E6D7E903801FF806D13C0143F141F140FEC
03801A247CA523>60 D<127012FC7E7E13C06C7EEA1FF86C7E6C7E3801FF806C7FEB3FE0
EB1FF86D7EEB03FE903801FF806D13C0143FA214FF491380903803FE00EB0FFC495AEB3F
E0EBFFC0485BD807FEC7FC485A485AEA7FE0485A90C8FC5A5A12701A247CA523>62
D<90380FE0E090383FF9F0EBFFFD4813FF5A3807FC3F380FF00F381FC007A2383F800313
00481301127EA2007CEB00E000FC1400A25AA97EA2127C007E14E0EC01F0127F7EEB8003
EA1FC0EC07E0380FF00F3907FC1FC06CB512806C14006C5BEB3FF8EB0FE01C2B7DA923>
67 D<39FF8001FFA26D5AA3391EE00778A3EBF00FEB700EA2EB781EA2EB381CEB3C3CA2
EB1C38EB1E78A2EB0E70A3EB07E0A3EB03C0A290C7FCA939FFC003FFA520297FA823>77
D<397FC01FF800FFEB3FFC13E0A2397FF01FF8390F7003C0A213781338A2133CA2131C13
1EA2130E130FA3EB0783A3EB03C3A3130114E3A2130014F3A21473A2147B143BA2387FE0
3F38FFF01FA2140FD87FE013801E297EA823>I<3803FF80000F13E04813F8487F80EB80
FFEC3F80381F001FC7FC140F14FF137F0003B5FC120F5A387FF00F130012FCA25A141F7E
6C133F387F81FF90B512FC6C14FE7E000713C73901FE01FC1F1D7D9C23>97
D<B47E7FA41207A7EBC1FCEBC7FF01DF13C090B512E015F09038FE0FF8EBF8039038F001
FCEBE000A249137EA2153EA5157E7F15FC7F14019038F803F89038FE0FF090B5FC15E001
DF138001CF1300380383F81F297FA823>I<EB3FC0EBFFF800037F4813FF481480381FF0
7F393F801FC0EB000F007E130715E05AB6FCA415C000F8C8FC7EA2007EEB01C0007FEB03
E0383F800713E0391FF81FC06CB5FC6C14800001EBFE006C6C5AEB1FE01B1D7D9C23>
101 D<EA7FFEB5FCA37EEA001FB3AD007FB512C0B612E0A36C14C01B297CA823>108
D<397E1F01F039FF7FC7FC9038FFEFFE14FF6C80390FE1FE1FEBC1FC01C07FEB80F8A2EB
00F0AE3A7FE3FE3FE026FFF3FF13F0A3267FE3FE13E0241D819C23>I<38FF81FCEBC7FF
01DF13C090B512E015F03907FE0FF8EBF8039038F001FCEBE000A249137EA2153EA5157E
7F15FC7F14019038F803F89038FE0FF090B5FC15E001DF138001CF1300EBC3F801C0C7FC
AAEAFFFEA51F2C7F9C23>112 D<397FF00FE039FFF87FF8ECFFFC13FB6CB5FCC613F8EC
C078EC800091C7FC5BA25BA35BAA387FFFFCB57EA36C5B1E1D7E9C23>114
D<39FF807FC001C013E0A400071303B01407140FEBE03F90B6FC7EA2C613F3EB3FC1201D
7F9C23>117 D<39FFF03FFCA539078007C0158013C00003130F1500EA01E05CEBF01E12
00A26D5A1378A26D5AA3EB1E7014F0130EEB0FE0A213075CA35CA2130F91C7FCA2EA3E1F
EA7F1E133EEA7CFC127F5B6C5A6C5AEA0F801E2C7E9C23>121 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi10 10 1
/Fe 1 79 df<902603FFF891381FFFF8496D5CA2D90007030113006FEC007C02061678DA
0EFF157081020C6D1460A2DA1C3F15E0705CEC181F82023815016F6C5C1430150702706D
1303030392C7FC02607FA2DAE0015C701306ECC0008201016E130EEF800C5C163F0103ED
C01C041F131891C713E0160F49EDF03818300106140717F8010E02031370EFFC60130CEE
01FE011C16E004005B011815FF177F1338600130153FA20170151F95C8FC01F081EA07FC
B512E01706A245397DB843>78 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmti8 8 15
/Ff 15 122 df<EB07C0EB1FF090387C39C0EBF81FEA01F03803E00FEA07C0120FD81F80
1380A2EA3F00141F481400127EA25C00FE133E5AA2EC7E18EC7C385AA214FCD878011378
397C03F870A2393C0F78E0381E1E3D390FF81FC03903E00F001D1F799D24>97
D<13F8121FA21201A25BA21203A25BA21207A25BA2120FEBC7C0EB9FF0EBF878381FF03C
EBE03EEBC01EEB801FEA3F00A2123EA2007E133FA2127CA2147F00FC137E5AA214FCA214
F8130114F0EB03E0EA780714C0383C0F80381E3E00EA0FF8EA03E0182F78AD21>I<EB01
F8EB0FFE90383E0780EBFC03D801F013C03803E0070007130FEA0FC001801380121F48C8
FCA25A127EA312FE5AA5EC0180007CEB03C0EC0780EC0F006C131E001E137C380F83F038
07FFC0C648C7FC1A1F799D21>I<EB03F8EB0FFEEB3E0FEBF8073901F00380EA03E0EA07
C0000F1307D81F8013005C383F001E5C387F03F8EBFFE049C7FC007EC8FC12FE5AA4127C
EC0180EC03C0EC07806CEB0F00141E6C137C380F83F03803FFC0C648C7FC1A1F799D21>
101 D<131FEA03FFA2EA003FA2133EA2137EA2137CA213FCA25BA21201147E9038F3FF80
9038F787C03903FE03E013FC13F8A2EA07F013E0A213C0000F130715C01380A2001F130F
15801300141F481406150E003E133F143E007E141EEC7E1C007C137CEC3C3812FC157048
EB1FE00070EB07801F2F7BAD24>104 D<130E131FEB3F80A2EB1F00130E90C7FCA9EA03
E0EA0FF0EA1E78EA1C7C12381278127013FCEAF0F812E012E1EAC1F0120112035B12075B
A2120F13831387121F13075BEA3F0E123EEA1E1C133C1338EA0FF0EA03C0112E7AAC16>
I<137CEA0FFCA21200A213F8A21201A213F0A21203A213E0A21207A213C0A2120FA21380
A2121FA21300A25AA2123EA2127EA2127CA2EAFC30137012F8A213F013E012F012F113C0
12FBEA7F80EA1E000E2F7AAD12>108 D<3B07801FC007F03B1FE07FF01FFC3B3DF1E0F8
783E3B38F3C078F01E3B78FF007DC01FD870FEEB7F80A2D8F1FC1400D8E1F8137EA24913
7C00C302FC5B0003163E495BA200070101147E177C01C05B17FC000F0103ECF830187001
80EBE00117F0001F010715F0040313E0010001C013E0EFE1C048010F1301EFE380003E91
398000FF00001C6DC7123C341F7A9D3A>I<EB03F8EB0FFE90383E0F809038FC07C03801
F003D803E013E01207390FC001F01380121FEA3F0014035A127EA2140700FE14E05AA2EC
0FC0A2EC1F80A2007CEB3F00143E5C6C5B381E01F0380F07C06CB4C7FCEA01FC1C1F799D
24>111 D<90383C01F09038FF07FC3901E79E1E9038C7BC0F000301F81380903887F007
02E013C038078FC0130F1480A2D8061F130F12001400A249131F1680133EA2017EEB3F00
A2017C133E157E01FC137C5DEBFE015D486C485AEC0F80D9F3FEC7FCEBF0F8000390C8FC
A25BA21207A25BA2120FA2EAFFFCA2222B7F9D24>I<3807803E391FE0FF80393CF3C1C0
3938F781E03878FF07EA70FE13FC12F139E1F8038091C7FC5B12C312035BA21207A25BA2
120FA25BA2121FA290C8FCA25AA2123E121C1B1F7A9D1E>114 D<EB0FC0EB7FF0EBF03C
3801E01C3803C01EEA0780143EA2000F133C1418EBC00013F813FF6C13C06C13E06C13F0
EA007F130713031301EA780012FCA2130100F813E012E0EB03C038F0078038781F00EA1F
FCEA07F0171F7A9D1D>I<131C133EA2137EA2137CA213FCA25BA21201A2B512E0A23803
F000A25BA21207A25BA2120FA25BA2121FA290C7FCA24813C01301123E13031480130700
3C1300130E131E6C5AEA0FF0EA07C0132B7AA918>I<EA03C0D80FF01338D81E78137CD8
1C7C13FC003814F812781270EBFC01D8F0F813F012E012E138C1F003000114E0120313E0
1407000714C013C0A2EC0FC3000F14871380A2141F158F0007EB3F0E147F01C0131C3903
E1E7BC3901FF83F839007E01E0201F7A9D26>I<EA03C0D80FF01338D81E78137CD81C7C
13FC003814F812781270EBFC01D8F0F813F012E012E138C1F003000114E0120313E01407
000714C013C0A2140F000F14801380A2141F150000075B5C13C03803E1FE3801FFBE3800
7E3EEB007E147CA2003E5BA2387E01F0A2387C03E0387007C06C485AD83C3EC7FCEA1FF8
EA07E01E2C7A9D23>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr8 8 47
/Fg 47 125 df<14FF010713E090381F80F090383E003849137C4913FC485A1203491378
153092C7FCA7157CB612FCA23803E000157CB3A5486C13FE3A7FFF0FFFE0A2232F7FAE27
>12 D<003C13F0387E01F838FF03FCA2EB83FEA2EA7F81383D80F600011306A30003130E
EB000CA248131C00061318000E13384813704813E0387001C00060138017157EAD23>34
D<913901C001C0A30203130303805BA302071307030090C7FCA34A5B020E130EA3021E13
1E021C131CA3023C133CB912C0A3C726700070C7FC02F013F04A5BA40101130102C05BA4
0103130302805BB912C0A327000F000FC8FC010E130EA3011E131E011C131CA3013C133C
01381338A30178137801701370A301F013F0495BA3323B7CAD3B>I<13031307130E131C
1338137013F0EA01E013C01203EA0780A2EA0F00A2121EA35AA45AA512F8A25AAB7EA212
78A57EA47EA37EA2EA0780A2EA03C0120113E0EA00F013701338131C130E130713031043
7AB11B>40 D<12C07E12707E7E7E120FEA0780120313C0EA01E0A2EA00F0A21378A3133C
A4131EA5131FA2130FAB131FA2131EA5133CA41378A313F0A2EA01E0A2EA03C013801207
EA0F00120E5A5A5A5A5A10437CB11B>I<EC0380B3A4B812FCA3C7D80380C7FCB3A42E2F
7CA737>43 D<123C127EB4FCA21380A2127F123D1201A312031300A25A1206120E5A5A5A
126009157A8714>I<B512C0A412047F9018>I<123C127E12FFA4127E123C08087A8714>
I<15C0140114031580A214071500A25C140EA2141E141CA2143C143814781470A214F05C
A213015CA213035C130791C7FCA25B130EA2131E131CA2133C1338A21378137013F05BA2
12015BA212035BA2120790C8FC5A120EA2121E121CA2123C1238A212781270A212F05AA2
1A437CB123>I<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14C0A2
48EB03E0A500FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A3807C0
3E3803F0FC3800FFF0EB3FC01C2D7DAB23>I<130C133C137CEA03FC12FFEAFC7C1200B3
B113FE387FFFFEA2172C7AAB23>I<EB7F803801FFF0380780FC380E003F48EB1F8048EB
0FC05A0060EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC
3F00147E147C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E
14E0001FB5FC5A4814C0B6FCA21C2C7DAB23>I<1230123C003FB512F8A215F05A15E039
700001C000601480140348EB0700140E140CC7121C5C143014705C495AA2495AA249C7FC
A25B130E131EA2133EA3133C137CA413FCA913781D2E7CAC23>55
D<123C127E12FFA4127E123C1200AD123C127E12FFA4127E123C081D7A9C14>58
D<4A7E4A7EA34A7EA24A7EA3EC1BF81419A2EC30FCA2EC70FEEC607EA24A7EA349486C7E
A2010380EC000FA201066D7EA3496D7EA2011FB57EA29038180001496D7EA349147EA201
E0147F4980A20001ED1F801203000716C0D80FF0EC3FE0D8FFFC0103B5FCA2302F7EAE35
>65 D<DA1FF013C09138FFFE01903903F00F8390390F8001E3013FC71277017C143F4848
141F4848140F48481407A248481403121F491401123F90C8FC481500A300FE1600AB127F
17C0A27E7F001F15016D1580120F6C6C1403EE07006C6C14066C6C140ED8007C5C013F14
7890390F8001E0903903F00FC0902600FFFEC7FCEC1FF02A2F7CAD33>67
D<B712FCA23903F800030001EC007C163E161E160EA21606A3160716031518A21600A315
38157815F890B5FCA2EBF800157815381518A592C7FCAB487EB512F8A2282D7EAC2E>70
D<B512F0A23803FC006C5AB3B3A3487EB512F0A2142D7EAC19>73
D<007FB712F8A29039000FC003007C150000701638A200601618A200E0161CA248160CA5
C71500B3A94A7E011FB512E0A22E2D7EAC33>84 D<0003130C48131C000E133848137048
13E0003013C0EA700100601380A2EAE00300C01300A300DE137800FF13FCEB83FEA2EA7F
81A2383F00FC001E1378171577AD23>92 D<13FF000713C0380F01F0381C00F8003F137C
80A2143F001E7FC7FCA4EB07FF137F3801FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE14
065AA3143F7E007E137F007FEBEF8C391F83C7FC390FFF03F83901FC01E01F207D9E23>
97 D<EA07C012FFA2120F1207AC14FE9038C7FF809038CF03E09038DC01F09038F8007C
49137E49133E497F1680A2150F16C0A9ED1F80A216005D6D133E6D5B01B05B9038BC01F0
90380E07E0390607FF80260001FCC7FC222F7EAD27>I<EB1FE0EB7FFC3801F01E3803E0
073907C01F80EA0F80EA1F005A003EEB0F00007E90C7FCA2127C12FCA9127EA215C07E6C
130101801380380FC0033907E007003801F03E38007FF8EB1FC01A207E9E1F>I<15F814
1FA214011400ACEB0FE0EB7FF83801F81E3803E0073807C003380F8001EA1F0048130012
3E127EA25AA9127C127EA2003E13017EEB8003000F13073903E00EFC3A01F03CFFC03800
7FF090391FC0F800222F7EAD27>I<EB1F80EBFFF03803E0783807C03E380F801E381F00
1FEC0F80123E007E130715C0127C12FCA3B6FCA200FCC8FCA5127EA2003E14C0123F6C13
01390F80038001C013003803E00F3801F03C38007FF8EB1FC01A207E9E1F>I<EB03F0EB
0FFCEB3E1EEB7C3F13F8EA01F0A23803E00C1400AAB512E0A23803E000B3A6487E387FFF
80A2182F7FAE16>I<013F13F89038FFC3FE3903E1FF1E3807807C000F140C391F003E00
A2003E7FA76C133EA26C6C5A00071378380FE1F0380CFFC0D81C3FC7FC90C8FCA3121E12
1F380FFFF814FF6C14C04814F0391E0007F848130048147C12F848143CA46C147C007C14
F86CEB01F06CEB03E03907E01F803901FFFE0038003FF01F2D7E9D23>I<EA07C012FFA2
120F1207AC14FE9038C3FF809038C703E09038DE01F013F8496C7EA25BA25BB2486C487E
3AFFFE1FFFC0A2222E7EAD27>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCA8EA07C0
12FFA2120F1207B3A5EA0FE0EAFFFCA20E2E7EAD14>I<130FEB1F80EB3FC0A4EB1F80EB
0F0090C7FCA8EB07C013FFA2130F1307B3AD1230127838FC0F80A21400485AEA783EEA3F
F8EA07E0123C83AD16>I<EA07C012FFA2120F1207ADEC1FFEA2EC0FF0EC07C05D020EC7
FC5C5C5C5CEBC3C013C7EBCFE0EBDFF013F9EBF0F8497EEBC07E143E80816E7E14076E7E
816E7E486C487E3AFFFE07FF80A2212E7EAD25>I<EA07C012FFA2120F1207B3B3A3EA0F
E0EAFFFEA20F2E7EAD14>I<2607C07FEB07F03BFFC3FFC03FFC903AC783F0783F3C0FCE
01F8E01F803B07DC00F9C00F01F8D9FF8013C04990387F000749137EA249137CB2486C01
FEEB0FE03CFFFE0FFFE0FFFEA2371E7E9D3C>I<3807C0FE39FFC3FF809038C703E0390F
DE01F0EA07F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2221E7E9D27>I<EB1FE0EB
7FF83801F03E3803C00F3907800780390F0003C04814E0003EEB01F0A248EB00F8A300FC
14FCA9007C14F8A26CEB01F0A26CEB03E0A2390F8007C03907C00F803901F03E0038007F
F8EB1FE01E207E9E23>I<3807C0FE39FFC7FF809038CF03E0390FDC01F03907F800FC49
137E49133E49133FED1F80A3ED0FC0A8151F1680A2ED3F00A26D137E6D137C5D9038FC01
F09038CE07E09038C7FF80D9C1FCC7FC01C0C8FCA9487EEAFFFEA2222B7E9D27>I<3807
81F838FF87FEEB8E3FEA0F9CEA07B813B0EBF01EEBE000A45BB0487EB5FCA2181E7E9D1C
>114 D<3801FE183807FFB8381E01F8EA3C00481378481338A21418A27E7EB41300EA7F
F06CB4FC6C13C06C13F0000113F838001FFC130138C0007E143EA26C131EA27EA26C133C
A26C137838FF01F038E3FFC000C0130017207E9E1C>I<1360A413E0A312011203A21207
121FB512F0A23803E000AF1418A714383801F03014703800F860EB3FE0EB0F80152A7FA8
1B>I<D807C013F800FF131FA2000F130100071300B21401A314033803E007EC0EFC3A01
F81CFFC038007FF890391FE0F800221F7E9D27>I<3AFFFC01FFC0A23A0FE0007E000007
147C15380003143015706C6C1360A26C6C5BA390387C0180A26D48C7FCA2EB3F07EB1F06
A2EB0F8CA214DCEB07D8A2EB03F0A36D5AA26D5A221E7F9C25>I<3BFFFC3FFE07FFA23B
0FE003F001F801C09038E000F00007010114E0812603E00314C0A2913807F8012701F006
781380A29039F80E7C030000D90C3C1300A290397C181E06A2151F6D486C5AA2168C9039
1F600798A216D890390FC003F0A36D486C5AA36DC75A301E7F9C33>I<3AFFFC07FF80A2
3A0FF003FC000003EB01F0000114C06D485A000091C7FCEB7C06EB3E0E6D5A14B8EB0FB0
EB07E013036D7E497E1307EB067C497EEB1C1F01387FEB700F496C7E6E7ED803C07F0007
6D7E391FE003FC3AFFF007FFC0A2221D7F9C25>I<3AFFFC01FFC0A23A0FE0007E000007
147C1538000314306D137000011460A26C6C5BA2EBFC01017C5BEB7E03013E90C7FCA2EB
1F06A2148EEB0F8CA2EB07D8A2EB03F0A36D5AA26D5AA2495AA2130391C8FC1278EAFC06
A25B131CEA7838EA7070EA3FE0EA0F80222B7F9C25>I<003FB51280A2EB003F003C1400
0038137E00305BEA700100605B495A495A130F00005B495A49C7FC5B137E9038FC0180EA
01F8120313F03807E003EA0FC0001F1400138048485A007E5B00FE133FB6FCA2191D7E9C
1F>I<BB12FCA24602809247>124 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmr6 6 3
/Fh 3 52 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I<13FF000313C0380F03E0381C00F014F800
3E13FC147CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00A2380003E0EB00
F01478147C143E143F1230127812FCA2143E48137E0060137C003813F8381E03F0380FFF
C00001130018227DA01E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmtt9 9 80
/Fi 80 126 df<123C127E12FFAF127EAE123C1200A7123C127E12FFA4127E123C082F71
AE27>33 D<00101320007C13F838FE01FCAAEAFC00007C13F8A900381370161778AE27>
I<90383C03C090387E07E0A7EBFE0F01FC13C0A2007FB512FEB7FCA4003F14FE3901F81F
80AC003FB512FEB7FCA46C14FE3903F03F00A200075BEBE07EA73803C03C202E7DAD27>
I<000F1470486C13F8383FC001EA7FE0140315F038FFF00700F914E0A2140F15C0A2141F
00FF1480387FE03F1500A26C485A381F807E380F00FEC75AA213015CA213035C13075CA2
130F5C131F5CA2133F91C7FCA24913F090387E01F89038FE03FC9038FC07FEA212019038
F80FFF0003149F13F0A2120713E0A2000F14FF9038C007FE121F1380EC03FC000FEB01F8
6CC712F0203A7DB327>37 D<131FEB7FC0497E5A80EA03F1EBE1F8EA07E013C0A513C15C
9039C3F1FF80D9E3E113C03803E7E3EBEFC101FF1480913881F800EC01F0EA01FEEBFC03
01F85B00031307D807FC5B120F381FFE0FD83FBE5BEB3F1FD87E1F90C7FC149F38FC0FBF
14FE1307ECFC020103EB0F80EB01F8A238FE03FC387E07FE397F1FFF9F6CB61200149F6C
EB0FFE390FFC03FC3903F000F822307EAE27>I<EB01C0EB03E0130F131FEB3FC0EB7F80
EBFE00485A5B1203485A5B485AA2485AA248C7FCA3127EA45AAC127EA47EA36C7EA26C7E
A26C7E7F6C7E12017F6C7EEB7F80EB3FC0EB1FE0130F1303EB01C0133A73B327>40
D<127012F812FE7E6C7E6C7EEA0FE06C7E12037F6C7E1200137EA27FA2EB1F80A3EB0FC0
A4EB07E0ACEB0FC0A4EB1F80A3EB3F00A2137EA25B1201485A5B1207485AEA3FC0485A48
C7FC5A12F81270133A7AB327>I<130F497EA60078EB81E000FEEB87F000FF138FEBDFBF
6CB512E06C14C0000F1400000313FCC613F0A2000313FC000F13FF003F14C04814E039FF
DFBFF0EB1F8F00FE13870078EB81E00000EB8000A66DC7FC1C207BA627>I<EB03C0497E
AD007FB512FEB7FCA46C14FE390007E000AD6D5A20227DA727>I<120FEA3FC013E0EA7F
F0A213F8A2123FA2120F120113F01203EA07E0121FEA7FC0EAFF8013005A12700D147389
27>I<007FB512F8B612FCA46C14F81E067C9927>I<121EEA7F80A2EAFFC0A4EA7F80A2EA
1E000A0A728927>I<1538157C15FCA2140115F8140315F0140715E0140F15C0141F1580
143F1500A25C147E14FE5C13015C13035C13075C130F5CA2131F5C133F91C7FC5B137E13
FE5B12015B12035BA212075B120F5B121F5B123F90C8FC5A127E12FE5AA25A12781E3A7C
B327>I<EB07E0EB3FFC497E90B5FC4814803903FC3FC03907F00FE0390FE007F0EBC003
391F8001F8A248C712FCA2003E147C007E147EA3007C143E00FC143FAC007E147EA46C14
FCA2EB8001001F14F8EBC003000F14F0EBE0073907F00FE03903FC3FC06CB512806C1400
6D5A6D5AEB07E020307DAE27>I<130E131FA25B5BA25B5A5A127FB5FCA213BFEA7E3F12
00B3AA003FB512805A15C01580A21A2F79AE27>I<EB3FE03801FFF84813FE000FEBFF80
4814C0393FE07FE0EB800F397F0007F0007EEB03F800FE13015A6C14FC1400A3127CC8FC
A2140115F8A2140315F01407EC0FE0EC1FC0143FEC7F80ECFF00495A495A495A495A495A
495A495A01FEC7FC485AD807F81378484813FC485A485A48B5FCB6FCA36C14F81E2F7CAE
27>I<EB1FF8EBFFFE0003EBFF80000F14C015E0391FF01FF0393FC007F8EB800115FC14
00A26CC7FC1204C8FC140115F81403EC07F0140FEC3FE090381FFFC0491380A215E06D13
F09038001FF8EC03FC1401EC00FE157E157F153FA21238127C12FEA2157F48147E6C14FE
007FEB01FCEB8003393FF01FF86CB512F06C14E000031480C6EBFE00EB1FF820307DAE27
>I<EC3F804A7EA214FF5BA2EB03F7EB07E7A2EB0FC71487131FEB3F07A2137E13FCA2EA
01F813F01203EA07E0A2EA0FC0EA1F80A2EA3F00123E127E5AB7128016C0A36C1580C738
07C000A849B5FC491480A36D1400222F7EAE27>I<001FB512E04814F0A315E090C8FCAC
EB1FF0EBFFFC14FF158015C09038F03FE09038C00FF0EB0007003EEB03F8001C1301C7FC
15FC1400A3127C12FEA2140115F84813036C14F0007F130F9038801FE0393FE07FC06CB5
12806C14006C5B000113F838007FC01E2F7CAD27>I<14FF010713C0011F13F04913F890
B5FC48EB81FC3803FE0113F8EA07F0EA0FE09038C000F8001F1400485A90C8FCA25A127E
EB0FF838FE3FFE48B51280B612C015E09038F80FF09038E007F890388001FC90C7FC15FE
48147E157F153F5A7E127EA3127F6C147F157E6C6C13FE9038C001FC120F9038F007F839
07F81FF06CB512E06C14C06C148090383FFE00EB0FF820307DAE27>I<EB0FF0EB7FFC48
B5FC4814804814C0390FF81FE0391FE007F0393FC003F8EB8001D87F0013FC007E130012
FE48147EA4157F153F157F7E127E007F14FF7E6D5A381FE007380FF01F6CB6FC7E6C143F
39007FFC7F90381FF07E90C7FCA215FCA2140115F8001F1303393F8007F0EC0FE0141FEC
3FC09038C0FF806CB512005C6C13F8000313E0C6138020307DAE27>57
D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCAC121EEA7F80A2EAFFC0A4EA7F80A2EA
1E000A20729F27>I<120FEA3FC0A2EA7FE0A4EA3FC0A2EA0F00C7FCAC120FEA3F8013C0
127F13E0A3123FA2120F120713C0120FA2EA3F80EA7F005A5A12F812700B2A739F27>I<
153815FC14011407140FEC3FF8EC7FE0ECFFC001031300495AEB1FF8495A495A3801FF80
4890C7FCEA0FFC485AEA7FF0EAFFC05BA27FEA7FF0EA1FF86C7EEA03FF6C7F38007FE06D
7E6D7EEB07FE6D7E010013C0EC7FE0EC3FF8EC0FFC14071401140015381E287CAA27>I<
007FB512FEB7FCA4003F14FEC9FCA6003FB512FEB7FCA46C14FE20127D9F27>I<127012
FC7E6C7E7FEA7FF0EA1FF86C7EEA03FF6C7F38007FE06D7E6D7EEB07FE6D7E010013C0EC
7FE0EC3FF8EC0FFC1407A2140FEC3FF8EC7FE0ECFFC001031300495AEB1FF8495A495A38
01FF804890C7FCEA0FFC485AEA7FF0EAFFC05B48C8FC5A12701E287CAA27>I<EB01FE90
3807FF80011F13C0017F13E090B512F048EB03F83803FC013907F000FC390FE01F7C9038
C07FFE381F80FF1301485A393E07F1FF007E13E0397C0FC07FEC803FA2EAFC1F00F8EB00
1FA800FCEB803FD87C0F133EA2ECC07E397E07E0FC003E13F1393F03FFF86C6C13F00180
13E0390FC07FC09038E01F1E3907F0003FD803FC137F3901FF03FF6CEBFFFE6D13FC011F
13F0010713C001011300202E7DAD27>64 D<EB03F0497EA2497EA4143CEB1F3EA5EB3F3F
A3EB3E1FA2017E7FA4496C7EA548486C7EA390B5FCA24880A3EBF003A248486C7EA4000F
803A7FFC0FFF8000FF15C06D5A497E007F1580222F7EAE27>I<007FB5FCB612C08115F8
7E3907E003FCEC00FE157E157F81A6157EA25D1403EC0FF890B55A15C015F081819038E0
00FE157FED3F80151FA2ED0FC0A6151F1680153FED7F004A5A007FB55AB65A5D15E06C14
80222E7FAD27>I<903803F80E90381FFE1F90383FFFBF90B6FC5A3803FE0F3807F80349
7E48487E485A49137FA248C7123FA25A127E151E150012FE5AAA7E127EA2151E007F143F
7EA26C7E157F6D137E6C6C13FE3907F001FCEBF8033903FE0FF86CB512F06C14E0013F13
C06D1300EB03F820307DAE27>I<387FFFFC14FFB612C06C80813907E00FF81407EC01FC
6E7EA2157E157F811680151FA316C0150FABED1F80A3153F1600A25D15FEA24A5A4A5A14
0F007FB55A5DB65A6C91C7FC14FC222E7FAD27>I<007FB61280B712C0A37E3907E0000F
A6ED078092C7FCA4EC07804A7EA390B5FCA5EBE00FA36E5A91C8FCA4ED03C0ED07E0A700
7FB6FCB7FCA36C15C0232E7FAD27>I<007FB61280B712C0A37E3907E0000FA6ED078092
C7FCA4EC07804A7EA390B5FCA5EBE00FA36E5A91C8FCAC387FFF80B57EA36C5B222E7EAD
27>I<3A7FFE07FFE0B54813F0A36C486C13E03A07E0007E00AF90B512FEA59038E0007E
B03A7FFE07FFE0B54813F0A36C486C13E0242E7FAD27>72 D<007FB512E0B612F0A36C14
E039001F8000B3B2007FB512E0B612F0A36C14E01C2E7BAD27>I<387FFFC080B5FC7E5C
D803F0C8FCB3AAED0780ED0FC0A7007FB6FCA2B7FC7E1680222E7FAD27>76
D<D87FE0EB7FE0486CEBFFF0A26D5A007F15E0000F150001B813DFEBBC03A3EBBE07019E
139FA3EB9F0FA2018F131FA2149FA2EB879EA4EB839C14FCA3EB81F8A2EB80F01400AAD8
7FF0EBFFE0486C4813F0A36C486C13E0242E7FAD27>I<3A7FF003FFE0486C4813F0A213
FC007F6D13E000079038003E0013DEA313CFA3148013C714C0A213C314E0A213C114F0A3
EBC0F8A31478147CA2143C143EA2141E141F140FA3EC07BEA3EC03FEEA7FFCEAFFFE1401
A26C486C5A242E7FAD27>I<EBFFFC0007EBFF80001F14E0A24814F0EBC00F397F8007F8
EB0003007E1301A348EB00FCB3A76C1301007E14F8A3007F1303EB8007393FE01FF090B5
FC6C14E0A200071480C6EBFC001E307CAE27>I<007FB5FCB612E081816C803907E003FE
EC00FF81ED3F80151F16C0150FA6151F1680153FED7F005DEC03FE90B55A5D5D5D92C7FC
01E0C8FCADEA7FFEB5FCA36C5A222E7FAD27>I<387FFFF0B512FE6E7E816C803907E01F
F014076E7E1401811400A514015D14034A5A141F90B55A5D5DA281EBE01F6E7E14076E7E
A816F0EDF1F8A4397FFE01FBB5EBFFF08016E06C48EB7FC0C8EA1F00252F7FAD27>82
D<90387FC0E03901FFF1F0000713FF5A5AEA3FE0EB801F387F000F007E130712FE5A1403
A3EC01E06C90C7FC127E127FEA3FC013F86CB47E6C13F86C13FE6CEBFF80C614C0010F13
E0010013F0140FEC07F81403140115FC1400127812FCA46CEB01F8A26C130390388007F0
9038F01FE090B5FC15C0150000F85B38701FF81E307CAE27>I<007FB61280B712C0A439
FC03F00FA60078EC0780000091C7FCB3AB90B512C04880A36C5C222E7EAD27>I<3A7FFE
01FFF8B54813FCA36C486C13F83A07E0001F80B3AB6D133F00031500A26D5B0001147E6D
13FE6C6C485A90387F87F814FF6D5B010F13C06D5BD901FEC7FC262F80AD27>I<3A7FFC
03FFE06D5A00FF15F0007F15E0497E3A07E0007E00A46C6C5BA4EBF80100015CA46C6C48
5AA490387E07E0A56D485AA4011F5B149FA3010F90C7FCA5EB07FEA46D5AA26D5A242F7F
AD27>I<D87FE0EB7FE0486CEBFFF0A36C48EB7FE0001FC7EA0F80A76C6CEB1F00A614F0
EB81F83907C3FC3EA4149CEBC79EA30003143CA301E7137CEBEF9FA2140FA200011478A4
9038FE07F8A300005CA2EBFC0390387801E0242F7FAD27>I<393FFC1FFE387FFE3F815D
383FFC1F3903F00FE001F85B1201EBFC1F00005CEBFE3F017E90C7FCEB7F7FEB3F7E14FE
6D5AA26D5AA26D5AA21303130780130F80131F80EB3F7E147F497E017E7F141F01FC7F14
0FD801F87F14071203496C7E120701E07F3A7FFC0FFF8000FF15C06D5A497E007F158022
2E7EAD27>I<387FFFF0B512F8A314F000FCC7FCB3B3ACB512F014F8A36C13F0153A71B3
27>91 D<387FFFF0B512F8A37EEA0001B3B3ACEA7FFFB5FCA36C13F0153A7EB327>93
D<007FB512F8B612FCA46C14F81E067C7E27>95 D<13E0EA01F01207120F13E0EA1FC0EA
3F00A2127E127C12FC5AA4B4FC138013C0127FA2123F1380EA0F000C1773B227>I<3803
FFC0000F13F04813FC4813FF811380EC1FC0381F000F000480C71207A2EB0FFF137F0003
B5FC120F5A383FFC07EA7FC0130012FE5AA46C130F007F131FEBC0FF6CB612806C15C07E
000313F1C69038807F8022207C9F27>I<EA7FE0487EA3127F1203A914FF01F313C090B5
12F08181EC81FE49C67E49EB3F8049131F16C049130FA216E01507A6150F16C07F151F6D
EB3F80157F6DEBFF009038FF83FEECFFFC5D5D01F313C02601E0FEC7FC232E7FAD27>I<
EB0FFF017F13C048B512E04814F05A380FF807EA1FE0393FC003E0903880008048C8FC12
7EA212FE5AA67E127EA2007F14F0393F8001F813C0381FE003390FF80FF06CB5FC6C14E0
6C14C06C6C1300EB0FF81D207B9F27>I<EC3FF04A7EA3143F1401A9EB0FE1EB7FFD48B5
FC5A5A380FF83F381FE00F383FC007EB8003EA7F00007E1301A212FE5AA67E007E1303A2
127F6C1307EB800F381FE01F380FF03F6CB612C06C15E06C13FD38007FF9D91FE013C023
2E7EAD27>I<EB0FF8EB3FFE90B51280000314C04814E0390FFC0FF0391FE003F8EBC001
D83F8013FC48C7FC127E157E12FEB612FEA415FC00FCC8FC7E127E127F6C143C6D137E6C
7E01F013FE390FFC07FC6CB5FC000114F86C14F0013F13C0903807FE001F207D9F27>I<
EC1FF0ECFFF84913FC4913FE5BEB0FF014C0011F137CEC8000A6007FB512F0B612F8A36C
14F039001F8000B3A4003FB512C04814E0A36C14C01F2E7EAD27>I<153F90391FC0FF80
D97FF313C048B612E05A4814EF390FF07F873A1FC01FC3C0EDC000EB800F48486C7EA66C
6C485AEBC01FA2390FF07F8090B5C7FC5C485BEB7FF0EB1FC090C9FCA27F6CB5FC15E015
F84814FE4880EB8001007EC7EA3F80007C140F00FC15C0481407A46C140F007C1580007F
143F6C6CEB7F009038F807FF6CB55A000714F86C5CC614C0D90FFCC7FC23337EA027>I<
EA7FE0487EA3127F1203A9147F9038F1FFC001F713F090B5FC8114C1EC01FCEBFE005B5B
A25BB03A7FFF83FFE0B500C713F0A36C018313E0242E7FAD27>I<130F497E497EA46D5A
6DC7FC90C8FCA7383FFF80487FA37EEA000FB3A4007FB512F0B6FC15F815F07E1D2F7BAE
27>I<143C147E14FFA4147E143C1400A73801FFFE4813FFA37EC7123FB3B0147E123800
7C13FE38FE01FC1303B512F814F06C13E06C13803807FE0018407CAE27>I<EA7FE07F12
FF127FA21201A991383FFFC04A13E0A36E13C0913803F8004A5A4A5A4A5A4A5A02FFC7FC
EBF1FEEBF3FCEBF7F8EBFFFC8080143F496C7E496C7E01F87FEBF0076E7E6E7E816E7E15
7E3A7FFFC1FFF002C313F8B512E36C13C316F0252E80AD27>I<387FFF80B57EA37EEA00
0FB3B2007FB512F8B612FCA36C14F81E2E7CAD27>I<397F07C01F3AFF9FF07FC09039FF
F9FFE091B57E7E3A0FFC7FF1F89038F03FC001E0138001C01300A3EB803EB03A7FF0FFC3
FF486C01E3138001F913E701F813E36C4801C313002920819F27>I<387FE07F39FFF1FF
C001F713F090B5FC6C80000313C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C713F0
A36C018313E024207F9F27>I<EB1FE0EB7FF83801FFFE487F481480390FF03FC0391FC0
0FE0393F8007F0EB00034814F8007E1301A248EB00FCA76C1301007E14F8A2007F130339
3F8007F0A2391FE01FE0390FF03FC06CB512806C14006C5B38007FF8EB1FE01E207C9F27
>I<387FE0FFD8FFF313C090B512F0816C800003EB81FE49C67E49EB3F8049131F16C049
130FA216E01507A6150F16C07F151F6DEB3F80157F6DEBFF009038FF83FEECFFFC5D5D01
F313C0D9F0FEC7FC91C8FCAC387FFF80B57EA36C5B23317F9F27>I<90380FF03C90383F
FE7E90B5FC000314FE5A380FFC1F381FE007EBC003383F800148C7FC127EA200FE147E5A
A67E007E14FEA2007F1301EA3F80EBC003381FE007380FF81F6CB5FC7E6C147E38007FFC
EB0FF090C7FCAC91381FFFF8A24A13FC6E13F8A226317E9F27>I<397FFC03FC39FFFE0F
FF023F13804A13C0007F90B5FC39007FFE1F14F89138F00F809138E002004AC7FC5CA291
C8FCA2137EAD007FB57EB67EA36C5C22207E9F27>I<9038FFF3800007EBFFC0121F5A5A
EB803F38FC000F5AA2EC07806C90C7FCEA7F8013FC383FFFF06C13FC000713FF00011480
D8000F13C09038003FE014070078EB03F000FC1301A27E14036CEB07E0EBE01F90B512C0
1580150000FB13FC38707FF01C207B9F27>I<133C137EA8007FB512F0B612F8A36C14F0
D8007EC7FCAE1518157EA415FE6D13FC1483ECFFF86D13F06D13E0010313C0010013001F
297EA827>I<397FE01FF8486C487EA3007F131F00031300B21401A21403EBFC0F6CB612
E016F07EEB3FFE90390FF87FE024207F9F27>I<3A7FFC0FFF80486C4813C0A36C486C13
803A07C000F800EBE00100035CA2EBF00300015CA2EBF80700005CA390387C0F80A36D48
C7FCA3EB3F3FEB1F3EA214FE6D5AA36D5AA26D5A22207E9F27>I<3A7FFE07FFE000FF15
F06D5A497E007F15E03A0F80001F00A36D5B0007143EA414F0EBC1F83903E3FC7CA4EBE7
9EA200011478A301F713F8A2EBFF0F6C5CA3EBFE0790387C03E024207F9F27>I<393FFC
1FFF486C5A168016006C487E3901F807E06C6C485A4A5A017E90C7FC6D5AEB1F7E5C6D5A
13076D5A5C80497E130F497E143EEB3E3FEB7E1F90387C0F8001F87F00016D7E3803F003
3A7FFE1FFF80A2B54813C06C486C1380A222207E9F27>I<3A7FFC0FFF80486C4813C0A3
6C486C13803A07E000F800000313015D13F00001130301F85B1200A26D485A137CA29038
7E0F80133EA2011F90C7FC5CA2130F149E14BE130714FC1303A25C1301A25CA213035CA2
13075C1208EA3E0F007F5B131FD87E7FC8FCEA7FFE6C5A5B6C5AEA07C022317E9F27>I<
001FB512FE4814FFA490380001FEEC03FCEC07F8EC0FF0001EEB1FE0C7EA3FC0EC7F80EC
FF00495A495A495AEB1FE0495A495A49C7FC485A4848131E4848133F485A485A485A485A
B7FCA46C14FE20207E9F27>I<EC07F8EC3FFC14FF130315F8903807FE00EB0FF05C5CB0
131FEB7F80EA3FFFB5C7FC5BA27F003F7FEA007FEB1FC0130FB08080EB07FE903803FFF8
15FC1300143FEC07F81E3A7CB327>I<127812FCB3B3B3A21278063A70B327>I<EA7F80EA
FFF013FC13FF7E00017F38003FC0131F130FB080EB07F8ECFFF06D13FC7FA25B4913F0EC
F800EB0FE05CB0131F133F48B45A007F90C7FCB5FC13FC13F0EA7F801E3A7CB327>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr7 7 3
/Fj 3 52 df<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>49
D<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15
005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA018039030003
0012065A001FB5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01F8381C007C00
30137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC3800
01E06D7E147C80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F01
F03807FFC0C690C7FC19277DA521>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmti10 10 50
/Fk 50 124 df<14F0EB03FCA21307A3EB0FF8A314F0A3EB1FE0A314C0A3EB3F80A31400
A3137EA3137CA35BA35BA3485AA45B1203A2C8FCA8120EEA3F80127F12FFA390C7FC127E
123C163C77BB19>33 D<150C151C153815F0EC01E0EC03C0EC0780EC0F00141E5C147C5C
5C495A1303495A5C130F49C7FCA2133EA25BA25BA2485AA212035B12075BA2120F5BA212
1FA290C8FCA25AA2123EA2127EA2127CA412FC5AAD1278A57EA3121C121EA2120E7EA26C
7E6C7EA212001E5274BD22>40 D<140C140E80EC0380A2EC01C015E0A2140015F0A21578
A4157C153CAB157CA715FCA215F8A21401A215F0A21403A215E0A21407A215C0140F1580
A2141F1500A2143EA25CA25CA2495AA2495A5C1307495A91C7FC5B133E133C5B5B485A12
035B48C8FC120E5A12785A12C01E527FBD22>I<4B7E4B7EA21507A25EA2150FA293C8FC
A25DA2151EA2153EA2153CA2157CA21578A2007FB812E0B9FCA27EC7D801F0C8FCA25DA2
1403A25DA21407A25DA2140FA292C9FCA25CA2141EA2143EA2141C333275AD40>43
D<387FFFF8A2B5FCA214F0150579941E>45 D<120EEA3F80127F12FFA31300127E123C09
09778819>I<1703EF0780170FA2EF1F005F173E5FA25FA24C5A16035F4C5AA24C5AA24C
C7FCA2163E167E167C5EA24B5AA24B5A15075E4B5AA24BC8FCA2153E157E157C5DA24A5A
A24A5A14075D4A5AA24AC9FCA2143EA25C14FC5C495AA2495AA2495A130F5C49CAFCA213
3EA25B13FC5B485AA2485AA2485A120F5B48CBFCA2123EA25AA25AA2127031537FBD2A>
I<15181538157815F0140114031407EC0FE0141F147FEB03FF90383FEFC0148FEB1C1F13
001580A2143FA21500A25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA213
0FA25CA2131FA25CA2133FA291C7FC497EB61280A31D3877B72A>49
D<EC03F8EC0FFE91383C0F809138F007C0903901E003E0D903C013F09038078001020013
F8130E131E90391C6000FCEB3870EC30011370A213F013E0EC70030001016013F813C014
E0ECC00701C114F0903881800F018314E09039C7001FC001FEEB3F80D80078140090C712
7E5D4A5A4A5AEC07C0EC1F80023EC7FC14FCEB01F0EB07C0495A011EC8FC137C4914C048
4813015B485A4848130348C71380000E1407001E140F48EC1F00D83FF85B397FFFC07E39
783FFFFCEA700FD8F0075BD8E0015B6D13C0021FC7FC263A79B72A>I<16E0ED01F01503
A3150716E0A3150F16C0A2151F1680A2ED3F00A3157EA2157C15FC5D14015D14035D1407
5D140F5D141F92C7FC143EA25CECF81C153E903801F07EEB03E014C090380780FE130F49
485A133EEB7C01137801F05BEA01E03803C003EA0FFE391FFFC3F04813FB267C01FF1340
3AF0003FFFE000601307C71400EC0FE05DA3141F5DA3143F92C7FCA4143E141C24487DB7
2A>52 D<EC01FCEC0FFF023F13C091387E07E0903901F803F0903803E001D907C013F890
380F8000A249C7FCA2133EA21501017E14F0A21503017F14E0ED07C09138800F809138C0
1F0090383FF03E6E5A90381FFCF0ECFFE06D138013036D7F497F90380F7FF890383E3FFC
EB781F48486C7E3803E0073907C001FF48487E001F8090C7FC003E80127E127CA200FC14
3E5AA25DA25DA24A5A6C495A007C495A007E495A6C013FC7FC381F80FE380FFFF8000313
E0C66CC8FC253A78B72A>56 D<133C137E13FF5AA313FE13FCEA00701300B2120EEA3F80
127F12FFA31300127E123C102477A319>58 D<EE01C01603A21607160FA2161F83163FA2
167F16FF16EF150116CFED038FA2ED070FA2150E151E151C1538A203707FA2EDE007A2EC
01C014031580EC0700A2140EA25CA25C027FB5FCA291B6FC9139E00007F849481303A249
5A130791C7FC5B130E5BA25B1378137013F0EA03F8486C4A7EB56C48B512F0A3343C7BBB
3E>65 D<DB03FE130E92393FFF801E92B5EAE03C913903FE01F0913A0FF000787CDA3FC0
EB3CFC4AC7EA1FF802FE140FEB03FC49481407494815F049481403495A5C49C813E05B48
5A5B000317C0485AA2485A1880485A94C7FCA2485AA3127F5BA312FF90CBFCA41738A217
784816707E17F06C5E16015F16036C6C4A5A94C7FC001F150E6D141E000F5D6D5C6C6C49
5A6C6CEB03C0D801FEEB0F8027007F807EC8FC6DB45A010F13E0010090C9FC373D74BA3B
>67 D<0103B612FEEFFFC018F0903B0007F8000FF84BEB03FCEF00FE020F157FF03F804B
141F19C0021F150F19E05D1807143F19F05DA2147FA292C8FCA25C180F5CA2130119E04A
151FA2130319C04A153FA201071780187F4A1600A2010F16FEA24A4A5A60011F15034D5A
4A5D4D5A013F4B5A173F4A4AC7FC17FC017FEC03F84C5A91C7EA1FC04949B45A007F90B5
48C8FCB712F016803C397CB83F>I<0107B8FCA3903A000FF000034BEB007F183E141F18
1E5DA2143FA25D181C147FA29238000380A24A130718004A91C7FC5E13015E4A133E167E
49B512FEA25EECF8000107147C163C4A1338A2010F147818E04A13701701011F16C01600
4A14031880013F150718004A5CA2017F151E173E91C8123C177C4915FC4C5A4914070001
ED7FF0B8FCA25F38397BB838>I<0107B712FEA3903A000FF000074B1300187C021F153C
A25DA2143FA25D1838147FA292C8FCEE03804A130718004A91C7FCA201015CA24A131E16
3E010314FE91B5FC5EA2903807F800167C4A1378A2130FA24A1370A2011F14F0A24A90C8
FCA2133FA25CA2137FA291CAFCA25BA25B487EB6FCA337397BB836>I<0103B5D8F80FB5
12E0A390260007F8C7381FE0004B5DA2020F153F615DA2021F157F96C7FC5DA2023F5D60
5DA2027F14016092C7FCA24A1403605CA249B7FC60A202FCC712070103150F605CA20107
151F605CA2010F153F605CA2011F157F95C8FC5CA2013F5D5F5CA2017F14015F91C7FC49
1403007FD9FE01B512F8B55BA243397CB83E>72 D<0103B512F8A390390007F8005DA214
0FA25DA2141FA25DA2143FA25DA2147FA292C7FCA25CA25CA21301A25CA21303A25CA213
07A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA25C25397CB820
>I<0107B512FCA25E9026000FF8C7FC5D5D141FA25DA2143FA25DA2147FA292C8FCA25C
A25CA21301A25CA21303A25CA21307A25CA2130F170C4A141CA2011F153C17384A1478A2
013F157017F04A14E01601017F140317C091C71207160F49EC1F80163F4914FF00010207
1300B8FCA25E2E397BB834>76 D<902607FFF8923807FFF0614F13E0D9000FEFF0004F5A
A2021F167FF1EFC0141DDA1CFCEC01CF023C16DF9538039F800238ED071FA20278ED0E3F
97C7FC0270151CA202F04B5AF0707E14E0037E14E0010117FE4D485A02C0EC0380A20103
ED0701610280140EA20107ED1C0305385B14006F137049160705E05B010EEC01C0A2011E
913803800F61011CEC0700A2013C020E131F4C5C1338ED1FB80178163F04F091C8FC0170
5CA201F04A5B187E00015DD807F816FEB500C09039007FFFFC151E150E4C397AB84A>I<
902603FFF891B512E0A281D90007923807F8006F6E5A61020F5E81DA0E7F5DA2021E6D13
07033F92C7FC141C82DA3C1F5C70130EEC380FA202786D131E0307141C147082DAF00314
3C70133814E0150101016E1378030014705C8201036E13F0604A1480163F010715C1041F
5B91C7FC17E149EC0FE360010E15F31607011E15FF95C8FC011C80A2013C805F13381600
13785F01F8157CEA03FC267FFFE0143CB51538A243397CB83E>I<ED03FE92383FFFC092
38FC07F0913903E001F891390F80007C023FC77E027E8002F815804948EC0FC0EB07E049
48EC07E0131F4A15F049C81203137E01FE16F8485AA2485AA2485AA2120F5B001F16075B
123FA34848ED0FF0A448C9EA1FE0A3EF3FC0A21880177F18005F5F16015F6C4B5A4C5AA2
4C5A6C4B5A6D4A5A001F93C7FC6D147E000F5D6C6CEB03F06C6C495A6C6CEB0F806C6C01
3FC8FC90383F01FC90381FFFE0010190C9FC353D74BA40>I<0107B612F817FF1880903B
000FF0003FE04BEB0FF0EF03F8141FEF01FC5DA2023F15FEA25DA2147FEF03FC92C7FCA2
4A15F817074A15F0EF0FE01301EF1FC04AEC3F80EFFE0001034A5AEE0FF091B612C04CC7
FCD907F8C9FCA25CA2130FA25CA2131FA25CA2133FA25CA2137FA291CAFCA25BA25B1201
B512FCA337397BB838>I<0103B612F017FEEFFF80903B0007F8003FC04BEB0FF0170702
0FEC03F8EF01FC5DA2021F15FEA25DA2143FEF03FC5DA2027FEC07F818F092C7120F18E0
4AEC1FC0EF3F004A14FEEE01F80101EC0FE091B6128004FCC7FC9138FC003F0103EC0F80
834A6D7E8301071403A25C83010F14075F5CA2011F140FA25CA2133F161F4AECE007A201
7F160F180E91C7FC49020F131C007F01FE153CB5913807F078040313F0CAEAFFE0EF3F80
383B7CB83D>82 D<92383FC00E913901FFF01C020713FC91391FC07E3C91393F001F7C02
7CEB0FF84A130749481303495A4948EB01F0A2495AA2011F15E091C7FCA34915C0A36E90
C7FCA2806D7E14FCECFF806D13F015FE6D6D7E6D14E0010080023F7F14079138007FFC15
0F15031501A21500A2167C120EA3001E15FC5EA3003E4A5AA24B5AA2007F4A5A4B5A6D49
C7FC6D133ED8F9F013FC39F8FC03F839F07FFFE0D8E01F138026C003FCC8FC2F3D7ABA2F
>I<0007B812E0A25AD9F800EB001F01C049EB07C0485AD900011403121E001C5C003C17
801403123800785C00701607140700F01700485CA2140FC792C7FC5DA2141FA25DA2143F
A25DA2147FA292C9FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CEB3FF0
007FB512F8B6FCA2333971B83B>I<49B5D8F007B5FCA3D9000790C713E0DA03FCEC7F00
187C020115786F5C4D5A02005D6F495A4DC7FC6F5BEE801E5F033F5BEEC0705F92381FC1
C016E3EEE780DB0FEFC8FC16FE6F5A5EA2150382A2150782150F151CED3CFF5D4B7EDA01
E07FEDC03FDA03807FEC0700020E131F021E805C4A130F0270805C494813074948801307
49C71203011E81133E01FE81D807FF1407B500E090387FFFFC93B5FC6040397CB83E>88
D<14F8EB07FE90381F871C90383E03FE137CEBF801120148486C5A485A120FEBC001001F
5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48ECC1C0A2141F15831680143F15
87007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0222677
A42A>97 D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0F8EBE7FE
9038EF0F80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F1300A214075A
127EA2140F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F8007C5B383C03
E0383E07C0381E1F80D80FFEC7FCEA01F01C3B77B926>I<147F903803FFC090380FC1E0
90381F0070017E13784913383901F801F83803F003120713E0120FD81FC013F091C7FC48
5AA2127F90C8FCA35A5AA45AA3153015381578007C14F0007EEB01E0003EEB03C0EC0F80
6CEB3E00380F81F83803FFE0C690C7FC1D2677A426>I<ED01F815FFA3150316F0A21507
A216E0A2150FA216C0A2151FA21680A2153FA202F81300EB07FE90381F877F90383E03FF
017C5BEBF80112013803F00048485B120FEBC001121F5DEA3F801403127F01005BA21407
5A485CA2140FA248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF076C485B90
38038F8E391F0F079E3907FE03FC3901F000F0253B77B92A>I<147F903803FFC090380F
C1E090383F00F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F
80397F81FF00EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01
E0EC03C06CEB0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>I<ED07C0ED1F
F0ED3E38ED7C3CEDF8FC15F9140115F1020313F8EDF0F0160014075DA4140F5DA4141F5D
010FB512C05B16809039003F800092C7FCA45C147EA414FE5CA413015CA413035CA41307
5CA4130F5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F01278EA3FC0EA
0F80264C82BA19>I<EC07C0EC3FF09138FC38E0903901F01FF0EB03E0903807C00FEB0F
80011F1307D93F0013E05B017E130F13FE4914C01201151F1203491480A2153F12074914
00A25DA249137EA215FEA25D00031301140314076C6C485A0000131FEB787BEB3FF39038
0FC3F0EB00031407A25DA2140F5D121C007E131F5D00FE49C7FC147E5C387801F8387C07
E0381FFF80D803FEC8FC24367CA426>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5C
A3133F91C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F1400485A16
C05B49EB1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD98001131C15F8
163C003F01031338010013F0A216704814E0007E15F016E0EDE1C000FE903801E3804890
3800FF000038143C263B7BB92A>I<EB01C0EB07E014F0130F14E01307EB038090C7FCAB
13F0EA03FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B1203
A25B12075BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07
F8EA01E0143879B619>I<150E153F157FA3157E151C1500ABEC1F80EC7FC0ECF1F0EB01
C090380380F813071401130F130E131EEB1C03133C013813F0A2EB0007A215E0A2140FA2
15C0A2141FA21580A2143FA21500A25CA2147EA214FEA25CA21301A25CA213035C121C38
7E07E0A238FE0FC05C49C7FCEAF83EEA787CEA3FF0EA0FC0204883B619>I<EB0FC0EA07
FFA3EA001F1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207
A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E0EA212FE131EEAFC1CA2133C
133812F81378EA7870EA7CE0121FEA0F80123B79B915>108 D<D801E001FEEB07F03C07
F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03E1E01F261C1F78D9F3C013803C383FF001
F7800F02E01400007801C013FE007018C002805B4A4848EB1F80EAF07FD8E07E5CA20000
0207143F01FE1700495CA2030F5C0001177E495C18FE031F5C120349DA8001131C18F803
3F153C00070403133849020013F0A24B1570000F17E049017E15F019E003FEECE1C0001F
EE01E34949903800FF000007C70038143C3E2679A444>I<D801E013FE3A07F803FF803A
0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114E0007813C000708114804A485AEA
F07FEAE07EA20000140701FE5C5BA2150F00015D5B151F5E12034990383F838016031607
0007027F130049137EA2160E000F147C49141E161C5E001FEC3C7849EB1FE00007C7EA07
80292679A42F>I<147F903803FFC090380FC1F090381F00F8017E137C5B4848137E4848
133E0007143F5B120F485AA2485A157F127F90C7FCA215FF5A4814FEA2140115FC5AEC03
F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F00147E6C13F8380F83F03803FFC0
C648C7FC202677A42A>I<3903C003F0390FF01FFC391E783C0F381C7C703A3C3EE03F80
38383FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5BA2120012015BA31203
5BA312075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>114
D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F00001130313F0A2
15E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C01300143F141F14
0F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD801FEC7FC
1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2B6FC
3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB0078
147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>I<13F8D8
03FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270013F131F
00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349EBFC0EA2
0201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F83C78E090
393FF03FC090390FC00F00272679A42D>I<01F0130ED803FC133FD8071EEB7F80EA0E1F
121C123C0038143F49131F0070140FA25BD8F07E140000E08013FEC6485B150E12015B15
1E0003141C5BA2153C000714385B5DA35DA24A5A140300035C6D48C7FC0001130E3800F8
3CEB7FF8EB0FC0212679A426>I<903907E007C090391FF81FF89039787C383C9038F03E
703A01E01EE0FE3803C01F018013C0D8070014FC481480000E1570023F1300001E91C7FC
121CA2C75AA2147EA214FEA25CA21301A24A1370A2010314F016E0001C5B007E14010107
14C000FEEC0380010F1307010EEB0F0039781CF81E9038387C3C393FF03FF03907C00FC0
27267CA427>120 D<13F0D803FCEB01C0D8071EEB03E0D80E1F1307121C123C0038140F
4914C01270A249131FD8F07E148012E013FEC648133F160012015B5D0003147E5BA215FE
00075C5BA214015DA314035D14070003130FEBF01F3901F87FE038007FF7EB1FC7EB000F
5DA2141F003F5C48133F92C7FC147E147C007E13FC387001F8EB03E06C485A383C1F80D8
0FFEC8FCEA03F0233679A428>I<B712FCA2260279962A>123 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmbx12 14.4 36
/Fl 36 122 df<171FA24D7EB3B3A4007FBD1280A2BE12C0A36C1C80A2CAD83F80CAFCB3
B3A471CBFCA25A5B79CA69>43 D<B712F0AB240B7F9F2D>45 D<157815FC14031407141F
14FF130F0007B5FCB6FCA2147F13F0EAF800C7FCB3B3B3A6007FB712FEA52F4E76CD43>
49 D<EC3FFE0103B512E0010F14FC013F14FF90B712C048D9C07F7F2703FE000F13F8D8
07F801037FD80FE06D7F48486D7F48488001F01680486C6E13C07F486C6E13E07FA27013
F0A56C5AA26C5AEA0FF0EA03C0C914E05EA218C05E1880A24C13005F4C5A4B5B5F4B5B5F
4B5B4B90C7FC4B5A5E4B5AED7FE04B5A4A5B4A48C8FC4A5A5D4A48EB01F04A5AEC3F804A
C7FC02FEEC03E0495A495A495A495AD91F80140749C8FC013E150F017FB7FC90B812C05A
5A5A5A5A5A5AB9FC1880A4344E79CD43>I<91380FFFC091B512FC0107ECFF80011F15E0
90263FF8077F9026FF800113FC4848C76C7ED803F86E7E491680D807FC8048B416C08048
6D15E0A4805CA36C17C06C5B6C90C75AD801FC1680C9FC4C13005FA24C5A4B5B4B5B4B13
C04B5BDBFFFEC7FC91B512F816E016FCEEFF80DA000713E0030113F89238007FFE707E70
13807013C018E07013F0A218F8A27013FCA218FEA2EA03E0EA0FF8487E487E487EB57EA3
18FCA25E18F891C7FC6C17F0495C6C4816E001F04A13C06C484A1380D80FF84A13006CB4
4A5A6CD9F0075BC690B612F06D5D011F1580010302FCC7FCD9001F1380374F7ACD43>I<
177C17FEA2160116031607160FA2161F163F167FA216FF5D5DA25D5DED1FBFED3F3F153E
157C15FCEC01F815F0EC03E01407EC0FC01580EC1F005C147E147C5C1301495A495A5C49
5A131F49C7FC133E5B13FC485A5B485A1207485A485A90C8FC123E127E5ABA12C0A5C96C
48C7FCAF020FB712C0A53A4F7CCE43>I<D80380150ED807E0157E01FEEC03FED9FFF013
7F91B65A5F5F5F5F5F94C7FC5E5E16F016C093C8FC15F801E190C9FC01E0CAFCABEC0FFF
027F13F001E3B512FE01E76E7E9026FFF8077FDAC0017F49C713F8496E7E49143F498149
6E7E6C481680C9FC18C08218E0A418F0A3EA0FE0487E487E487E487EA418E0A35B6C484A
13C05B491680003EC85A003F17006C6C4A5A6D5D6C6C4A5AD807F8495BD803FE01075B27
01FFC03F5B6C90B65A013F4AC7FC6D14F8010314C09026007FF8C8FC344F79CD43>I<ED
0FFF92B512E0020780021F14FC91397FFE03FE903A01FFF0007F4901C0EB3F804990C712
1F4948EC7FC0494814FF49484913E049485B01FF5C485BA2485B5AA2486F13C04A6D1380
486F1300177E94C7FC5AA291CAFC5AA21508913801FFF8020713FFB54814C04A14F04AC6
6C7E023C6D7E4A6D7E4A6D7E7013804A15C0A24A15E07013F05C18F8A491C714FCA37EA6
7EA46C17F880A27E18F06C5D18E06C6D15C07E6E4913806C6D15006D6C495A6D6CEB7FFC
6DB448485A6D90B55A010315C0010092C7FC023F13FC020713C0364F7ACD43>I<91B5FC
010F14F8017F14FF90B712C00003D9C00F7F2707FC00017FD80FE06D7F48486E7E48C87F
D87FE06E7E7F7F486C1680A66C5A18006C485C6C5AC9485A5F4B5B4B5B4B5B4B5B4B90C7
FC16FC4B5A4B5A16C04B5A93C8FC4A5A5D14035D5D14075DA25D140FA25DAB91CAFCAAEC
1FC04A7EECFFF8497FA2497FA76D5BA26D5BEC3FE06E5A315479D340>63
D<171F4D7E4D7EA24D7EA34C7FA24C7FA34C7FA34C7FA24C7FA34C8083047F80167E8304
FE804C7E03018116F8830303814C7E03078116E083030F814C7E031F81168083033F8293
C77E4B82157E8403FE824B800201835D840203834B800207835D844AB87EA24A83A3DA3F
80C88092C97E4A84A2027E8202FE844A82010185A24A820103854A82010785A24A82010F
855C011F717FEBFFFCB600F8020FB712E0A55B547BD366>65 D<932601FFFCEC01C0047F
D9FFC013030307B600F81307033F03FE131F92B8EA803F0203DAE003EBC07F020F01FCC7
383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901F882494982494982494982
4949824990CA7E494883A2484983485B1B7F485B481A3FA24849181FA3485B1B0FA25AA2
98C7FC5CA2B5FCAE7EA280A2F307C07EA36C7FA21B0F6C6D1980A26C1A1F6C7F1C006C6D
606C6D187EA26D6C606D6D4C5A6D6D16036D6D4C5A6D6D4C5A6D01FC4C5A6D6DEE7F806D
6C6C6C4BC7FC6E01E0EC07FE020F01FEEC1FF80203903AFFE001FFF0020091B612C0033F
93C8FC030715FCDB007F14E0040101FCC9FC525479D261>67 D<BB12FEA5D8000701F8C7
00077FF0007F191F190785858586861B80A21A1FA31A0FA41BC006F81307A497C7FCA317
01A317031707170F177F92B6FCA59238F8007F170F170717031701A31700A795C9FCB3B8
12F8A54A517CD055>70 D<B812C0A5D8000701F8C7FCB3B3B3B2B812C0A52A527CD132>
73 D<BAFC19F819FF1AE086D8000701F0C7001F13FC060113FF726C13807313C0070F13
E01BF0857313F81BFCA27313FEA41BFFA81BFEA31BFC61A21BF84F13F04F13E0614F13C0
4F13004E485A061F5B92B812F01AC04FC7FC19E003F8CBFCB3AEB812C0A550527CD15C>
80 D<B912F0F0FF8019F819FF1AC0D8000701F0C714F0060F7F060113FE727F737F737F
85737F87A2737FA387A863A2616363A24F5B4F5B4F90C8FC4F5A06035B060F13F095B512
C092B8C9FC19F819E019F89226F0000313FE9439007FFF80727F727F727F727F727F8684
A28684A787A71D1C75133EA38575137E73157C7513FC731401B86C6D9038F803F8070390
38FE07F07390B512E0736C14C0080F1400CEEA7FFC5F537CD164>82
D<003FBC1280A59126C0003F9038C0007F49C71607D87FF8060113C001E08449197F4919
3F90C8171FA2007E1A0FA3007C1A07A500FC1BE0481A03A6C994C7FCB3B3AC91B912F0A5
53517BD05E>84 D<B700FC017FB600FE91B612F0A5D8003F01C0C8001F01E0C9EBF8006F
71EE0FC06D7161876F1C1F6D7196C7FC6F8373606D1E3E6F836D7160876F1CFC6D666F4B
801F016D66704A806E525A88704A17076E059F5F70021F80080F160F6E6570023F806EDC
3E074CC8FC8870027E5F6EDC7C03163E7002FC804F6C167E6E1C7C700101814F6C16FC6E
745B70010317016E4C6D5D060716C00580496D14036F63DDC00F16E04F6D14076F07F05B
DDE01F170F6F92C76C5D1DF8DDF03E6E141F6F98C9FCDDF87E16FC067C6E5C6FF1FE3EDD
FCFC177E6F4A6E147C1DFFDDFFF06E14FC6F62A24E816F62A270496F5BA24E817061A295
C97E7061A270487090CAFCA37048705AA24D1601040360A27048705A84537DD18B>87
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001FFD97FFC
491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A4892C8FC5B
A312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D
147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC020113E0
33387CB63C>99 D<4DB47E0407B5FCA5EE001F1707B3A4913801FFE0021F13FC91B6FC01
0315C7010F9038E03FE74990380007F7D97FFC0101B5FC49487F4849143F484980485B83
485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C7E6C6D5C6C6D49B5
FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F0101ECFE0FD9003F13
F8020301C049C7FC41547CD24B>I<913803FFC0023F13FC49B6FC010715C04901817F90
3A3FFC007FF849486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC48
17E0A248815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14
037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0F
FFC03FF8010390B55A010015C0021F49C7FC020113F034387CB63D>I<ED3FFC0203B5FC
020F14C0023F14E09139FFF81FF0499038C03FF849EB807F49903800FFFC495A495AA249
5AA2EE7FF8495AEE3FF0EE0FC093C7FCAEB712E0A526007FF8C8FCB3B3A7007FB512FEA5
2E547CD329>I<DA3FFF14FF0103B5D8F00713C0010FDAFC1F13E0013FECFF7F90267FFC
0F9038FF9FF09026FFE001EBF83F48496C13E0484990387FF01F4890C7D83FF813E04893
38FC0FC0F0078048486E6CC7FCA2003F82A9001F5EA26C6C4A5AA26C5E6C6D495A6C6D49
5A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC01C314F02607C03F90C9FC91CBFCA2120F
A37FA213F813FE90B7FC6C16F817FF18C06C836C836C836D828448B9FC12074848C70003
1480D81FF8EC003F4848150748486F13C083485A83A56D5D007F18806D5D003F18006C6C
4B5AD80FFEED1FFC6C6C6CEC7FF86C01E049485A6C01FE011F5B6C6CB71280010F03FCC7
FC010115E0D9000F01FCC8FC3C4F7CB543>I<EB3FF0B5FCA51203C6FCB3A4EE1FFC93B5
12C0030314F0030F8092391FE07FFC92393F001FFE037C8003F07FDAF1E081ECF3C0DAF7
807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542537BD24B>I<137F497E000313
E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612
E0A51B547BD325>I<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD225>108
D<D93FF0D91FFCEDFFE0B591B500C0010713FE030302F0011F6D7E030F6E017F8092271F
E07FFCD9FF037F922A3F001FFE01F8007F0003027C9126FF03E080C602F06DD90780137F
DAF1E0038FC77FDAF3C0159EDAF7806D01BC143F07FC8102FFC75C4A5EA24A5EA44A5EB3
ACB6D8F807B6D8C03FB512FEA567367BB570>I<D93FF0EB1FFCB591B512C0030314F003
0F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502
FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>I<913801FFE0021F13FE91B6
12C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F4849
6D7F4A147F48834890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC007F1880A3
003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE
011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A387CB643>I<
903A3FF001FFE0B5010F13FE033FEBFFC092B612F002F301017F913AF7F8007FFE0003D9
FFE0EB1FFFC602806D7F92C76C7F4A824A6E7F4A6E7FA2717FA285187F85A4721380AC1A
0060A36118FFA2615F616E4A5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EBFFFC9126FB
FE075B02F8B612E06F1480031F01FCC8FC030313C092CBFCB1B612F8A5414D7BB54B>I<
90397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013
FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612
FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307
D81FE0130148487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15
F86C14FF16C06C15F06C816C816C81C681013F1580010F15C01300020714E0EC003F0307
13F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC
7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB6
35>I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FC
A426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEB
FFF86D6C5B021F5B020313802A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA50003ED
001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC090
3A0FFFC03F836D90B51203010114FE6D6C13F8020701E091C7FC42377BB54B>I<B6D8E0
7FB5D8C003B512C0A5000101F0C701F0C7381FF8006E027FED07E06C715DA26E023F150F
017F705DA26E181F013F4B6C92C7FC6E606D70143E94B5FC6F177E6D4A6E137C03C001F3
15FC6D715B160303E001E114016D020702E05B03F013C06D71485A160F03F8D9807F1307
6D05F85B93381F003F03FC160F027F4902FC5BDBFE3E011F131F023F04FE90C8FC167EDB
FF7C010F5B6E01FCECFF3E4C6D137E6E5FA24C7F6E5F4C7F6E5FA24C7F6E5F4C147FA26E
5F93C8123F6F5EA2033E6FC9FC5A367DB461>119 D<B600F00107B5FCA5C601F8C8EA7F
E06EED3F00A26D6C153E187E013F167C6E15FC6D5E6F13016D5E6F13036D5E8117076D6D
5C170F6D6D5C171F6D93C7FC6F5B027F143E6F137E023F147C6F13FCA26E6D5A16816EEB
C1F016C36E5C16E76E5C16FF6E5CA26E91C8FCA36F5AA26F5AA26F5AA26F5AA26F5AA35E
150F5E151F93C9FC5DD81FC0133E486C137E486C137C486C13FC5D14015D14034A5A6C48
485A49485A263FC07FCAFCEB81FE6CB45A6C13F000035BC690CBFC404D7DB447>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmr10 10 81
/Fm 81 128 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F
8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A328
01F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F0903807E00790381F800FEB3F
00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B
7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC00380903C
1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03030203
C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500
C1B51280A3413B7FBA45>I<121C127FEAFF80A8EA7F00AB123EAB121CABC7FCA8121C12
7FEAFF80A5EA7F00121C093C79BB17>33 D<001C131C007F137F39FF80FF80A26D13C0A3
007F137F001C131C00001300A40001130101801380A20003130301001300485B00061306
000E130E485B485B485B006013601A197DB92A>I<121C127FEAFF80A213C0A3127F121C
1200A412011380A2120313005A1206120E5A5A5A12600A1979B917>39
D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA212075B120F90C7FC
A25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E
1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>I<12C07E12707E7E7E120F
6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7FA21480A3EB07C0A6EB03E0
B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A25BA2485A485AA2485A48C7
FC120E5A5A5A5A5A13527CBD20>I<15301578B3A6007FB812F8B912FCA26C17F8C80078
C8FCB3A6153036367BAF41>43 D<121C127FEAFF80A213C0A3127F121C1200A412011380
A2120313005A1206120E5A5A5A12600A19798817>I<B512FCA516057F941C>I<121C127F
EAFF80A5EA7F00121C0909798817>I<150C151E153EA2153C157CA2157815F8A215F014
01A215E01403A215C01407A21580140FA215005CA2141E143EA2143C147CA2147814F8A2
5C1301A25C1303A2495AA25C130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B
1201A25B1203A25B1207A25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A
12601F537BBD2A>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007
147C48487FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C15
80A36C15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FC
EB03F8233A7DB72A>I<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB5
12F0A31C3879B72A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E
486D7E123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D
4A5A5D140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B491303
48481400485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF
4913C03901F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC8
5A1401A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E
7EED7F80A216C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070
ECFF006C495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A
>I<1538A2157815F8A2140114031407A2140F141F141B14331473146314C313011483EB
030313071306130C131C131813301370136013C01201EA038013005A120E120C5A123812
305A12E0B712F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780
133C9038F003F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE903878
0F803907E007E090388003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490
C71300485C12E000605C12700030495A00385C6C1303001E495A6C6C485A3907E03F8000
01B5C7FC38007FFCEB1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90
383F800790387E001F49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2
485AA3127F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E
497FA249148016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B
15FE6C6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<123012
38123E003FB612E0A316C05A168016000070C712060060140E5D151800E01438485C5D5D
C712014A5A92C7FC5C140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495A
A3133FA5137FA96DC8FC131E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901
E001F848486C7E4848137C90C77E48141E000E141F001E80A3121FA27F5D01E0131E6C6C
133E01FC133C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13
F801F07F3903E07FFE3907801FFF48486C1380481303003E6D13C0003CEB007F007C143F
0078EC0FE000F814075A1503A21501A36C15C012781503007C15806CEC07006C5C6C6C13
1ED807E0137C3903F803F0C6B55A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF
017F13C09038FC07E03903F803F048486C7E48486C7E49137E121F48487FA2007F158090
C7FCA248EC1FC0A616E0A56C143FA27F123F001F147FA26C6C13FF3907E001DF0003149F
3801F0033900FC0F1FD93FFC13C0EB07F090C7FC153F1680A316005D000F147E487E486C
5BA24A5A4A5A49485A6C48485A001C495A260F807FC7FC3807FFFC000113F038003FC023
3A7DB72A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C09
2479A317>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127F5A1380A4127F121D1201
A412031300A25A1206A2120E5A121812385A1260093479A317>I<EB3FE03801FFFE3907
C03F80390E000FC0003CEB07F000301303007014F8007C130100FE14FC7EA4127E003CEB
03F8C7FCEC07F0A2EC0FE0EC1F80EC3F00147E147C5C495A5C495A5CA249C7FCA31306AA
90C8FCA8130EEB3F80497EA56D5A010EC7FC1E3B7CBA27>63 D<1538A3157CA315FEA34A
7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A20270
7FEC6003A202C07F1501A2D901807F81A249C77F167FA20106810107B6FCA24981010CC7
121FA2496E7EA3496E7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B512
FEA3373C7DBB3E>65 D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E70
7EA2707EA283A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1F
E0EE07F0707E707E83707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF848
6DEB7FF0B812C094C7FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F890
3A01FF807E07903A03FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE
153F12014848151F4848150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FC
AD127F6DED0180A3123F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D0000161801
7F15386D6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC02
0F13F002011380313D7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE
0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4
EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8
C7FC16F816C036397DB83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E
170EA31706A317078316C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A215
00A21860A318E093C712C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9
FCA333397DB839>I<B812F8A30001903880001F6C90C71201EE00FC177C173C171CA217
0CA4170E1706A2ED0180A21700A41503A21507151F91B5FCA3EC001F15071503A21501A6
92C8FCAD4813C0B612C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF80
3F03903A03FC000787D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848
150F48481507A248481503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E93
38007FE0EF3FC0A2123F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C
14EFD90FF8EB03C7D903FEEB0783903A00FFC03F0191393FFFFC00020F01F01300020013
80383D7CBA41>I<B648B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C7
1201B3A6486D497EB648B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497E
B612C0A31A397EB81E>I<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F80EAFF
C0A44A5A1380D87F005B0070131F6C5C6C495A6C49C7FC380781FC3801FFF038007F8023
3B7DB82B>I<B649B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F
4C5A4C5A4CC8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E14
0E4A6C7E4A6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2
707E707EA2707E707F8484486D497FB6011FEBFF80A339397DB841>I<B612E0A3000101
C0C8FC6C90C9FCB3AD1718A517381730A31770A317F0A216011603160FEE1FE0486D13FF
B8FCA32D397DB834>I<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE015
33A3D9C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C13
0CA36E6C1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2
ED7F06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512
F8A2ED018045397DB84C>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F00
1706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E
168080ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3F
E6A2EE1FF6EE0FFEA216071603A216011600A2177E486C153E487ED80FFC151EB500C014
0EA2170637397DB83E>I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049
486D7ED93F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848
ED1FC0A2001F17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150F
A3003F17F0A26C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A
5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFF
E0020390C8FC363D7BBA41>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0F
E0EE07F0EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC092
3801FF0091B512FC16F091C9FCB3A5487FB6FCA330397DB839>I<B612FEEDFFE016F800
0190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE
3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E707EA2161F83A583
A6F00180A217F8160F1803486D01071400B66D6C5A04011306933800FE0ECAEA3FFCEF07
F0393B7DB83D>82 D<D90FF813C090383FFE0190B512813903F807E33907E000F7484813
7F4848133F48C7121F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C
7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F02
0713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C
14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190
C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F000781600
00701770A300601730A400E01738481718A4C71600B3B0913807FF80011FB612E0A33539
7DB83C>I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B2170E
6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7FC
91387F807E91381FFFF8020713E09138007F80373B7DB83E>I<B5D8FC07B5D8F001B5FC
A30007902780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C15
00A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE0C
3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC9338
C003FCA203805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6EC
7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A2020093
C8FC4B80503B7EB855>87 D<007FB590383FFFFCA3C601F801071380D97FE0D903FCC7FC
013FEC01F06D6C5C5F6D6C5C6D6C13034CC8FC6D6C1306160E6D6C5B6DEB801816389138
7FC0306E6C5A16E06E6C5A91380FF18015FB6EB4C9FC5D14036E7EA26E7F6F7EA24B7E15
DF9138019FF09138038FF8150F91380607FC91380E03FE140C4A6C7EEC38000230804A6D
7E14E04A6D7E49486D7E130391C76C7E01066E7E130E010C6E7E011C1401013C8101FE82
2607FF80010713E0B500E0013FEBFF80A339397EB83E>I<B500FE91383FFFE0A3000301
E0913807FE00C649EC03F0017F6F5A606D6C5D6D6C140395C7FC6D6C1406A26D6C5C6D6C
141C17186D6C143817306D6D5B6E6C13E05F91383FE0015F91381FF003DA0FF890C8FC16
06913807FC0E160C913803FE1C913801FF185E6E13B016E0157F6F5AB3A24B7E023FB512
C0A33B397FB83E>I<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>91
D<3901800180000313033907000700000E130E485B001813180038133800301330007013
7000601360A200E013E0485BA400CE13CE39FF80FF806D13C0A3007F137FA2393F803F80
390E000E001A1974B92A>I<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>I<EB1F
E0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4
147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C
13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C02627
7DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F809039
F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FEA216
FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800FFF8
C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F83907E0
01FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14
067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB
07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F8
01EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E127F
A27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381FFE
0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807
E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2
127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03E0
90381FFF80903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790383F0F
F0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B
7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C0
3A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC
38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F
80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F14
07D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA
03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF70013FE
496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA5
6C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01C0
EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E00FF
13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012FFA3
120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E14381478
14FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F811680
ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD487E
B512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903B
F1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3
495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3F
FCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB5
00C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848137C48
487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15
F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890
387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E
9039F3801F803A0FF7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA316
7FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E0
7E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381FFE01
90387E07819038FC01C33903F000E3000714774848133749133F001F141F485A150F48C7
FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39007E07
8F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FFEB7F
C09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3
A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F00707F
12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F
141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038
C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801
F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D8
03F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000EC77
F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538803FFE
A33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E017E13
0CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA214
FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48
017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038EF
C00C15C7A2D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC6001360
A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E
0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E13
1C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114
CF903801C7E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E48
6C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF06C48
EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F
1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A2147014
60A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C
>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1FC0EC3F80
0060137F150014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA2485A485A
0007140E5B4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F247EA325>
I<BD12C0A25202809653>124 D<001C131C007F137F39FF80FF80A5397F007F00001C13
1C190978B72A>127 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmsy10 12 1
/Fn 1 25 df<D907F01780D91FFEEE01C090387FFF8090B512E0488048803907F80FFC27
0FE001FE1503271F80007F168090C7EA1FC0003E6E6C1407003C6E6C150000386E6C5C00
786E6C5C00706E6C143EDC3F80137E00F092391FE001FC4892390FFC07F870B55A705C70
5C706C5BDD1FFEC7FC0040EE03F842187BA44D>24 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmtt12 12 19
/Fo 19 122 df<141FA24A7EB0007FB71280A2B812C0A36C1680A2C7D83F80C7FCB06EC8
FCA22A2B7CB333>43 D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B6C8A33
>46 D<167816F8ED01FCA21503A2ED07F8A2ED0FF0A2ED1FE0A216C0153FA2ED7F80A2ED
FF00A24A5AA25D1403A24A5AA24A5AA24A5AA25D143FA24A5AA24AC7FCA2495AA25C1303
A2495AA2495AA25C131FA2495AA2495AA249C8FCA25B1201A2485AA2485AA2485AA25B12
1FA2485AA2485AA248C9FCA25AA2127CA2264D7AC433>I<121FEA3F80EA7FC0EAFFE0A5
EA7FC0EA3F80EA1F00C7FCB3A3121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B2B
6CAA33>58 D<EB1FFC90B57E000314E048804814FC48809038F007FFEBE0016E7F153F6C
48806C48131FC87F150FA5EC0FFF49B5FC131F137F48B6FC0007140F4813C0381FFC00EA
3FF0EA7FC05B48C7FC5AA56C141F7E6D137FD83FE0497ED9F807EBFFF06CB712F87E6C14
F36C14C1C69138003FF0D91FF090C7FC2D2E7BAC33>97 D<ECFFF0010713FE011FEBFF80
4914C04914E048B612F048EBC01F9038FE000F485A485A4848EB07E049EB03C0484890C7
FC5BA2127F90C9FCA25A5AA97E7EA27F003FEC01F06DEB03F86C7E6D13076C6C14F06C6C
130F01FFEB1FE06CEBE07F6C90B512C06C1580013F14006D13FC01075B010013C0252E79
AC33>99 D<ED7FF84B7E5CA280157F1501ABEB01FF010713C1011F13F1017F13F990B6FC
5A4813813907FE003FD80FF8131F49130F48481307491303123F491301127F90C7FCA25A
5AA97E7E15037F123F6D1307A26C6C130F6D131F6C6C133F6C6C137F2603FF81B512F091
B612F8C602FD13FC6D13F96D01E113F8010F018013F0D901FEC8FC2E3E7DBC33>I<ECFF
80010713F0011F13FC497F90B6FC48158048018013C03A07FE003FE001F8EB0FF0484813
07484814F8491303003F15FC491301127F90C7FC16FE15005A5AB7FCA516FC48C9FC7E7E
A36C7E167C6C6C14FE7F6C7E6D13016C6CEB03FC6CB4130F6C9038C03FF86C90B512F06D
14E06D14C0010F1400010313FC9038007FE0272E7BAC33>I<ED3FE0913801FFFC020713
FE141F4A13FF5CECFFC015004948137E4A133C010314005CA8003FB612F84815FCB7FCA3
6C15F8260003F8C7FCB3AD003FB612804815C0A46C1580283E7DBD33>I<D901FEEB1FE0
903A0FFFC0FFF0013F01F313F84990B512FC90B7FC5A48010313E12607FC00EB80F84901
7F1360484890383FC00049131FA2001F8149130FA66D131F000F5DA26D133F6C6C495A6D
13FF2603FF0390C7FCECFFFE485C5D5DD80FCF13C0D981FEC8FC0180C9FCA27FA26C7E7F
90B512FC6CECFFC06C15F0000715FC4815FF4816809038E0000748489038007FC090C8EA
1FE048150F007E150700FE16F0481503A56C1507007E16E0007F150F6C6CEC1FC001E014
7FD81FF8903801FF80270FFF801F13006C90B55A6C5DC615F0013F14C0010F91C7FC0100
13F02E447DAB33>I<EA3FFC487E12FFA2127F123F1200AB4AB4FC020713C0021F13F002
7F7F91B5FC90B67EED07FEECF801ECF0004A7F4A7F5CA291C7FCA35BB3A43B3FFFF80FFF
FC486D4813FEB56C4813FFA26C496C13FE6C496C13FC303D7FBC33>I<14E0EB03F8A249
7EA36D5AA2EB00E091C8FCAA383FFFF8487FA47EEA0001B3AD007FB612C0B712E016F0A2
16E06C15C0243E78BD33>I<4AB4FC263FFC0713C0267FFE1F13F000FF017F7F91B5FC6C
B67E6CEC07FEC6EBF801ECF0004A7F4A7F5CA291C7FCA35BB3A43B3FFFF80FFFFC486D48
13FEB56C4813FFA26C496C13FE6C496C13FC302C7FAB33>110 D<EC01FE3A3FFC0FFFC0
486C4813F000FF017F7F91B512FE6CB7FC6CEBFE07C6D9F800138002E0EB7FC04AEB3FE0
4A131FEE0FF091C7FC16074915F81603A217FC1601A9160317F8A26D140717F06E130F17
E06E131FEE3FC06E137F9139F801FF80DAFE07130091B55A495C6E5B6E13E0020F1380DA
03FEC7FC91C9FCAF383FFFF8487FB57EA26C5B6C5B2E427FAB33>112
D<90381FFE0F90B5EA8F80000314FF120F5A5AEBF007387F800190C7FC00FE147F5A153F
A37E007FEC1F0001C090C7FCEA3FF8EBFFC06C13FF6C14E0000314F8C680011F13FF0100
1480020713C0EC007FED1FE0007C140F00FEEC07F01503A27EA27F15076D14E06D130F6D
EB3FC09038FE01FF90B61280160000FD5C00FC14F8D8F83F13E0D8780790C7FC242E79AC
33>115 D<EB03C0497E130FAA003FB612FC4881B7FCA36C5D26000FE0C8FCB3A3161FEE
3F80A5167F6E140001075C6E5A9138FE07FE6DB55A6D5C6D5C6E5B021F1380DA07FCC7FC
29387EB633>I<D83FFCEB1FFE486C497E00FF5CA2007F80003F800000EC007FB3A75EA2
5DA26D5B90387F800FDAE03F13FC6DB612FE17FF6D806D01FE13FE01039038F83FFC0100
01C0C7FC302C7FAA33>I<3B7FFF8007FFF8B56C4813FC6E5AA24A7E6C496C13F8D80FC0
C7EA0FC06D141F00071680A56D143F00031600A3EC0FC0EC1FE0A23A01F83FF07EA3EC7F
F8147CA20000157C9039FCFCFCFCA3ECF87CA2017C5C017D137EECF03EA2017F133FA26D
486C5AA3ECC00F90390F8007C02E2B7EAA33>119 D<3B7FFF801FFFE0B56C4813F06E48
13F8A24A6C13F06C496C13E0D803F8C7EAFC00000114015E7F000014036D5C137EA2017F
495A7FA26E485A131FA26D6C485AA214E0010749C7FCA214F01303157EEB01F8A2157C01
0013FC14FC5D147C147DEC3FF0A36E5AA36E5AA2141F5DA2143F92C8FCA3147EA214FE00
3F5B1301387F81F81383EB87F0139FEBFFE06C5B5C6C90C9FCEA0FFCEA03F02D427DAA33
>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmr12 12 34
/Fp 34 122 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A3120113
80120313005A1206120E5A5A5A12600B1D78891B>44 D<14FF010713E090381F81F89038
3E007C01FC133F4848EB1F8049130F4848EB07C04848EB03E0A2000F15F0491301001F15
F8A2003F15FCA390C8FC4815FEA54815FFB3A46C15FEA56D1301003F15FCA3001F15F8A2
6C6CEB03F0A36C6CEB07E0000315C06D130F6C6CEB1F806C6CEB3F00013E137C90381F81
F8903807FFE0010090C7FC28447CC131>48 D<143014F013011303131F13FFB5FC13E713
071200B3B3B0497E497E007FB6FCA3204278C131>I<EB03FE90381FFFC0017F13F03901
F80FFC3903C001FE48486C7E000EC7EA7F8048EC3FC0ED1FE04815F00030140F007015F8
00601407126CB415FC7F7F1503A46C4813076CC7FCC8FC16F8A2150F16F0151F16E0A2ED
3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A5A4A5A4AC7FC147C5C5C495A495A495A49C712
0C131E5B013814185B5B485A4848143848C81230000E1570001FB612F0A25A5AB712E0A3
26427BC131>I<14FF010713E0011F13F890387F00FE01FC133FD801F0EB1F804848EB0F
C049EB07E00007EC03F048481301A290C713F8481400A47FA26D130116F07F6C6CEB03E0
13FC6C6CEB07C09039FF800F806C9038C01F006CEBF03EECF87839007FFEF090383FFFC0
7F01077F6D13F8497F90381E7FFFD97C1F1380496C13C02601E00313E048486C13F00007
9038007FF84848EB3FFC48C7120F003EEC07FE150148140016FF167F48153FA2161FA56C
151E007C153EA2007E153C003E157C6C15F86DEB01F06C6CEB03E06C6CEB07C0D803F8EB
1F80C6B4EBFF0090383FFFFC010F13F00101138028447CC131>56
D<16C04B7EA34B7EA34B7EA34B7EA3ED19FEA3ED30FFA203707FED607FA203E07FEDC03F
A2020180ED801FA2DA03007F160FA20206801607A24A6D7EA34A6D7EA34A6D7EA2027081
0260147FA202E08191B7FCA249820280C7121FA249C87F170FA20106821707A2496F7EA3
496F7EA3496F7EA201788313F8486C83D80FFF03037FB500E0027FEBFFC0A342477DC649
>65 D<B8FC17E017FC00019039C00003FF6C6C4801007FEF3FC0717E717E717E84170384
170184A760A21703601707604D5A4D5AEF7FC04DC7FCEE03FEEE3FF091B65A17FC0280C7
B47EEF1FC0EF0FF0717E717E717E717E1980187F19C0A2183F19E0A8F07FC0A2198018FF
4D1300A24D5AEF0FFC4D5AEF7FE048486C903803FFC0B9C7FC17FC17C03B447CC345>I<
DB0FFE146092B500C013E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903
FCEC03C74948EC01E74948EC00FF4948157F4948153F4948151F49C9120F485A49160712
0348481603A248481601A248481600A2123FA2491760127FA31900485AAE6C7EA21960A2
123F7FA2001F18E07F000F18C0A26C6C160119806C6C160312016DEE07006C6C16066D6C
150E6D6C5D6D6C5D6D6C15786D6C5D6D6C4A5AD900FFEC0780DA3FC0011FC7FCDA0FFC13
FC0203B512F0020014C0DB0FFEC8FC3B487BC546>I<DB0FFE146092B500C013E0020314
F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC03C74948EC01E74948EC00FF
4948157F4948153F4948151F49C9120F485A491607120348481603A248481601A2484816
00A2123FA2491760127FA396C7FC485AAD4CB612C06C7EA293C7387FF000725A003F171F
7FA2121F7F120FA26C7EA26C7E6C7EA26C7E6D7E6D6C153F6D7E6D6C157F6D6C15E7D903
FEEC01C7D900FFEC0383DA3FE0EB0F01DA0FFCEBFE000203B500F81360020002E090C7FC
DB0FFEC9FC42487BC54D>71 D<B612F0A3C6EBF0006D5A6D5AB3B3B3A4497E497EB612F0
A31C447DC323>73 D<B56C933807FFFC6E5EA20001F1FE0026006FE0EE1BF8A3D967F016
33A2D963F81663A3D961FC16C3A3D960FEED0183A2027FED0303A36E6C1406A36E6C140C
A26E6C1418A36E6C1430A36E6C1460A26E6C14C0A36E6CEB0180A3037FEB0300A292383F
8006A36F6C5AA36F6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7FC13F0A2486C14
3ED80FFFEF0FFEB500F0011C0107B512FCA34E447BC359>77 D<B56C020FB5FC8080C604
0013F06D6CED1F80D96FF8ED0F00A2D967FC1506EB63FEA2EB61FF01607FA26E7E6E7EA2
6E7E6E7EA26E7E6E7EA26E7E6E7FA26F7E6F7EA26F7E6F7EA26F7E6F7EA26F7E6F1380A2
EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE03FEA2EE01FF701386A2EF7FC6EF3FE6A2EF
1FF6EF0FFEA217071703A217011700A201F0167E183E487ED80FFF161EB500F0150EA218
0640447CC349>I<49B41303010FEBE007013F13F89039FE00FE0FD801F8131FD807E0EB
079F49EB03DF48486DB4FC48C8FC4881003E81127E82127C00FC81A282A37E82A27EA26C
6C91C7FC7F7FEA3FF813FE381FFFE06C13FE6CEBFFE06C14FC6C14FF6C15C0013F14F001
0F80010180D9001F7F14019138001FFF03031380816F13C0167F163F161F17E000C0150F
A31607A37EA36C16C0160F7E17806C151F6C16006C5D6D147ED8FBC05CD8F9F0495AD8F0
7C495A90393FC00FE0D8E00FB51280010149C7FC39C0003FF02B487BC536>83
D<003FB912F8A3903BF0001FF8001F01806D481303003EC7150048187C0078183CA20070
181CA30060180CA5481806A5C81600B3B3A54B7EED7FFE49B77EA33F447DC346>I<B66C
91380FFFFCA3000101F8C8000313C026007FE0923800FE0061013F17F06D6C5E80010F5F
6D6C4B5A18036D6C93C7FC6E15066D160E6D6D140C181C6E6C14186E6C5C18706E6C1460
18E06E6C5C6E6C495A17036E6C91C8FC5F6E6C13066E6D5A171C92387FC0185FED3FE06F
6C5A17E06F6C5AEEF980ED07FF6F90C9FCA26F5AB3A6923807FF800203B6FCA346447FC3
49>89 D<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E48
6C137F6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA
03FC485A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C000
3F13013A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97
D<EC7F80903803FFF090380FC07C90383F000F01FCEB03804848EB01C00003140F4848EB
1FE049133F120F485AA2485AED1FC0007FEC070092C7FCA290C9FC5AAB7E7FA2123F1630
7F001F15706C6C146016E06C6C14C06C6C13010001EC03806C6CEB0700013F131E90381F
C078903807FFF001001380242E7DAC2B>99 D<167FED3FFFA315018182B3EC7F80903803
FFF090380FC07C90383F000E017E1307496D5AD803F87F48487F5B000F81485AA2485AA2
127FA290C8FC5AAB7E7FA2123FA26C7EA2000F5D7F6C6C5B00035C6C6C9038077F806C6C
010E13C0013F011C13FE90380FC0F8903803FFE09026007F0013002F467DC436>I<EB01
FE903807FFC090381F03F090387E00FC49137E48487F485A4848EB1F80000F15C049130F
121F484814E01507A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C
7E1670000F15606D14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90381F80
F8903803FFE0010090C7FC242E7DAC2B>I<EC0FE0EC7FF8903801F81E903803F03F9039
0FE07F8090381FC0FF5C133F495AA2ED7F0001FE131C92C7FCAFB67EA3C648C8FCB3B248
6C7E007F13FFA321467EC51E>I<EE0F80D901FCEB7FE0903A0FFF81F0F090393F07E381
9039FC01FF033A01F800FE014848017E13E00007027FC7FC497F000F8149131F001F81A9
000F5D6D133F000792C7FC6D5B0003147E6C6C5B6D485A3903BF07E090380FFF80260701
FCC8FC90CAFCA25AA37F6C7E7F90B512F86C14FF16E06C15F86C6C8048B67E3A07C0000F
FF48481300003FC8EA3F80003E151F48ED0FC0A2481507A56C150F007C1680007E151F00
3E16006C153E6C6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFFFEC7FC010113
E02C427DAC31>I<EA01FC12FFA3120712031201B3EC01FE913807FFC091381E07F09138
3801F802707FECE000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F
13FEA32F457DC436>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12FFA312
0712031201B3B0487EB512F8A315437DC21C>I<EA01FC12FFA3120712031201B3A29238
1FFFE0A36F1300ED07F816E05E5E030EC7FC5D5D5D5D4A5A4A5A4AC8FC5CEC3F804A7E14
FF9038FDCFE09038FF8FF01407496C7E01FC7F14016E7E81816F7E82151F6F7E82150782
6F7E8282486C491380B5D8F81F13F8A32D457DC433>107 D<EA01FC12FFA31207120312
01B3B3B3A5487EB512F8A315457DC41C>I<D801FC01FFEC1FE000FF010701E0EBFFFC91
3B0F03F801E07F913C3C01FC07803F800007903C7000FE0E001FC0000349D97E1C130F26
01FDC0D97F38804A143001FFDA3FF06D7E91C75BA2495DA3495DB3A8486C4A6C497EB5D8
F81FB50003B512E0A34B2C7DAB52>I<3901FC01FE00FF903807FFC091381E07F0913838
01F8000701707F0003EBE0002601FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80
B5D8F83F13FEA32F2C7DAB36>I<EC7F80903803FFF090380FC0FC90383E001F496D7E49
6D7E48486D7E48486D7E48486D7E000F81A24848147E003F157FA290C87E481680A44816
C0AA6C1680A26D147F003F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C
495A6C6C495A013E49C7FC90381FC0FE903807FFF89038007F802A2E7DAC31>I<3901FC
03FC00FF90380FFF8091383C07E091387001F83A07FDE000FE00030180137FD801FFEC3F
8091C7EA1FC04915E049140F17F0160717F8160317FCA3EE01FEABEE03FCA3EE07F8A217
F0160F6D15E0EE1FC06D143F17806EEB7E00D9FDC05B9039FCF003F891383C0FE091381F
FF80DA03FCC7FC91C9FCAE487EB512F8A32F3F7DAB36>I<3903F803F000FFEB1FFCEC3C
3EEC707F0007EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB5
12FEA3202C7DAB26>114 D<90383FE0183901FFFC383907E01F78390F0003F8001E1301
481300007C1478127800F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C
13FF6C14C06C14E0C614F0011F13F81300EC0FFC140300C0EB01FE1400157E7E153EA27E
A36C143C6C147C15786C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C00FF01F
2E7DAC26>I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648
C7FCB3A4150CAA017E131C017F1318A26D133890381F8030ECC070903807E0E0903801FF
C09038007F001E3E7EBC26>I<D801FC147F00FFEC3FFFA300071401000380000181B3A8
5EA35DA212006D5B017E9038077F80017F010E13C06D011C13FE90380FC078903803FFF0
9026007F8013002F2D7DAB36>I<B539F001FFFCA3000790C7EA7FE06C48EC1F80000116
00160E0000150C6D141C6D1418A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C48
5AA2ECF803010391C7FCA2903801FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2EC
1FE0A36E5AA26E5AA36EC8FCA21406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C03
80D87007C9FCEA3C1EEA0FFCEA03F02E3F7EAA33>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmr17 17.28 21
/Fq 21 122 df<170E171FB3B3A6007FBD1280BE12C0A36C1C80CA001FCBFCB3B3A6170E
5A5B7AD067>43 D<DD7FF81560040FB56C14E0047F14E00303B600FC1301030F9038E003
FEDB3FFEC7383F8003DBFFF0EC07C04A01C0913803F007020790C9EAF80FDA0FFC167C4A
48EE1E1FDA7FE0160F4A48EE07BF4949EE03FF4990CAFC4948834948834A187F495A013F
193F4948181F5C01FF190F485BA24890CC1207A248481903A2485A1B01121FA25B123F1B
005BA2127F1C00A4485AB06C7EA5123F1CE07FA2121F7FA2000F1A011CC06C7EA26C7E1B
036C6D19801B076C7F017F1A006E606D6C181E131F6D6C606E18386D6C18786D6C606D6D
4C5A6D6D4C5A6E6C1607DA1FF84C5A6E6C4CC7FC6EB4167C020101C04A5A6E01F0EC07F0
DB3FFEEC1FC092280FFFE001FFC8FC030390B512FCDB007F14F0040F14809326007FF8C9
FC53667AE360>67 D<BB12FCA4C601FCC8120FD93FF89238007FFE011F171F1907190319
00A21A7E1A3EA21A1EA21A1F86A486A6F20380A318E0A297C7FCA61701A417031707170F
171F17FF91B7FCA402F8C7FC171F170F170717031701A41700A895C9FCB3A580133F90B5
7EB712E0A4496279E156>70 D<B712E0A4C60280CAFCD93FFCCBFC131F5CB3B3B21A1CA6
1A3C1A38A61A78A41AF8A21AF01901A219031907A2190F191F193F197FF001FF1807013F
043F13E0D9FFFC0203B5FCBBFCA4466279E153>76 D<B912C018FEF0FFC019F0C601FCC8
13FCD93FF8ED0FFF011F04037F06007FF13FF0737E737E1907737E86731380A27313C0A3
1BE01A7FA21BF0A91BE0A21AFF1BC0A34F13801B00614F5A624F5A4F5AF17FE04F5A0603
90C7FCF01FFE943801FFF891B812E096C8FC18F802F8CCFCB3B3A4497E90B5FCB7FCA44C
6279E15A>80 D<EC3FF0903803FFFE010F6D7E90393FC03FE090397E0007F801F86D7ED8
01E06D7E48486D7E48486E7E48C86C7E7F01F06E7E487E6D6E7EA3707EA36C5AEA03E0C9
FCA6167FED7FFF020FB5FC91387FF807903801FF80903807FC00EB1FF0EB7FC0495AD803
FEC7FC485A120F5B485A485AA2484817E0A312FF5BA2160FA3161F6D141B007F153B1673
6D913971FC01C06C6C14E1001FEC01C1D80FFC903A0780FE03806C6C903A0F00FF070027
01FF807E6DB4FC27007FFFF86D5A011F01E0EB1FF8010190C7EA07E03B417ABF42>97
D<EB03C0EA07FFB5FCA41201EA007FA2133FB3AAEE7FC0923807FFFC031F13FF92397F00
7FC003F8EB0FF0DAC3E06D7EDAC780EB01FC02CFC87E02DE157F02FC6F7E4A824A6F7E18
0F4A82727E5C727EA2851801A285A3841A80AD1A0060A461180361A21807616E5E180F6E
4B5A6E5E02B8153F023C4B5A6E4BC7FC6E4A5A90263E0780495A6E6CEB0FF090263C01F0
495ADA007EEBFF806FB448C8FC0138010F13F890C8138041657DE349>I<4AB47E020F13
F8023F13FE9139FF007F80D903FCEB07E0D907F0EB01F0D91FE0EB007849488049488049
C87E48485D4915FF00034B138048485CA2485AA2485AA2003F6F130049EC007C94C7FC12
7FA35B12FFAD127F7FA4123F7FA2001FEE01C07F000F16036D168012076C6C15076D1600
00015E6C6C151E6D6C5C6D6C5C6D6C5CD90FF8495AD903FCEB07C0903A00FF803F809126
3FFFFEC7FC020F13F80201138032417CBF3A>I<EC03FE91381FFFE091B512F8903901FE
03FE903A07F0007F8049486D7ED93FC06D7E49C76C7E496E7E4914034848814848140100
0782491400000F8283485A1880123F49153FA2007F17C0A35BA212FF90B8FCA30180CAFC
A9127F7FA3123FA27F121FEF01C06C7E17036C6C1680A26C6C15070001EE0F006D150E6C
6C151E6D6C5C6D6C5C6D6C5CD907F0EB03E0D903FC495A902700FF803FC7FC91383FFFFC
020F13F00201138032417CBF3A>101 D<F03F80DA03FC903801FFE091273FFFC00713F0
91B539F01FC1F8903B03FC03FC3E03903A07F000FE784948EB7FE04948EB3FC04948011F
EB01F049C76C6CC7FC01FE6E7EA248486E7EA2000382A2491401000782AA00035E6D1403
A200015EA26C6C4A5AA2017F4A5A6D6C495A6D6C495A496C49C8FCD937F013FE903973FC
03FC0160B512F0D9E03F13C0DA03FCC9FC4848CBFCA57FA27FA27F6C7E13FF91B512FE6D
ECFFF06D15FE6D6F7E6D16E084013F16FC01FEC700017FD803F8EC001FD807E0ED03FF48
48030013804848167F003FEF3FC090CA121F127EF00FE012FE481707A66C170F007E18C0
A2007F171F6C6CEE3F806C6CEE7F00000F177ED807F04B5A6C6C4B5A6C6C4B5AD8007FED
1FC0D93FE0ECFF80D90FFED90FFEC7FC0101B612F0D9003F1480020101F0C8FC3D5E7DBF
42>103 D<EB03C0EA07FFB5FCA41201EA007FA2133FB3AAEE7FE0923803FFFC030F13FF
DB3F0013C00378EB1FE04B6D7EDAC1C06D7EDAC3808002C7C7120302CE81170114DC14D8
02F86E7E5CA35CA35CB3B3496C4A7F496C4A7FB6D8F003B612C0A442647DE349>I<133C
13FF487F487FA66C5B6C90C7FC133C90C8FCB3A2EB03C0EA07FF127FA41201EA007FA213
3FB3B3AC497E497EB612E0A41B5F7DDE23>I<EB03C0EA07FFB5FCA41201EA007FA2133F
B3B3B3B3AD497E497EB612F0A41C647DE323>108 D<D903C0D9FFC0EC07FED807FF0103
01F891381FFFC0B5010F01FE027F13F0923D3F00FF8001F807FC0378903B3FC003C001FE
DAC1E090261FE00FC77E0001D9C3C090260FF01E6E7ED8007F49902607F81C6E7E02C7C7
5CD93FCE6E6C486E7E02CC166002DC16E002D85E02F8DA01FF6F7E4A5EA24A93C8FCA44A
5DB3B3496C4A6C4B7E496C4A6D4A7EB6D8F007B6D8803FB512FCA4663F7CBE6F>I<D903
C0EB7FE0D807FF903803FFFCB5010F13FFDB3F0013C00378EB1FE04B6D7E0001D9C1C06D
7E27007FC3808002C7C71203D93FCE81170114DC14D802F86E7E5CA35CA35CB3B3496C4A
7F496C4A7FB6D8F003B612C0A4423F7DBE49>I<EDFF80020F13F8023F13FE9139FF007F
80D903FCEB1FE0D907F0EB07F0D90FC0EB01F8D93F80EB00FE49C8127F017E81496F7E48
486F7E00038349150700078348486F7EA2001F83491501A2003F83A348486F7EA400FF18
80AC007F1800A26D5DA2003F5FA36C6C4B5AA36C6C4B5A00075FA26C6C4B5A6C6C4B5AA2
6C6C4B5A017F4BC7FC6D6C14FE6D6C495AD90FF0EB07F8D903FCEB1FE0D900FFEB7F806E
B5C8FC020F13F8020113C039417CBF42>I<9039078003F8D807FFEB0FFFB5013F13C092
387C0FE0913881F01F9238E03FF00001EB838039007F8700148FEB3F8E029CEB1FE0EE0F
C00298EB030002B890C7FCA214B014F0A25CA55CB3B0497EEBFFF8B612FCA42C3F7CBE33
>114 D<1438A71478A414F8A31301A31303A21307130F131FA2137F13FF1203000F90B6
FCB8FCA3260007F8C8FCB3AE17E0AE6D6CEB01C0A316036D6C148016076D6C14006E6C5A
91383FC01E91381FF07C6EB45A020313E09138007F802B597FD733>116
D<D903C0150FD807FFED1FFFB50203B5FCA40001ED0007D8007F1501A2013F81B3B25FA3
5FA35F011F15066E140E5F130F6E4A7F01075D6D6C494813E0D901FE4948EBFFC0903A00
FFC01F8091393FFFFE00020F13F8020001C0EC800042407DBE49>I<B6D8801FB500E090
B512F8A4000301F0C7D87FFCC7001F1380C601C0DA3FF0913807FE00051F6F5A017F030F
6F5A64133F05075E6E81011F030F5EA26E6F1403010F031F5E171D6E6F14070107033D93
C7FC17386E6F5C01030378150EEF707F6E70131E010103F0151CEFE03F6E70133C6D0201
1638EFC01F03806F1378027F01031670EF800F03C06F13F0023F01075EEF000703E0EDF8
01021F495E040E130303F0EDFC03020F011E5E041C130103F8EDFE070207013C93C8FC04
38130003FC6F5A02030178150E0470147F03FE169E020101F0159C4C143F03FF16FC6E5F
4C141FA2037F5E4C140FA2033F5E93C81207A26F5E031E1503030E5E5D3F7FBD60>119
D<B66C49B512E0A4000101F8C8387FFE0026007FE0ED1FF819E0013F705A61131F6E93C7
FC010F160EA26D6C5DA26E153C01031638A26D6C5DA26E15F06D5EA26E6C495AA26F1303
023F5DA26F1307021F92C8FC6F5B020F140EA26F131E0207141C6F133C02031438A26F13
78020114706F13F06E5CA21681037F5B16C3033F5BA216E7031F90C9FC16FF6F5AA36F5A
A26F5AA36F5AA26F5AA215015E15035EA2150793CAFC5D150EA2151E151C153CD81F8013
38487E486C5BA25D14015D49485A383F80074948CBFC001E133E380FC0FC6CB45A000113
E06C6CCCFC435B7FBD46>121 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 516 789 a Fq(F)-11 b(unctional)46 b(Programming)d(with)h(the)f
(F)l(C++)i(Library)1035 1029 y Fp(Brian)32 b(McNamara)g(and)g(Y)-8
b(annis)33 b(Smaragdakis)1482 1146 y(College)f(of)g(Computing)1270
1262 y(Georgia)f(Institute)i(of)f(T)-8 b(ec)m(hnology)960
1378 y Fo(http://www.cc.gatech.edu/)p Fn(\030)q Fo(yan)q(nis/)q(fc+)q
(+/)1626 1572 y Fp(August)33 b(8,)f(2001)83 1882 y Fm(F)n(C++)f(is)h(a)
g(library)f(for)h(functional)g(programming)e(in)0 1982
y(C++.)64 b(A)n(t)37 b(a)g(high-lev)n(el,)h(F)n(C++)e(can)g(b)r(e)h
(describ)r(ed)g(as)0 2082 y(\\STL)20 b(functionals)g(on)g(steroids".)33
b(Compared)19 b(to)h(all)g(other)0 2181 y(libraries)g(for)h(functional)
g(programming)e(in)j(C++)e(\(includ-)0 2281 y(ing)26
b(the)g(Standard)g(Library\))f(F)n(C++)g(is)h(distinguished)g(b)n(y)0
2381 y(its)35 b(p)r(o)n(w)n(erful)f(t)n(yp)r(e)i(system,)g(whic)n(h)f
(enables)f(the)i(library)0 2480 y(to)f(repro)r(duce)f(a)h(large)e
(amoun)n(t)i(of)g(useful)g(functionalit)n(y)0 2580 y(\(including)41
b(a)f(large)f(p)r(ortion)h(of)g(the)h(Hask)n(ell)e(Standard)0
2679 y(Prelude,)27 b(an)g(STL-compatible)g(lazy)f(list)i(data)f
(structure,)0 2779 y(and)c(sev)n(eral)f(general)g(op)r(erators)g(on)h
(functions\).)36 b(This)24 b(pa-)0 2879 y(p)r(er)34 b(is)g(addressed)g
(to)g(an)g(audience)g(familiar)f(with)i(C++)0 2978 y(and)27
b(attempts)h(to)g(clarify)f(what)g(F)n(C++)g(do)r(es)g(and)h(ho)n(w.)0
3303 y Fl(1)135 b(What)45 b(is)g(F)l(C++?)0 3502 y Fm(F)n(C++)30
b([6)o(])h(is)f(a)g(library)f(for)h(doing)g(functional)h(program-)0
3602 y(ming)50 b(in)h(C++.)104 b(The)50 b(library)f(comprises)g(a)h
(general)0 3702 y(framew)n(ork)36 b(for)h(creating)f(F)n(C++)h
(functions)h(\(whic)n(h)g(w)n(e)0 3801 y(sometimes)30
b(call)f Fk(functoids)7 b Fm(\))31 b(as)f(w)n(ell)g(as)f(ab)r(out)h
(100)f(com-)0 3901 y(mon/useful)e(functions.)83 4010
y(F)-7 b(unctional)93 b(programming)e(is)h(a)h(programming)0
4110 y(paradigm)35 b(in)i(whic)n(h)g(functions)g(are)e(treated)h(as)g
(regular)0 4209 y(v)-5 b(alues.)34 b(Readers)19 b(familiar)g(with)i
(the)f(\\functional")f(part)g(of)0 4309 y(the)24 b(Standard)f(Library)e
(ha)n(v)n(e)i(already)e(encoun)n(tered)i(some)0 4408
y(of)33 b(the)h(ideas)e(b)r(ehind)i(F)n(C++.)52 b(Nev)n(ertheless,)34
b(the)f(C++)0 4508 y(Standard)e(Library)f(stops)i(short)f(of)g(pro)n
(viding)g(a)g(general)0 4608 y(framew)n(ork)63 b(for)h(functional)h
(programming.)146 b(Other)0 4707 y(libraries)27 b(ha)n(v)n(e)h
(attempted)h(to)f(\014ll)h(the)g(gap)f(b)n(y)h(supplying)0
4807 y(either)49 b(syn)n(tax)f(supp)r(ort)h(\(e.g.,)55
b(a)48 b(\\lam)n(b)r(da")g(op)r(erator)0 4907 y(for)37
b(anon)n(ymous)g(functions\))h([2][8)o(])g(or)f(a)h(framew)n(ork)e(for)
0 5006 y(expressing)26 b(higher-order)f(function)j(t)n(yp)r(es[5].)2071
1882 y(F)n(C++)20 b(is)h(distinguished)g(from)f(all)g(suc)n(h)h
(libraries)e(b)n(y)i(its)1988 1982 y(p)r(o)n(w)n(erful)e(t)n(yp)r(e)g
(system.)34 b(F)n(C++)18 b(o\013ers)h(complete)g(supp)r(ort)1988
2082 y(for)53 b(manipulating)g(p)r(olymorphic)3127 2052
y Fj(1)3217 2082 y Fm(functions|passing)1988 2181 y(them)42
b(as)f(argumen)n(ts)e(to)j(other)e(functions)i(and)f(return-)1988
2281 y(ing)36 b(them)h(as)f(results.)62 b(F)-7 b(or)36
b(instance,)i(F)n(C++)d(supp)r(orts)1988 2381 y(higher-order)21
b(p)r(olymorphic)i(op)r(erators)e(lik)n(e)h Fi(compose\(\))p
Fm(:)37 b(a)1988 2480 y(function)26 b(that)f(tak)n(es)g(t)n(w)n(o)f
(\(p)r(ossibly)h(p)r(olymorphic\))g(func-)1988 2580 y(tions)j(as)e
(argumen)n(ts)h(and)g(returns)g(a)g(\(p)r(ossibly)g(p)r(olymor-)1988
2679 y(phic\))44 b(result)g(\(the)g(comp)r(osition\).)84
b(Th)n(us,)48 b(F)n(C++)42 b(can)1988 2779 y(b)r(e)c(used)e(to)h(em)n
(b)r(ed)g(a)f(lot)h(of)g(the)g(capabilities)f(of)h(mo)r(d-)1988
2879 y(ern)e(functional)g(programming)d(languages)h(\(lik)n(e)i(Hask)n
(ell)1988 2978 y(or)23 b(ML\))h(in)g(C++.)35 b(Indeed,)24
b(F)n(C++)f(comes)g(with)h(a)f(w)n(ealth)1988 3078 y(of)38
b(useful)f(pre-de\014ned)g(functions|a)g(large)f(part)h(of)g(the)1988
3178 y(Hask)n(ell)19 b(Standard)g(Prelude|as)f(w)n(ell)h(as)g(supp)r
(ort)g(for)g(lazy)1988 3277 y(ev)-5 b(aluation,)25 b(including)g(a)f
(\\lazy)g(list")g(data)h(structure)f(and)1988 3377 y(a)44
b(n)n(um)n(b)r(er)g(of)f(functions)i(that)f(op)r(erate)f(on)g(these)h
(lazy)1988 3476 y(lists.)82 b(The)43 b(library)e(also)g(con)n(tains)h
(a)g(n)n(um)n(b)r(er)h(of)f(sup-)1988 3576 y(p)r(ort)f(functions)g(for)
g(transforming)e(F)n(C++)h(data)g(struc-)1988 3676 y(tures)30
b(in)n(to)g(the)h(data)f(structures)f(of)h(the)h(C++)e(Standard)1988
3775 y(T)-7 b(emplate)35 b(Library)e(\(STL\),)i(and)f(vice)g(v)n(ersa,)
h(as)e(w)n(ell)h(as)1988 3875 y(op)r(erators)19 b(for)i(promoting)f
(normal)g(functions)h(in)n(to)g(F)n(C++)1988 3975 y(functoids.)35
b(Finally)-7 b(,)21 b(the)g(library)d(supplies)i(\\indirect)g(func-)
1988 4074 y(toids":)35 b(run-time)25 b(v)-5 b(ariables)23
b(that)i(can)f(refer)g(to)h(an)n(y)f(func-)1988 4174
y(toid)k(with)g(a)f(giv)n(en)g(monomorphic)g(t)n(yp)r(e)g(signature.)
2071 4276 y(The)d(library)e(is)h(implemen)n(ted)h(in)f(ISO)g(Standard)g
(C++.)1988 4376 y(Its)30 b(implemen)n(tation)f(relies)g(hea)n(vily)f
(on)h(C++)g(templates)p 1988 4456 763 4 v 2081 4510 a
Fh(1)2115 4533 y Fg(Throughout)24 b(the)f(pap)r(er,)g(w)n(e)g(use)f
(the)i(term)d(\\p)r(olymorphic")h(to)1988 4612 y(refer)30
b(to)h Ff(p)l(ar)l(ametric)j(p)l(olymorphism)39 b Fg(\(e.g.)52
b(template)31 b(functions\).)1988 4691 y(This)21 b(is)f(a)h(common)e
(use)i(for)f(the)i(term)d(among)i(functional)g(program-)1988
4770 y(mers,)g(though)j(ob)t(ject-orien)n(ted)g(programmers)19
b(often)k(use)g(the)g(w)n(ord)1988 4848 y(\\p)r(olymorphism")15
b(to)j(mean)e Ff(subtyp)l(e)j(p)l(olymorphism)26 b Fg(\(e.g.)j(dynamic)
1988 4927 y(dispatc)n(h\).)49 b(In)29 b(this)g(pap)r(er,)h(\\p)r
(olymorphism")d(means)h(parametric)1988 5006 y(p)r(olymorphism)21
b(b)n(y)j(default.)1926 5255 y Fm(1)p eop
%%Page: 2 2
2 1 bop 0 523 a Fm(and)27 b(the)g(C++)f(t)n(yp)r(e)g(system.)37
b(Unlik)n(e)27 b(other)f(libraries)f(for)0 623 y(functional)e
(programming)e(in)i(C++,)g(F)n(C++)f(do)r(es)h(not)g(fo-)0
722 y(cus)29 b(on)g(impro)n(ving)f(syn)n(tax)h(b)n(y)g(using)g(either)g
(the)h(prepro-)0 822 y(cessor)20 b(or)h(o)n(v)n(erloading)e(tec)n
(hniques)i(\(lik)n(e)h(expression)e(tem-)0 922 y(plates\).)46
b(Suc)n(h)30 b(approac)n(hes)f(ha)n(v)n(e)g(v)-5 b(alue)30
b(but)i(are)d(brittle.)0 1021 y(Instead,)g(the)g(v)-5
b(alue)28 b(of)h(F)n(C++)f(is)g(in)h(its)g(t)n(yp)r(e)g(system)f(for)0
1121 y(p)r(olymorphic)39 b(functions|pro)n(viding)f(a)h(nicer)g(syn)n
(tactic)0 1220 y(fron)n(t-end)25 b(for)g(de\014ning)g(functions)h
(\(lik)n(e)f(in)h(the)g(\\Lam)n(b)r(da)0 1320 y(Library")k([2)o(])i(or)
f(\\F)-9 b(A)n(CT!")31 b([8)o(]\))h(is)g(an)f(orthogonal)f(issue.)0
1420 y(This)k(is)f(often)h(a)f(p)r(oin)n(t)h(of)f(confusion,)i(so)e(w)n
(e)g(w)n(ould)g(lik)n(e)0 1519 y(to)39 b(emphasize)f(it)h(again:)59
b(the)39 b(only)f(\\template)h(compu-)0 1619 y(tation")f(in)h(F)n(C++)e
(is)h(for)g(the)h(t)n(yp)r(e)g(system.)69 b(That)38 b(is,)0
1719 y(template)32 b(functions)g(are)f(used)h(in)g(F)n(C++)f(for)h
(determin-)0 1818 y(ing)26 b(the)h(t)n(yp)r(es)f(of)g(complicated)g(p)r
(olymorphic)g(op)r(erations)0 1918 y(\(e.g.,)c(the)f(p)r(olymorphic)e
(t)n(yp)r(e)i(of)f(the)h(result)f(of)g(comp)r(osing)0
2017 y(t)n(w)n(o)i(p)r(olymorphic)g(functions\).)36 b(Nev)n(ertheless,)
23 b(the)g(actual)0 2117 y(co)r(de)34 b(con)n(tained)f(in)h(functions)h
(is)e(regular)g(C++)g(expres-)0 2217 y(sions.)i(An)n(y)25
b(piece)g(of)f(C++)g(co)r(de)h(can)f(b)r(e)h(easily)f(wrapp)r(ed)0
2316 y(as)34 b(an)h(F)n(C++)e(functoid.)59 b(An)n(ything)35
b(expressible)f(in)h(the)0 2416 y(base)j(C++)h(language)e(\(including)i
(template)h(functions\))0 2516 y(is)27 b(also)g(expressible)f(using)h
(the)h(F)n(C++)e(con)n(v)n(en)n(tions)g(with)0 2615 y(only)f(minor)f
(additions,)i(so)e(that)h(it)h(can)f(b)r(e)g(used)g(with)h(the)0
2715 y(rest)h(of)h(the)g(functionalit)n(y)f(in)h(the)g(library)-7
b(.)83 2819 y(The)23 b(F)n(C++)g(library)f(curren)n(tly)g(comprises)g
(ab)r(out)h(4000)0 2918 y(lines)i(of)g(C++)f(co)r(de.)35
b(W)-7 b(e)25 b(are)f(con)n(tin)n(uing)g(to)h(dev)n(elop)f(the)0
3018 y(library)29 b(to)i(mak)n(e)e(it)i(more)f(expressiv)n(e,)f(more)h
(e\016cien)n(t)h(\(a)0 3117 y(large)e(part)h(of)g(our)f(recen)n(t)h(w)n
(ork\),)g(and)g(more)g(con)n(v)n(enien)n(t)0 3217 y(to)d(use.)0
3513 y Fl(2)135 b(What)45 b(can)g(I)g(do)f(with)i(F)l(C++?)0
3703 y Fm(In)30 b(this)f(section,)h(w)n(e)f(will)g(w)n(alk)g(through)f
(some)h(examples)0 3802 y(that)f(demonstrate)f(the)h(capabilities)f(of)
g(F)n(C++.)83 3906 y(Man)n(y)35 b(of)i(the)f(examples)g(will)g(use)g
(lists,)i(so)e(w)n(e)f(b)r(egin)0 4006 y(with)40 b(co)r(de)f(that)h
(sho)n(ws)e(a)h(little)i(ab)r(out)e(the)h Fi(List)g Fm(class)0
4105 y(\(Figure)22 b(1\).)35 b(A)23 b Fi(List)g Fm(is)g(parameterized)d
(b)n(y)j(the)f(t)n(yp)r(e)h(of)f(its)0 4205 y(elemen)n(ts;)35
b(in)e(the)g(listing,)h(w)n(e)e(sho)n(w)f(b)r(oth)i(a)g(list)f(of)h
Fi(int)p Fm(s)0 4305 y(and)j(a)f(list)h(of)g Fi(string)p
Fm(s.)63 b(W)-7 b(e)36 b(use)g(the)g(functions)g Fi(cons\(\))0
4404 y Fm(\(whic)n(h)26 b(adds)f(an)g(elemen)n(t)g(to)g(the)h(fron)n(t)
f(of)h(a)f(list\),)h Fi(head\(\))0 4504 y Fm(\(the)36
b(\014rst)g(elemen)n(t)g(of)g(a)f(list\),)j Fi(tail\(\))g
Fm(\(the)e(rest)f(of)h(the)0 4604 y(list\),)43 b(and)c(the)g(constan)n
(t)f Fi(NIL)i Fm(\(empt)n(y)g(list\),)i(whic)n(h)d(are)0
4703 y(common)27 b(in)h(functional)g(languages.)83 4807
y(This)44 b(example)g(also)f(demonstrates)g(the)i(capabilities)0
4907 y(of)d(F)n(C++)g(for)g(manipulating)g(p)r(olymorphic)g(functions.)
0 5006 y(The)52 b Fi(tail\(\))i Fm(function)f(tak)n(es)f(a)f(\\list)i
(of)f Fi(T)p Fm(")g(and)g(re-)1988 486 y Fi(#include)41
b(<assert.h>)1988 577 y(#include)g(<string>)1988 668
y(#include)g("prelude.h")1988 760 y(using)g(namespace)g(fcpp;)1988
942 y(int)f(main\(\))h({)2067 1034 y(int)f(x=1,)g(y=2,)g(z=3;)2067
1125 y(std::string)i(s="foo",)f(t="bar",)g(u="qux";)2067
1308 y(List<int>)g(li)f(=)2145 1399 y
(cons\(x,cons\(y,cons\(z,NIL\)\)\);)2067 1490 y(List<std::string>)j(ls)
d(=)2145 1582 y(cons\(s,cons\(t,cons\(u,NIL\)\)\);)2067
1764 y(assert\()h(head\(li\))g(==)e(1)h(\);)2067 1856
y(//)g(list_with\(\))h(makes)g(short)f(lists)2067 1947
y(assert\()h(tail\(li\))g(==)e(list_with\(2,3\))k(\);)2067
2130 y(ls)d(=)f(compose\(tail,tail\)\(ls\);)2067 2221
y(assert\()i(head\()f(ls)g(\))f(==)h("qux")g(\);)2067
2312 y(assert\()h(tail\()f(ls)g(\))f(==)h(NIL)g(\);)1988
2403 y(})2425 2669 y Fm(Figure)27 b(1:)36 b(Lists)28
b(and)f(comp)r(ose)1988 2919 y(turns)39 b(a)f(\\list)h(of)f
Fi(T)p Fm(")h(where)f Fi(T)h Fm(can)f(b)r(e)h(an)n(y)f(t)n(yp)r(e.)71
b(The)1988 3018 y Fi(compose\(\))45 b Fm(op)r(erator)c(comp)r(oses)g(t)
n(w)n(o)h(unary)f(functions,)1988 3118 y(that)35 b(is,)h
Fi(compose\(f,)42 b(g\))35 b Fm(yields)f(a)g(new)g(function)h
Fi(h)g Fm(suc)n(h)1988 3218 y(that)29 b Fi(h\(x\))f Fm(is)g(the)g(same)
g(as)f Fi(f\(g\(x\)\))p Fm(.)39 b(The)28 b Fi(compose\(\))i
Fm(op-)1988 3317 y(erator)24 b(can)h(tak)n(e)g(p)r(olymorphic)f
(functions)i(as)f(parameters)1988 3417 y(and)38 b(return)g(a)g(p)r
(olymorphic)f(function)i(as)e(a)h(result.)68 b(In)1988
3516 y(this)39 b(example,)i Fi(compose\(tail,tail\))h
Fm(is)d(a)e(p)r(olymorphic)1988 3616 y(function)29 b(with)f(the)g(same)
f(signature)f(as)h Fi(tail)p Fm(.)2071 3707 y(F)n(C++)g(lists)h(are)e
(lazy)-7 b(.)37 b(F)-7 b(or)27 b(example,)g(w)n(e)g(can)g(sa)n(y)1988
3849 y Fi(List<int>)42 b(integers)f(=)e(enumFrom\(1\);)1988
3992 y Fm(to)24 b(create)e(an)h(in\014nite)i(list)e(of)h(all)f(the)h
(in)n(tegers)e(1,)i(2,)g(3,)g(.)14 b(.)g(.)g(.)1988 4083
y(Elemen)n(ts)36 b(of)g(the)h(list)g(are)e(only)h(ev)-5
b(aluated)36 b(as)f(they)i(are)1988 4174 y(requested.)k(W)-7
b(e)30 b(can)e(p)r(erform)h(v)-5 b(arious)28 b(op)r(erations)f(lazily)
1988 4265 y(on)34 b(suc)n(h)f(lists,)j(suc)n(h)d(as)g(the)h
Fi(filter\(\))i Fm(function)e(de\014ned)1988 4357 y(in)26
b(the)g(library)-7 b(,)24 b(whic)n(h)h(returns)g(only)g(those)g(elemen)
n(ts)g(of)g(a)1988 4448 y(list)j(that)g(meet)g(a)f(certain)g
(predicate.)36 b(F)-7 b(or)27 b(example,)1988 4590 y
Fi(List<int>)42 b(evens)e(=)f(filter\(even,)j(integers\);)1988
4732 y Fm(creates)29 b(a)g(list)h(of)g(the)g(ev)n(en)f(in)n(tegers)g
(\(2,)h(4,)g(6,)g(.)14 b(.)g(.)g(\);)31 b Fi(even)1988
4824 y Fm(is)26 b(another)f(function)h(de\014ned)g(in)g(the)h(F)n(C++)d
(library)-7 b(.)35 b(W)-7 b(e)1988 4915 y(can)30 b(easily)g(de\014ne)g
(our)g(o)n(wn)g(predicates)f(b)n(y)h(writing)g(nor-)1988
5006 y(mal)e(C++)f(functions,)h(for)f(example)1926 5255
y(2)p eop
%%Page: 3 3
3 2 bop 0 486 a Fi(#include)41 b(<assert.h>)0 577 y(#include)g
("prelude.h")0 668 y(using)f(namespace)i(fcpp;)0 851
y(bool)e(prime\()h(int)f(x)f(\))h({)78 942 y(if\()g(x<2)g(\))g(return)g
(false;)78 1034 y(for\()h(int)f(i=2;)g(i)f(<=)h(x/2;)g(i++)g(\))157
1125 y(if\()g(x\045i)g(==)f(0)h(\))f(return)i(false;)78
1216 y(return)g(true;)0 1308 y(})0 1490 y(int)f(main\(\))h({)78
1582 y(List<int>)h(integers)f(=)e(enumFrom\(1\);)78 1673
y(assert\(take\(3,integers\)==li)q(st_w)q(ith\(1)q(,2,3)q(\)\);)78
1856 y(List<int>)j(evens)e(=)g(filter\(even,integers\);)78
1947 y(assert\(take\(3,evens\)==list_)q(with)q(\(2,4,)q(6\)\);)78
2130 y(List<int>)i(primes)e(=)157 2221 y(filter\()h
(ptr_to_fun\(&prime\),)i(integers)e(\);)78 2312 y
(assert\(take\(3,primes\)==list)q(_wit)q(h\(2,3)q(,5\)\))q(;)0
2403 y(})114 2669 y Fm(Figure)27 b(2:)36 b(Lazy)27 b(op)r(erations)f
(and)i(C++)e(functions)0 2936 y Fi(bool)40 b(prime\()h(int)f(x)f(\))h
({)f(...)h(})0 3097 y Fm(and)27 b(then)i(use,)e(for)g(example,)0
3259 y Fi(filter\()41 b(ptr_to_fun\(&prime\),)i(integers)e(\);)0
3429 y Fm(to)31 b(compute)g(the)g(\(in\014nite\))h(list)f(of)g(primes.)
46 b(The)31 b(F)n(C++)0 3528 y(function)54 b Fi(ptr_to_fun\(\))i
Fm(transforms)51 b(a)i(normal)f(C++)0 3628 y(function)39
b(in)n(to)f(a)f(functoid.)69 b(It)39 b(is)f(one)g(of)g(a)g(n)n(um)n(b)r
(er)f(of)0 3728 y(library)23 b(mem)n(b)r(ers)g(whic)n(h)h(pro)n(vide)f
(the)h(in)n(terface)f(b)r(et)n(w)n(een)0 3827 y(F)n(C++)j(functoids)h
(and)g(b)r(oth)h(C++)e(functions)h(and)g(C++)0 3927 y(Standard)f
(Library)f(function)i(ob)5 b(jects.)36 b(Figure)26 b(2)g(sho)n(ws)g(a)0
4026 y(complete)21 b(program,)f(whic)n(h)h(also)f(demonstrates)g
Fi(take\(\))p Fm(|)0 4126 y(a)31 b(function)h(that)g(selects)f(the)h
(\014rst)g Fe(N)40 b Fm(elemen)n(ts)32 b(of)f(a)g(list)0
4226 y(and)c(discards)g(the)h(rest.)83 4318 y(F)n(C++)20
b(functoids)i(supp)r(ort)f(currying.)34 b(If)21 b(w)n(e)g(start)g(with)
0 4409 y(the)28 b(list)g(of)f(n)n(um)n(b)r(ers)g(1-3:)0
4571 y Fi(List<int>)41 b(integers)g(=)f(list_with\(1,2,3\);)0
4732 y Fm(w)n(e)30 b(can)h(generate)e(the)j(list)f(2-4)e(with)i
Fi(map\(inc,integers\))0 4824 y Fm(where)f Fi(inc\(\))h
Fm(is)g(a)e(function)i(that)g(incremen)n(ts)f(a)g(n)n(um)n(b)r(er)0
4915 y(b)n(y)e(1,)h(and)f Fi(map\(\))i Fm(is)f(a)f(function)h(that)g
(applies)g(a)f(function)0 5006 y(to)33 b(eac)n(h)f(elemen)n(t)h(to)g(a)
f(list.)54 b(Supp)r(ose)33 b(instead)f(w)n(e)h(w)n(an)n(t)1988
523 y(to)h(add)f(2)h(to)f(eac)n(h)g(elemen)n(t)h(of)f(the)h(list.)56
b(Of)33 b(course,)h(w)n(e)1988 614 y(could)28 b(sa)n(y)1988
788 y Fi(map\()41 b(compose\(inc,inc\),)i(integers)e(\))1988
957 y Fm(but)29 b(w)n(e)e(can)g(also)g(just)h(sa)n(y)1988
1131 y Fi(map\()41 b(plus\(2\),)g(integers)g(\).)1988
1308 y Fm(The)27 b(F)n(C++)f(library)g(de\014nes)h(function)h
Fi(plus\(\))g Fm(suc)n(h)f(that)1988 1408 y Fi(plus\(x,y\))39
b Fm(yields)e Fi(x+y)p Fm(.)66 b(\(Indeed,)40 b(the)d(library)f(con)n
(tains)1988 1508 y(named)i(functions)h(for)e(all)h(of)g(the)g(common)f
(op)r(erators.\))1988 1607 y(Lik)n(e)32 b(all)g(functoids)h(in)g(the)g
(F)n(C++)e(library)-7 b(,)33 b Fi(plus)g Fm(is)g(cur-)1988
1707 y(ry)n(able.)j(That)27 b(is)h(to)f(sa)n(y)-7 b(,)26
b Fi(plus\(2\))j Fm(yields)f(a)f(new)g(function)1988
1806 y Fi(f\(x\))p Fm(,)i(where)e Fi(f\(x\))40 b(=)g(2)f(+)h(x)p
Fm(.)2071 1910 y(As)51 b(y)n(ou)e(migh)n(t)i(exp)r(ect,)56
b(currying)49 b(of)h(p)r(olymorphic)1988 2010 y(functions)21
b(is)f(fully)h(supp)r(orted)f(and)g(ma)n(y)f(yield)i(other)e(p)r(oly-)
1988 2109 y(morphic)30 b(functions.)46 b(In)31 b(fact,)h(currying)d(is)
h(implemen)n(ted)1988 2209 y(b)n(y)50 b(F)n(C++)f(op)r(erators)e(that)k
(are)d(themselv)n(es)i(\(higher-)1988 2308 y(order)29
b(p)r(olymorphic\))g(functoids.)44 b(W)-7 b(e)30 b(can)f(use)h(these)f
(op-)1988 2408 y(erators)22 b(explicitly)-7 b(,)24 b(if)g(needed.)36
b(F)-7 b(or)22 b(instance,)i Fi(bind1of2\(\))1988 2508
y Fm(is)31 b(a)e(function)i(that)g(tak)n(es)e(a)h(binary)g(function)g
(and)h(binds)1988 2607 y(its)i(\014rst)g(argumen)n(t)f(to)h(a)f
(particular)g(v)-5 b(alue,)34 b(resulting)f(in)1988 2707
y(a)f(unary)f(function.)50 b(Th)n(us,)33 b Fi(bind1of2\()42
b(plus,)e(2)f(\))33 b Fm(is)e(the)1988 2807 y(same)41
b(as)f Fi(plus\(2\))p Fm(.)78 b(W)-7 b(e)41 b(can)g(also)e(write)i
Fi(plus\(2,_\))i Fm(to)1988 2906 y(mean)24 b(the)h(same)f(thing;)h(\\)p
Fi(_)p Fm(")f(is)g(a)g(sp)r(ecial)g(v)-5 b(alue)24 b(in)h(F)n(C++)1988
3006 y(that)i(serv)n(es)d(as)h(a)h(placeholder)f(for)g(argumen)n(ts)g
(to)h(b)r(e)h(cur-)1988 3106 y(ried.)68 b(Figure)37 b(3)h(sho)n(ws)f(a)
g(n)n(um)n(b)r(er)h(of)g(examples)f(whic)n(h)1988 3205
y(demonstrate)27 b(currying)f(in)i(F)n(C++.)2071 3309
y(The)k(F)n(C++)g(library)e(supplies)i(users)f(with)i(man)n(y)e(use-)
1988 3408 y(ful)20 b(prede\014ned)f(functions.)34 b(More)18
b(than)i(50)e(functions)h(from)1988 3508 y(the)31 b(Hask)n(ell)f
(Standard)g(Prelude)g(are)f(included)i(in)g(the)g(li-)1988
3608 y(brary)-7 b(.)62 b(W)-7 b(e)37 b(ha)n(v)n(e)e(already)g(seen)i(a)
f(few)g(suc)n(h)g(functions,)1988 3707 y(lik)n(e)28 b
Fi(map\(\))p Fm(,)h Fi(take\(\))p Fm(,)g Fi(filter\(\))p
Fm(,)h(and)d Fi(enumFrom\(\))p Fm(.)40 b(F)n(C++)1988
3807 y(also)35 b(supp)r(orts)g Fi(until\(\))p Fm(,)40
b Fi(foldr\(\))p Fm(,)f Fi(iterate\(\))p Fm(,)h Fi(cycle\(\))p
Fm(,)1988 3906 y Fi(span\(\))p Fm(,)h Fi(zipWith\(\))p
Fm(,)h(and)36 b(man)n(y)h(others.)64 b(These)36 b(prede-)1988
4006 y(\014ned)e(functions)f(mak)n(e)f(it)h(easy)f(for)h(users)f(of)g
(the)i(F)n(C++)1988 4106 y(library)j(to)g(rapidly)g(comp)r(ose)g
(algorithms)f(to)h(suit)h(their)1988 4205 y(needs)28
b(using)f(functional)h(programming)d(tec)n(hniques.)2071
4309 y(F)n(C++)19 b(has)g(in)n(terfaces)g(to)h(normal)e(C++)h
(functions)h(and)1988 4408 y(the)h(C++)e(Standard)h(Library)-7
b(.)32 b(W)-7 b(e)21 b(ha)n(v)n(e)e(already)f(encoun-)1988
4508 y(tered)j Fi(ptr_to_fun\(\))p Fm(,)k(whic)n(h)20
b(con)n(v)n(erts)f(a)i(normal)e(function)1988 4608 y(in)n(to)30
b(an)g(F)n(C++)f(functoid.)45 b(The)30 b Fi(ptr_to_fun\(\))j
Fm(op)r(erator)1988 4707 y(w)n(orks)28 b(on)h(mem)n(b)r(er)g(functions)
h(as)f(w)n(ell,)g(creating)g(a)g(func-)1988 4807 y(toid)22
b(whic)n(h)f(tak)n(es)g(a)g(p)r(oin)n(ter)g(to)g(the)h(receiv)n(er)e
(ob)5 b(ject)21 b(as)g(an)1988 4907 y(extra)33 b(\014rst)h(parameter.)
54 b(Figure)33 b(4)g(sho)n(ws)g Fi(ptr_to_fun\(\))1988
5006 y Fm(applied)h(to)f(b)r(oth)g(normal)g(and)g(mem)n(b)r(er)g
(functions,)i(and)1926 5255 y(3)p eop
%%Page: 4 4
4 3 bop 0 870 a Fi(#include)41 b(<assert.h>)0 961 y(#include)g
("prelude.h")0 1053 y(using)f(namespace)i(fcpp;)0 1235
y(List<int>)f(answer;)0 1327 y(//)f(holds)g(the)g(answer)h(of)e
(upcoming)0 1418 y(//)h(computations)i(for)e(exposition)h(purposes)0
1600 y(void)f(check\()h(List<int>)g(l)e(\))0 1692 y({)g(assert\()i
(l==answer)h(\);)d(})0 1874 y(int)h(main\(\))h({)78 1966
y(List<int>)h(integers)f(=)e(list_with\(1,2,3\);)0 2148
y(//)h(each)g(small)g(group)h(of)e(statements)0 2240
y(//)h(demonstrates)i(similar)e(functionality)j(with)0
2331 y(//)d(different)h(syntax)78 2422 y(answer)g(=)f
(list_with\(2,3,4\);)78 2514 y(check\()h(map\()f(inc,)g(integers)h(\))
197 b(\);)78 2605 y(check\()41 b(map\()f(plus\(1\),)h(integers)g(\))f
(\);)78 2788 y(answer)h(=)f(list_with\(3,4,5\);)78 2879
y(check\()h(map\(compose\(inc,inc\),integers)q(\))k(\);)78
2970 y(check\()c(map\()f(plus\(2\),)h(integers)g(\))275
b(\);)78 3153 y(answer)41 b(=)f(list_with\(0,-1,-2\);)78
3244 y(check\()h(map\(bind1of2\(minus,1\),integer)q(s\)\);)78
3336 y(check\()g(map\()f(minus\(1\),)h(integers)h(\))235
b(\);)78 3427 y(check\()41 b(map\()f(minus\(1,_\),)i(integers)f(\))157
b(\);)78 3610 y(answer)41 b(=)f(list_with\(0,1,2\);)78
3701 y(check\()h(map\(bind2of2\(minus,1\),integer)q(s\)\);)78
3792 y(check\()g(map\()f(minus\(_,1\),)i(integers)f(\))e(\);)78
3975 y(//)h(map)g(can)g(also)g(be)g(curried)78 4066 y(answer)h(=)f
(list_with\(3,4,5\);)78 4158 y(check\()h(map\()f(plus\(2\))h(\)\()f
(integers)h(\))157 b(\);)78 4249 y(check\()41 b(map\()f(_,)g(integers)h
(\)\()f(plus\(2\))g(\))g(\);)0 4340 y(})429 4606 y Fm(Figure)27
b(3:)37 b(Currying)26 b(examples)1988 486 y Fi(#include)41
b(<assert.h>)1988 577 y(#include)g("prelude.h")1988 668
y(using)g(namespace)g(fcpp;)1988 851 y(int)f(f\()g(int)g(x,)g(int)f(y)h
(\))f({)h(return)g(3*x)g(+)g(y;)f(})1988 1034 y(class)i(Foo)f({)2067
1125 y(int)g(n;)1988 1216 y(public:)2067 1308 y(Foo\()g(int)g(nn)g(\))f
(:)g(n\(nn\))i({})2067 1399 y(int)f(bar\()g(int)g(x,)f(int)h(y)g(\))f
(const)2067 1490 y({)g(return)i(n*x)f(+)f(y;)h(})1988
1582 y(};)1988 1764 y(int)g(main\(\))h({)2067 1856 y(assert\()g
(ptr_to_fun\(&f\)\(3\)\(1\))i(==)d(10)g(\);)2067 2038
y(Foo)g(foo\(3\);)2067 2130 y(assert\(ptr_to_fun\(&Foo::bar\)\(&)q
(foo,)q(3\)\(1\))2341 2221 y(==)g(10\);)1988 2312 y(})2146
2578 y Fm(Figure)27 b(4:)37 b(F)n(C++)26 b(and)i(nativ)n(e)f(C++)g
(functions)1988 2879 y(demonstrates)h(that)h(the)g(results)g(are)f
(functoids)h(b)n(y)f(using)1988 2978 y(the)g(currying)f(abilit)n(y)g
(of)g(F)n(C++)g(functoids.)2071 3096 y(T)-7 b(o)39 b(in)n(terface)g(to)
g(the)h(C++)e(Standard)h(Library)e(data)1988 3195 y(structures,)24
b(F)n(C++)e(supp)r(orts)h(iterators.)34 b(Figure)22 b(5)h(sho)n(ws)1988
3295 y(that)e(the)g(List)f(class)f(supp)r(orts)h(iterators)f(of)h(the)h
(STL)f(st)n(yle.)1988 3394 y(This)30 b(mak)n(es)g(con)n(v)n(erting)e
(to)i(and)g(from)g(STL)g(data)f(struc-)1988 3494 y(tures)f(easy)-7
b(.)2071 3611 y(The)30 b(functoids)g(w)n(e)f(ha)n(v)n(e)g(seen)g(th)n
(us)h(far)f(are)g(called)g Fk(di-)1988 3711 y(r)l(e)l(ct)46
b(functoids)52 b Fm(in)45 b(the)h(F)n(C++)e(library)-7
b(,)48 b(b)r(ecause)c(calls)1988 3811 y(to)j(them)f(are)g(statically)f
(b)r(ound)i(\(they)g(are)e(called)h(di-)1988 3910 y(rectly\).)61
b(F)n(C++)34 b(also)h(supp)r(orts)g Fk(indir)l(e)l(ct)i(functoids)43
b Fm(via)1988 4010 y(the)f Fi(FunN)f Fm(classes.)76 b(These)40
b(functoids)i(are)e(dynamically)1988 4110 y(b)r(ound,)33
b(and)f(th)n(us)g(can)f(c)n(hange)f(their)i(\\function)g(v)-5
b(alues")1988 4209 y(b)n(y)36 b(assignmen)n(t.)61 b(Indirect)36
b(functoids)g(are)f(describ)r(ed)h(b)n(y)1988 4309 y(their)f
(monomorphic)e(t)n(yp)r(e)i(signature,)g(and)f(v)-5 b(ariables)33
b(of)1988 4408 y(t)n(yp)r(e)21 b Fi(FunN)g Fm(can)e(b)r(e)i(b)r(ound)f
(to)g(an)n(y)f(function)i(with)f(the)h(righ)n(t)1988
4508 y(signature.)54 b(F)-7 b(or)33 b(example,)h(a)g
Fi(Fun1<int,bool>)i Fm(describ)r(es)1988 4608 y(a)h(one-argumen)n(t)e
(function)j(that)f(tak)n(es)f(an)h Fi(int)h Fm(and)f(re-)1988
4707 y(turns)22 b(a)g Fi(bool)p Fm(,)i(whereas)d(a)g
Fi(Fun2<int,int,char>)26 b Fm(describ)r(es)1988 4807
y(a)19 b(t)n(w)n(o-argumen)n(t)e(function)j(whic)n(h)f(tak)n(es)f(t)n
(w)n(o)g Fi(ints)j Fm(and)e(re-)1988 4907 y(turns)27
b(a)f Fi(char)p Fm(.)38 b(The)27 b(function)g Fi(makeFunN\(\))i
Fm(con)n(v)n(erts)c(a)i(di-)1988 5006 y(rect)21 b(functoid)h(in)n(to)f
(an)g(indirect)g(one.)34 b(In)21 b(the)h(case)e(of)h(p)r(oly-)1926
5255 y(4)p eop
%%Page: 5 5
5 4 bop 0 486 a Fi(#include)41 b(<assert.h>)0 577 y(#include)g
(<vector>)0 668 y(#include)g(<algorithm>)0 760 y(#include)g
("prelude.h")0 851 y(using)f(namespace)i(fcpp;)0 942
y(int)e(main\(\))h({)78 1034 y(List<int>)h(l)d(=)h(take\()g(5,)g
(enumFrom\(1\))h(\);)78 1125 y(std::vector<int>)i(v\(5\);)78
1216 y(std::copy\(l.begin\(\),l.end\(\))q(,v.b)q(egin\()q(\)\);)78
1308 y(std::reverse\()g(v.begin\(\),)e(v.end\(\))g(\);)78
1399 y(List<int>)h(r\()d(v.begin\(\),)j(v.end\(\))f(\);)78
1490 y(assert\()g(r)f(==)f(list_with\(5,4,3,2,1\))44
b(\);)0 1582 y(})477 1847 y Fm(Figure)27 b(5:)36 b(F)n(C++)27
b(and)g(STL)0 2107 y(morphic)f(functions,)i(a)e(monomorphic)g(instance)
h(m)n(ust)g(b)r(e)0 2207 y(selected)i(with)g Fi(monomorphizeN\(\))p
Fm(.)45 b(In)29 b(fact,)g(b)r(oth)h(con)n(v)n(er-)0 2306
y(sions)35 b(can)h(b)r(e)g(p)r(erformed)g(implicitly)g(when)h(an)e
(indirect)0 2406 y(functoid)c(v)-5 b(ariable)29 b(is)h(assigned)e(a)i
(direct)g(functoid)g(v)-5 b(alue.)0 2506 y(Figure)27
b(6)g(giv)n(es)g(some)g(examples)g(of)g(indirect)h(functoids.)0
2779 y Fl(3)135 b(Where)45 b(is)g(the)g(magic?)0 2961
y Fm(In)d(the)g(previous)f(section)g(w)n(e)h(sa)n(w)f(ho)n(w)g
(functoids)h(can)0 3061 y(b)r(e)34 b(used.)54 b(W)-7
b(e)33 b(also)g(sa)n(w)f(ho)n(w)h(to)g(con)n(v)n(ert)f(regular)f(C++)0
3160 y(functions)45 b(or)e(metho)r(ds)h(in)n(to)g(functoids,)49
b(so)44 b(that)g(they)0 3260 y(can)32 b(b)r(e)g(used)g(with)h(the)f(F)n
(C++)f(pre-de\014ned)h(functional-)0 3359 y(it)n(y)-7
b(,)21 b(including)e(higher-order)d(op)r(erators)h(lik)n(e)i(currying)f
(and)0 3459 y Fi(compose)p Fm(.)56 b(Nev)n(ertheless,)34
b(w)n(e)f(ha)n(v)n(e)f(not)i(sho)n(wn)e(y)n(ou)h(ho)n(w)0
3559 y(the)46 b(p)r(olymorphic)f(functoids)h(inside)g(F)n(C++)e(\()p
Fi(compose)p Fm(,)0 3658 y Fi(map)p Fm(,)g(etc.\))76
b(are)40 b(implemen)n(ted)h(or)e(ho)n(w)h(to)g(de\014ne)h(y)n(our)0
3758 y(o)n(wn)27 b(p)r(olymorphic)g(functoids.)83 3849
y(T)-7 b(o)19 b(create)f(y)n(our)g(o)n(wn)g(p)r(olymorphic)h(functoid,)
i(y)n(ou)d(need)0 3941 y(to)25 b(create)g(a)g(class)g(with)h(t)n(w)n(o)
f(main)g(elemen)n(ts:)36 b(a)25 b(template)0 4032 y Fi(operator\(\))k
Fm(and)e(a)f(mem)n(b)r(er)g(structure)h(template)g(named)0
4123 y Fi(Sig)p Fm(.)69 b(T)-7 b(o)37 b(mak)n(e)g(things)h(concrete,)i
(consider)d(the)h(de\014ni-)0 4215 y(tion)26 b(of)g Fi(map)g
Fm(\(or)g(rather,)f(the)h(class)f Fi(Map)p Fm(,)i(of)f(whic)n(h)f
Fi(map)i Fm(is)f(a)0 4306 y(unique)32 b(instance\))g(sho)n(wn)f(in)h
(Figure)f(7.)48 b(This)32 b(de\014nition)0 4397 y(uses)c(the)g(help)r
(er)g(template)g Fi(FunType)p Fm(,)i(whic)n(h)e(is)g(a)f(sp)r(ecial-)0
4488 y(ized)19 b(template)h(for)e(di\013eren)n(t)i(n)n(um)n(b)r(ers)e
(of)h(argumen)n(ts.)33 b(F)-7 b(or)0 4580 y(t)n(w)n(o)27
b(argumen)n(ts,)f Fi(FunType)j Fm(is)f(essen)n(tially:)0
4732 y Fi(template)41 b(<class)g(A1,)f(class)g(A2,)g(class)g(R>)0
4824 y(struct)h(FunType)f({)78 4915 y(typedef)h(R)f(ResultType;)h
(typedef)g(A1)f(Arg1Type;)78 5006 y(typedef)h(A2)f(Arg2Type;)80
b(};)1988 486 y(#include)41 b(<assert.h>)1988 578 y(#include)g
("prelude.h")1988 669 y(using)g(namespace)g(fcpp;)1988
760 y(bool)g(prime\()f(int)g(x)f(\))h({)2067 852 y(if\()g(x<2)g(\))f
(return)i(false;)2067 943 y(for\()f(int)g(i=2;)g(i)f(<=)h(x/2;)g(i++)g
(\))2145 1034 y(if\()g(x\045i)g(==)g(0)f(\))h(return)g(false;)2067
1126 y(return)g(true;)1988 1217 y(})1988 1308 y(bool)h(big\()f(int)g(x)
f(\))g({)h(return)h(x)e(>)g(100;)i(})1988 1400 y(int)f(main\(\))h({)
2067 1491 y(Fun1<int,bool>)h(f)e(=)2145 1582 y(makeFun1\()i
(ptr_to_fun\(&prime\))h(\);)2067 1674 y(assert\()e(f\(11\))f(==)g(true)
g(\);)2067 1765 y(f)f(=)h(makeFun1\()h(ptr_to_fun\(&big\))i(\);)2067
1856 y(assert\()e(f\(11\))f(==)g(false)g(\);)2067 2039
y(List<int>)h(l)f(=)f(list_with\(1,2,3\);)2067 2130 y(//)h(explicit)h
(conversion)g(of)f("tail")g(to)2067 2222 y(//)g(an)f(indirect)i
(functoid)2067 2313 y(Fun1<List<int>,List<int>)k(>)39
b(g)g(=)2145 2404 y(makeFun1\()j(monomorphize1<List<int>,)2616
2496 y(List<int>)f(>\(tail\)\);)2067 2587 y(assert\()g(g\(l\))f(==)f
(list_with\(2,3\))k(\);)2067 2770 y(g)c(=)h(init;)79
b(//)40 b(implicit)h(conversion)2067 2861 y(assert\()g(g\(l\))f(==)f
(list_with\(1,2\))k(\);)1988 2952 y(})2259 3218 y Fm(Figure)27
b(6:)37 b(Indirect)27 b(functoids)h(examples)1988 3354
y Fi(struct)41 b(Map)f({)2028 3445 y(template)h(<class)f(F,)g(class)g
(L>)2028 3536 y(struct)g(Sig)g(:)g(public)g(FunType<F,L,)2067
3628 y(List<typename)i(F::template)g(Sig<)2106 3719 y(typename)f
(L::ElementType>::ResultType>)46 b(>)39 b({)h(};)2028
3902 y(template)h(<class)f(F,)g(class)g(T>)2028 3993
y(typename)h(Sig<F,)f(List<T>)h(>::ResultType)2028 4084
y(operator\(\))2067 4176 y(\(const)f(F&)g(f,)g(const)g(List<T>&)h(l\))f
(const)g({)2145 4267 y(if\()g(null\(l\))h(\))2224 4358
y(return)f(NIL;)2145 4450 y(else)2224 4541 y(return)g
(cons\(f\(head\(l\)\),)2694 4632 y(curry2\(Map\(\),)j(f,)c
(tail\(l\)\)\);)j(})1988 4724 y(};)2495 4989 y Fm(Figure)27
b(7:)36 b(Map)28 b(in)f(F)n(C++)1926 5255 y(5)p eop
%%Page: 6 6
6 5 bop 83 523 a Fm(W)-7 b(e)40 b(can)g(no)n(w)f(analyze)g(the)h
(implemen)n(tation)g(of)g Fi(Map)p Fm(.)0 623 y(The)35
b Fi(operator\(\))j Fm(will)e(allo)n(w)e(instances)h(of)g(this)h(class)
f(to)0 722 y(b)r(e)g(used)f(with)h(regular)e(function)i(call)f(syn)n
(tax.)56 b(What)35 b(is)0 822 y(sp)r(ecial)24 b(in)g(this)h(case)e(is)h
(that)g(the)h(op)r(erator)d(is)i(a)g(template,)0 922
y(whic)n(h)32 b(means)f(that)g(it)h(can)g(b)r(e)g(used)f(with)h
(argumen)n(ts)e(of)0 1021 y(m)n(ultiple)25 b(t)n(yp)r(es.)36
b(When)25 b(an)f(instance)g(of)g Fi(Map)h Fm(is)g(used)f(with)0
1121 y(argumen)n(ts)h Fi(f)h Fm(and)g Fi(l)p Fm(,)h(uni\014cation)f
(will)g(b)r(e)h(attempted)f(b)r(e-)0 1220 y(t)n(w)n(een)f(the)h(t)n(yp)
r(es)f(of)g Fi(f)h Fm(and)f Fi(l)p Fm(,)i(and)e(the)h(declared)e(t)n
(yp)r(es)h(of)0 1320 y(the)h(parameters)d(\()p Fi(const)41
b(F&)p Fm(,)26 b(and)f Fi(const)40 b(List<T>&)p Fm(\).)e(The)0
1420 y(uni\014cation)31 b(will)g(yield)g(the)h(v)-5 b(alues)30
b(of)h(the)h(t)n(yp)r(e)f(parame-)0 1519 y(ters)25 b
Fi(F)h Fm(and)g Fi(T)g Fm(of)g(the)g(template.)36 b(This)26
b(will)g(determine)g(the)0 1619 y(return)h(t)n(yp)r(e)h(of)f(the)h
(functoid.)83 1712 y(No)n(w,)23 b(let's)f(examine)g(the)h
Fi(Sig)g Fm(mem)n(b)r(er)f(class)f(of)h(the)h Fi(Map)0
1804 y Fm(class.)36 b(By)27 b(F)n(C++)f(con)n(v)n(en)n(tion,)g(the)i
Fi(Sig)g Fm(mem)n(b)r(er)g(should)0 1895 y(b)r(e)20 b(a)g(template)g(o)
n(v)n(er)e(the)i(argumen)n(t)f(t)n(yp)r(es)h(of)g(the)g(function)0
1986 y(y)n(ou)26 b(w)n(an)n(t)h(to)f(express)g(\(in)i(this)f(case)f
(the)h(function)h(t)n(yp)r(e)f Fi(F)0 2078 y Fm(and)20
b(the)h(list)f(t)n(yp)r(e)h Fi(L)p Fm(\).)g(The)f Fi(Sig)h
Fm(mem)n(b)r(er)g(template)f(is)g(used)0 2169 y(to)k(answ)n(er)g(the)h
(question)f(\\what)g(t)n(yp)r(e)h(will)g(y)n(our)e(function)0
2260 y(return)d(if)h(I)g(pass)f(it)h(these)g(argumen)n(t)e(t)n(yp)r
(es?")34 b(The)21 b(answ)n(er)0 2352 y(in)28 b(the)g
Fi(Map)g Fm(co)r(de)g(is:)0 2518 y Fi(List<F::Sig<L::ElementType>::)q
(Resu)q(ltTyp)q(e>)0 2691 y Fm(\(w)n(e)f(ha)n(v)n(e)g(elided)h(the)f
Fi(typename)j Fm(and)d Fi(template)j Fm(k)n(eyw)n(ords)0
2791 y(for)35 b(readabilit)n(y\).)61 b(This)36 b(means:)53
b(\\map)36 b(returns)f(a)g Fi(List)0 2890 y Fm(of)29
b(what)f Fi(F)h Fm(w)n(ould)f(return)h(if)g(passed)f(an)g(elemen)n(t)h
(lik)n(e)f(the)0 2990 y(ones)f(in)h(list)g Fi(L)p Fm(".)83
3083 y(In)23 b(Hask)n(ell,)h(one)f(w)n(ould)f(express)g(the)i(t)n(yp)r
(e)f(signature)f(of)0 3175 y Fi(map)28 b Fm(as:)0 3341
y Fi(map)40 b(::)g(\(a)f(->)h(b\))g(->)f([a])h(->)g([b])0
3514 y Fm(The)52 b Fi(Sig)h Fm(mem)n(b)r(ers)f(of)g(F)n(C++)f
(functoids)h(essen)n(tially)0 3614 y(enco)r(de)58 b(the)g(same)g
(information,)65 b(but)59 b(in)f(a)g(compu-)0 3713 y(tational)52
b(form:)86 b Fi(Sig)p Fm(s)53 b(are)f(t)n(yp)r(e-computing)g(compile-)0
3813 y(time)46 b(functions)f(that)h(are)e(called)h(b)n(y)f(the)i(C++)e
(uni\014-)0 3912 y(cation)j(mec)n(hanism)f(for)h(function)g(templates)h
(and)e(im-)0 4012 y(plemen)n(t)h(the)g(F)n(C++)e(t)n(yp)r(e)i(system.)
93 b(This)47 b(t)n(yp)r(e)f(sys-)0 4112 y(tem)27 b(is)f(completely)g
(indep)r(enden)n(t)h(from)f(the)h(nativ)n(e)e(C++)0 4211
y(t)n(yp)r(e)55 b(system|)p Fi(map)p Fm('s)g(t)n(yp)r(e)g(as)f(far)g
(as)g(C++)g(is)g(con-)0 4311 y(cerned)59 b(is)g(just)h
Fi(class)40 b(Map)p Fm(.)981 4281 y Fj(2)1151 4311 y
Fm(Other)59 b(F)n(C++)f(func-)0 4411 y(toids,)43 b(ho)n(w)n(ev)n(er,)f
(can)e(read)f(the)i(F)n(C++)e(t)n(yp)r(e)h(informa-)0
4510 y(tion)51 b(from)g(the)g Fi(Sig)h Fm(mem)n(b)r(er)f(of)g
Fi(Map)h Fm(and)f(use)g(it)g(in)0 4610 y(their)36 b(o)n(wn)f(t)n(yp)r
(e)h(computations.)61 b(The)35 b Fi(map)i Fm(functoid)f(it-)0
4709 y(self)45 b(uses)g(that)g(information)f(from)h(whatev)n(er)f
(functoid)p 0 4771 763 4 v 92 4825 a Fh(2)127 4848 y
Fg(Actually)-6 b(,)22 b(this)g(is)f(a)i(small)c(lie|)p
Fd(map)j Fg(is)f(not)i(an)f(instance)h(of)f Fd(Map)p
Fg(,)0 4927 y(but)34 b(rather)f(an)g(instance)h(of)f
Fd(Curryable2<Map>)p Fg(.)63 b(Curry)n(abilit)n(y)32
b(is)0 5006 y(expressed)24 b(via)g(the)h Fd(CurryableN)h
Fg(com)n(binators)d(in)h(F)n(C++.)1988 523 y Fm(happ)r(ens)53
b(to)g(b)r(e)g(passed)f(as)h(its)g(\014rst)f(argumen)n(t)g(\(see)1988
623 y(the)31 b Fi(F::Sig<L::ElementType>::Resul)q(tTyp)q(e)36
b Fm(expression,)1988 722 y(ab)r(o)n(v)n(e\).)1988 1021
y Fl(4)135 b(P)l(erformance)46 b(T)-11 b(ests)1988 1211
y Fm(F)n(C++)21 b(is)h(quite)g(e\016cien)n(t)g(in)h(its)f(implemen)n
(tation)g(of)g(func-)1988 1311 y(tional)45 b(concepts.)90
b(F)-7 b(or)45 b(common)f(programming)g(tasks)1988 1411
y(that)33 b(use)f(the)g(F)n(C++)f(con)n(v)n(en)n(tions,)h(the)g(o)n(v)n
(erhead)e(is)i(ei-)1988 1510 y(ther)f(zero)e(or)h(negligible)g(\(i.e.,)
i(just)f(a)f(dynamic)g(dispatc)n(h)1988 1610 y(indirection)45
b(for)f(indirect)g(functoids\).)88 b(The)45 b(only)f(case)1988
1709 y(where)35 b(p)r(erformance)f(is)h(a)g(legitimate)g(concern)f(is)h
(if)h(one)1988 1809 y(attempts)30 b(to)g(cop)n(y)e(functional)i(idioms)
f(directly)g(to)h(C++)1988 1909 y(using)j(F)n(C++.)54
b(F)n(C++)32 b(is)i(not)f(an)g(optimizing)g(compiler)1988
2008 y(for)i(a)g(functional)g(language,)g(so)g(it)g(misses)g(sev)n
(eral)e(com-)1988 2108 y(mon)e(optimizations;)i(for)e(example:)43
b(no)31 b(sp)r(ecial)g(run)n(time)1988 2208 y(supp)r(ort)22
b(for)f(sp)r(ecialized)g(functions)h(exists;)h(tail-recursion)1988
2307 y(elimination)32 b(is)g(not)h(automatically)e(p)r(erformed;)i(no)f
(run-)1988 2407 y(time)25 b(supp)r(ort)e(for)h(lazy)f(ev)-5
b(aluation)23 b(exists.)36 b(Additionally)-7 b(,)1988
2506 y(F)n(C++)27 b(o\013ers)g(a)h(simple)g(reference)f(coun)n(ting)g
(mec)n(hanism)1988 2606 y(\(used)f(in)n(ternally)f(for)g(indirect)h
(functoids)g(and)f(lazy)g(lists\),)1988 2706 y(whic)n(h)45
b(is)g(not)f(directly)h(comparable)e(to)h(an)h(optimized)1988
2805 y(garbage)29 b(collector.)46 b(Nev)n(ertheless,)31
b(the)h(implemen)n(tation)1988 2905 y(of)37 b(F)n(C++)e(carefully)h
(tries)g(to)g(a)n(v)n(oid)f(unnecessary)g(o)n(v)n(er-)1988
3005 y(head)i(and)f(a)g(n)n(um)n(b)r(er)g(of)g(optimizations)g(are)g
(emplo)n(y)n(ed.)1988 3104 y(In)h(a)f(previous)g(pap)r(er)g([6])g(w)n
(e)g(sho)n(w)n(ed)g(that)h(the)g(F)n(C++)1988 3204 y(reference)g(coun)n
(ting)f(mec)n(hanism)h(is)g(m)n(uc)n(h)g(faster)g(\(b)n(y)g(a)1988
3303 y(factor)30 b(of)g(6)g(to)g(8\))g(than)h(another)e(tec)n(hnique)i
(used)f(in)g(the)1988 3403 y(literature)c([5)o(])g(for)g(k)n(eeping)f
(trac)n(k)g(of)h(functoid)h(references.)2071 3507 y(In)33
b(this)h(section)e(w)n(e)h(sho)n(w)f(some)g(simple)h(p)r(erformance)
1988 3607 y(measuremen)n(ts)45 b(comparing)g(F)n(C++)g(to)h(Hugs)f(\(a)
h(w)n(ell-)1988 3707 y(kno)n(wn)38 b(Hask)n(ell)f(in)n(terpreter\))h
(and)g(ghc)g(\(an)g(optimizing)1988 3806 y(Hask)n(ell)43
b(compiler\).)83 b(The)43 b(b)r(enc)n(hmarks)f(are)g(programs)1988
3906 y(that)29 b(C++)g(programmers)d(are)h(unlik)n(ely)i(to)g(write)f
(in)i(this)1988 4005 y(form,)45 b(but)d(they)g(sho)n(w)f(common)g
(functional)g(program-)1988 4105 y(ming)f(idioms,)j(in)n(v)n(olving)c
(hea)n(vy)f(use)i(of)g(lazy)f(\(in\014nite\))1988 4205
y(lists.)81 b(Therefore,)44 b(these)e(b)r(enc)n(hmarks)g(serv)n(e)e(as)
i(stress)1988 4304 y(tests)28 b(of)g(F)n(C++'s)e(lazy)h(lists.)2071
4408 y(F)-7 b(or)28 b(eac)n(h)f(b)r(enc)n(hmark,)h(w)n(e)g(wrote)f(t)n
(w)n(o)g(programs:)36 b(one)1988 4508 y(in)26 b(Hask)n(ell,)f(and)h
(one)f(in)h(C++)e(using)h(the)h(F)n(C++)f(library)-7
b(.)1988 4608 y(The)27 b(programs)d(are)i(faithful)i(translations)d(of)
h(eac)n(h)g(other;)1988 4707 y(they)38 b(eac)n(h)e(represen)n(t)f(the)j
(same)e(solution)g(to)h(the)h(giv)n(en)1988 4807 y(problem.)72
b(The)39 b(programs)e(w)n(ere)h(run)h(on)g(a)g(Sun)h(Sparc)1988
4907 y(Ultra-30)d(with)i(128M)e(of)h(RAM.)h(W)-7 b(e)39
b(used)f(g++2.95.2,)1988 5006 y(ghc5.00.1,)22 b(and)i(the)f(F)-7
b(ebruary)23 b(2001)e(v)n(ersion)h(of)h(Hugs.)36 b(In)1926
5255 y(6)p eop
%%Page: 7 7
7 6 bop 118 486 a Fi(divisible)41 b(t)e(n)h(=)f(t)h(`rem`)g(n)g(==)f(0)
118 668 y(factors)i(x)e(=)g(filter)i(\(divisible)h(x\))d([1..x])118
851 y(prime)h(x)g(=)f(factors)i(x)e(==)h([1,x])118 1034
y(primes)g(n)g(=)f(take)h(n)g(\(filter)h(prime)f([1..]\))118
1216 y(l)f(=)h(primes)g(600)118 1399 y(main)g(=do)g(print)g(\(l)g(!!)f
(599\))453 1665 y Fm(Figure)27 b(8:)36 b(Primes)27 b(in)h(Hask)n(ell)0
1931 y(the)21 b(case)f(of)h(b)r(oth)g(g++)f(and)h(ghc,)h(w)n(e)e(used)h
(-O2)f(and)h(static)0 2031 y(linking.)83 2131 y(\(In)37
b(the)g(C++)f(co)r(de)g(for)g(the)h(b)r(enc)n(hmarks,)g(y)n(ou)f(ma)n
(y)0 2231 y(notice)h(that)h Fi(OddList)p Fm(s)h(are)e(used)g(in)h
(addition)f(to)h Fi(List)p Fm(s.)0 2331 y Fi(OddList)p
Fm(s)33 b(are)e(distinguished)h(from)g Fi(List)p Fm(s)g(to)g(exp)r(ose)
f(the)0 2430 y(fact)f(that)g(the)g(\014rst)g(elemen)n(t)g(of)f(the)i
(list)f(is)f(an)h(ev)-5 b(aluated)0 2530 y Fi(cons)p
Fm(;)30 b(this)f(enables)f(other)f(optimizations)h(in)h(our)f(list)g
(im-)0 2629 y(plemen)n(tation.\))0 2866 y Fc(4.1)112
b(Primes)0 3020 y Fm(Primes)33 b(is)i(a)f(simple)g(program)f(that)h
(computes)h(a)e(\(lazy\))0 3120 y(list)42 b(of)f(the)g(\014rst)g
Fk(N)55 b Fm(prime)41 b(n)n(um)n(b)r(ers)g(and)g(then)h(prin)n(ts)0
3220 y(the)29 b Fk(N)14 b Fm(th)29 b(prime.)40 b(It)29
b(do)r(es)f(so)g(simply)h(b)n(y)f(\014ltering)h(all)f(the)0
3319 y(primes)35 b(from)g(the)h(\(in\014nite\))h(list)f(of)f(in)n
(tegers,)i(and)e(then)0 3419 y(taking)28 b(the)i(\014rst)e
Fk(N)43 b Fm(of)29 b(them.)41 b(Figure)29 b(8)f(sho)n(ws)g(the)i(co)r
(de)0 3519 y(for)35 b(primes)g(in)h(Hask)n(ell.)61 b(Figure)35
b(9)g(sho)n(ws)f(the)i(co)r(de)g(for)0 3618 y(primes)27
b(in)h(F)n(C++.)83 3719 y(T)-7 b(able)33 b(1)f(sho)n(ws)f(the)j(p)r
(erformance)d(results)i(for)f(primes)0 3818 y(for)f(v)-5
b(arious)31 b(v)-5 b(alues)32 b(of)f Fk(N)p Fm(.)h(F)n(C++)f(is)h(ab)r
(out)g(55)f(times)h(as)0 3918 y(fast)g(as)f(Hugs)h(for)f(this)h
(program,)f(and)h(also)f(consisten)n(tly)0 4017 y(faster)23
b(than)h(ghc.)36 b(The)24 b(reason)e(F)n(C++)h(is)h(faster)f(than)h
(ghc)0 4117 y(app)r(ears)f(to)i(b)r(e)f(due)h(to)f(the)h(in)n(teger)f
(arithmetic:)35 b(ghc)24 b(uses)0 4217 y(64-bit)d(in)n(tegers)f(\()p
Fi(long)40 b(long)p Fm(s\))23 b(for)e(all)g(in)n(teger)g(op)r
(erations.)0 4316 y(Indeed,)i(if)f(the)g(C++)f(v)n(ersion)f(of)i(the)g
(program)e(is)h(c)n(hanged)0 4416 y(to)35 b(use)f Fi(long)40
b(long)c Fm(instead)e(of)h Fi(int)p Fm(,)i(then)e(the)g(times)g(are)0
4516 y(practically)26 b(equal.)0 4752 y Fc(4.2)112 b(T)-9
b(ree)0 4907 y Fm(T)i(ree)37 b(is)h(a)f(program)f(that)i(generates)e(a)
h(random)g(binary)0 5006 y(searc)n(h)22 b(tree)h(of)g(in)n(tegers)f
(and)i(then)f(\(lazily\))h(computes)f(the)1988 574 y
Fi(#include)41 b(<iostream>)1988 666 y(#include)g("prelude.h")1988
757 y(using)g(namespace)g(fcpp;)1988 848 y(using)g(std::cout;)g(using)g
(std::endl;)1988 1031 y(struct)g(Divisible)g(:)f(public)g
(CFunType<int,int,bool>)45 b({)2106 1122 y(bool)40 b(operator\(\)\()i
(int)e(x,)g(int)f(y)h(\))f(const)2106 1214 y({)h(return)g(x\045y==0;)h
(})1988 1305 y(})f(divisible;)1988 1488 y(struct)h(Factors)g(:)e
(public)i(CFunType<int,OddList<int>)k(>)39 b({)2106 1579
y(OddList<int>)j(operator\(\)\()g(int)e(x)f(\))h(const)g({)2224
1670 y(return)g(filter\()h(curry2\(divisible,x\),)2812
1762 y(enumFromTo\(1,x\))i(\);)2106 1853 y(})1988 1944
y(})d(factors;)1988 2127 y(struct)h(Prime)f(:)g(public)g
(CFunType<int,bool>)k({)2106 2218 y(bool)c(operator\(\)\()i(int)e(x)f
(\))h(const)g({)2224 2310 y(return)g(factors\(x\)==cons\(1,cons\(x,NI)q
(L\)\);)2106 2401 y(})1988 2492 y(})g(prime;)1988 2675
y(struct)h(Primes)g(:)e(public)i(CFunType<int,OddList<int>)k(>)39
b({)2106 2766 y(OddList<int>)j(operator\(\)\()g(int)e(n)f(\))h(const)g
({)2224 2858 y(return)g(take\()h(n,)e(filter\()i(prime,)g
(enumFrom\(1\))h(\))d(\);)2106 2949 y(})1988 3040 y(})h(primes;)1988
3223 y(int)g(main\(\))h({)2106 3314 y(OddList<int>)h(l)d(=)h
(primes\(NUM\);)2106 3405 y(cout)g(<<)g(at\()g(l,)f(NUM-1)i(\))e(<<)h
(endl;)1988 3497 y(})2451 3762 y Fm(Figure)27 b(9:)37
b(Primes)26 b(in)i(F)n(C++)p 2373 4026 1136 4 v 2371
4125 4 100 v 2475 4096 a(N)p 2637 4125 V 152 w(F)n(C++)p
2978 4125 V 110 w(ghc)p 3225 4125 V 110 w(Hugs)p 3507
4125 V 2373 4129 1136 4 v 2373 4145 V 2371 4245 4 100
v 2444 4215 a(200)p 2637 4245 V 165 w(0.26)p 2978 4245
V 145 w(0.27)p 3225 4245 V 148 w(13)p 3507 4245 V 2373
4248 1136 4 v 2371 4348 4 100 v 2444 4318 a(400)p 2637
4348 V 165 w(1.17)p 2978 4348 V 145 w(1.21)p 3225 4348
V 148 w(60)p 3507 4348 V 2373 4351 1136 4 v 2371 4451
4 100 v 2444 4421 a(600)p 2637 4451 V 165 w(2.64)p 2978
4451 V 145 w(3.46)p 3225 4451 V 128 w(146)p 3507 4451
V 2373 4454 1136 4 v 2371 4554 4 100 v 2444 4524 a(800)p
2637 4554 V 165 w(4.89)p 2978 4554 V 145 w(5.37)p 3225
4554 V 128 w(271)p 3507 4554 V 2373 4557 1136 4 v 2371
4657 4 100 v 2423 4627 a(1000)p 2637 4657 V 144 w(7.77)p
2978 4657 V 145 w(8.56)p 3225 4657 V 128 w(424)p 3507
4657 V 2373 4660 1136 4 v 2251 4897 a(T)-7 b(able)27
b(1:)37 b(Primes)26 b(\(all)i(times)g(in)g(seconds\))1926
5255 y(7)p eop
%%Page: 8 8
8 7 bop 0 492 a Fi(data)40 b(Tree)g(a)g(=)f(Node)h(!a)g(!\(Tree)h(a\))e
(!\(Tree)i(a\))471 583 y(|)e(Nil)0 766 y(leaf)h(\(Node)h(_)e(Nil)h
(Nil\))g(=)f(True)0 857 y(leaf)h(\(Node)h(_)e(_)g(_\))197
b(=)39 b(False)0 1040 y(fringe)i(Nil)510 b(=)40 b([])0
1131 y(fringe)h(n@\(Node)f(d)g(l)f(r\))118 1222 y(|)g(leaf)h(n)471
b(=)40 b([d])118 1314 y(|)f(otherwise)355 b(=)40 b(fringe)g(l)g(++)f
(fringe)i(r)0 1496 y(main)f(=do)g(--//)g(code)g(to)g(make)g(a)g(random)
g(tree)g("t")353 1588 y(print)g(\(filter)h(\(==)f(13\))g(\(fringe)h
(t\)\))478 1853 y Fm(Figure)27 b(10:)36 b(T)-7 b(ree)27
b(in)h(Hask)n(ell)p 343 2005 1219 4 v 341 2104 4 100
v 486 2074 a(N)p 690 2104 V 194 w(F)n(C++)p 1031 2104
V 110 w(ghc)p 1278 2104 V 111 w(Hugs)p 1560 2104 V 343
2108 1219 4 v 343 2124 V 341 2224 4 100 v 414 2194 a(10000)p
690 2224 V 164 w(0.08)p 1031 2224 V 145 w(0.03)p 1278
2224 V 116 w(0.24)p 1560 2224 V 343 2227 1219 4 v 341
2327 4 100 v 414 2297 a(20000)p 690 2327 V 164 w(0.19)p
1031 2327 V 145 w(0.06)p 1278 2327 V 116 w(0.56)p 1560
2327 V 343 2330 1219 4 v 341 2430 4 100 v 414 2400 a(30000)p
690 2430 V 164 w(0.29)p 1031 2430 V 145 w(0.10)p 1278
2430 V 116 w(0.89)p 1560 2430 V 343 2433 1219 4 v 341
2533 4 100 v 414 2503 a(40000)p 690 2533 V 164 w(0.41)p
1031 2533 V 145 w(0.12)p 1278 2533 V 176 w(-)p 1560 2533
V 343 2536 1219 4 v 341 2636 4 100 v 414 2606 a(80000)p
690 2636 V 164 w(0.87)p 1031 2636 V 145 w(0.26)p 1278
2636 V 176 w(-)p 1560 2636 V 343 2639 1219 4 v 341 2739
4 100 v 393 2709 a(160000)p 690 2739 V 143 w(1.69)p 1031
2739 V 145 w(0.56)p 1278 2739 V 176 w(-)p 1560 2739 V
343 2742 1219 4 v 308 2979 a(T)-7 b(able)28 b(2:)36 b(T)-7
b(ree)27 b(\(all)h(times)g(in)g(seconds\))0 3280 y(\\fringe")j(of)g
(the)i(tree.)49 b(The)32 b(fringe)g(of)g(a)f(tree)h(is)g(a)f(list)h(of)
0 3380 y(all)39 b(of)g(the)h(lea)n(v)n(es)e(of)h(the)h(tree,)i(in)e
(the)g(order)e(they)h(are)0 3480 y(encoun)n(tered)34
b(during)f(an)h(inorder)g(tra)n(v)n(ersal.)54 b(The)34
b(main)0 3579 y(program)39 b(prin)n(ts)i(all)g(of)g(the)h(no)r(des)f
(in)h(the)f(fringe)g(that)0 3679 y(matc)n(h)31 b(an)g(arbitrary)d(v)-5
b(alue)31 b(\(13)g(in)g(the)g(listings\);)i(this)f(is)0
3779 y(merely)37 b(a)f(con)n(v)n(enien)n(t)g(w)n(a)n(y)g(to)h(force)g
(the)g(ev)-5 b(aluation)36 b(of)0 3878 y(the)28 b(lazy)f(list.)83
3994 y(Figure)19 b(10)f(sho)n(ws)g(the)h(Hask)n(ell)g(co)r(de)g(for)f
(tree;)k(Figure)c(11)0 4094 y(sho)n(ws)24 b(tree)g(in)h(F)n(C++.)35
b(F)-7 b(or)24 b(b)r(oth)h(the)g(Hask)n(ell)f(and)g(C++)0
4193 y(programs,)29 b(the)i(co)r(de)g(that)f(actually)g(builds)h(the)g
(random)0 4293 y(binary)c(trees)g(is)g(elided)h(from)f(the)h(listings.)
83 4408 y(T)-7 b(able)29 b(2)g(sho)n(ws)f(the)i(p)r(erformance)e
(results)g(for)h(tree.)42 b Fk(N)0 4508 y Fm(is)25 b(the)h(n)n(um)n(b)r
(er)g(of)f(no)r(des)h(in)f(the)h(tree.)36 b(No)26 b(results)f(are)f
(re-)0 4608 y(p)r(orted)k(for)f(Hugs)h(for)f(more)g(than)h(30,000)e(no)
r(des)i(b)r(ecause)0 4707 y(the)k(system)f(memory)f(w)n(as)h
(exhausted.)47 b(F)-7 b(or)31 b(this)h(b)r(enc)n(h-)0
4807 y(mark,)40 b(F)n(C++)e(is)g(consisten)n(tly)g(faster)g(than)h
(Hugs,)i(but)0 4907 y(ab)r(out)27 b(three)g(times)g(slo)n(w)n(er)e
(than)i(ghc.)37 b(In)n(v)n(estigating)25 b(the)0 5006
y(disparit)n(y)34 b(b)r(et)n(w)n(een)g(the)h(F)n(C++)f(and)g(ghc)g(p)r
(erformance,)1988 870 y Fi(#include)41 b(<iostream>)1988
961 y(#include)g("prelude.h")1988 1053 y(using)g(namespace)g(fcpp;)1988
1144 y(using)g(std::cout;)g(using)g(std::endl;)1988 1327
y(struct)g(Tree)f({)2106 1418 y(int)g(data;)2106 1509
y(Tree)g(*left;)2106 1600 y(Tree)g(*right;)2106 1783
y(Tree\()g(int)g(x)g(\))f(:)h(data\(x\),)h(left\(0\),)g(right\(0\))g
({})2106 1874 y(Tree\()f(int)g(x,)g(Tree*)g(l,)g(Tree*)g(r)g(\))2224
1966 y(:)f(data\(x\),)i(left\(l\),)g(right\(r\))g({})2106
2057 y(bool)f(leaf\(\))h(const)2106 2148 y({)f(return)g(\(left==0\))h
(&&)f(\(right==0\);)i(})1988 2240 y(};)1988 2422 y(struct)f(Fringe)g(:)
e(public)i(CFunType<Tree*,OddList<int>)k(>)39 b({)2106
2514 y(OddList<int>)j(operator\(\)\()g(Tree*)e(t)g(\))f(const)h({)2224
2605 y(if\()g(t==0)g(\))2341 2696 y(return)h(NIL;)2224
2788 y(else)f(if\()g(t->leaf\(\))h(\))2341 2879 y(return)g
(cons\(t->data,NIL\);)2224 2970 y(else)2341 3062 y(return)g(cat\()f
(Fringe\(\)\(t->left\),)2812 3153 y(curry\(Fringe\(\),t->right\))45
b(\);)2106 3244 y(})1988 3336 y(};)1988 3427 y(Fringe)c(fringe;)1988
3610 y(int)f(main\(\))h({)2106 3701 y(//)f(code)g(to)g(build)g(tree)g
("t")2106 3792 y(List<int>)h(l)f(=)f(fringe\(t\);)2106
3884 y(l)h(=)f(filter\()i(fcpp::equal\(13\),)i(l)c(\);)2106
3975 y(while\()i(!null\(l\))g(\))e({)2224 4066 y(cout)h(<<)g(head\(l\))
g(<<)g(endl;)2224 4158 y(l)f(=)h(tail\(l\);)2106 4249
y(})1988 4340 y(})2476 4606 y Fm(Figure)27 b(11:)36 b(T)-7
b(ree)27 b(in)h(F)n(C++)1926 5255 y(8)p eop
%%Page: 9 9
9 8 bop 118 492 a Fi(merge)40 b(a@\(x:xs\))h(b@\(y:ys\))g(=)235
583 y(if)236 b(x)40 b(<)f(y)h(then)g(x)f(:)h(\(merge)g(xs)g(b\))235
675 y(else)h(if)e(x)h(>)f(y)h(then)g(y)f(:)h(\(merge)g(a)g(ys\))235
766 y(else)590 b(x)39 b(:)h(\(merge)g(xs)g(ys\))118 949
y(hamming)h(=)235 1040 y(1)f(:)f(\(merge)i(\(merge)f(\(map)h(\(*2\))f
(hamming\))941 1131 y(\(map)h(\(*3\))f(hamming\)\))667
1222 y(\(map)g(\(*5\))g(hamming\))h(\))118 1405 y(main)f(=do)g(putStr)g
("Hamming)h(number:)g(")471 1496 y(print)f(2000)471 1588
y(putStr)g("is)g(")471 1770 y(print)g(\(hamming)h(!!)f(2000\))381
2036 y Fm(Figure)27 b(12:)36 b(Hamming)27 b(in)h(Hask)n(ell)0
2307 y(w)n(e)g(found)i(that)f(ghc)f(p)r(erforms)g(list)h(concatenation)
f(m)n(uc)n(h)0 2406 y(faster)f(than)h(F)n(C++)e(do)r(es.)0
2653 y Fc(4.3)112 b(Hamming)0 2812 y Fm(The)55 b(\014nal)g(program)e
(computes)i(Hamming)g(n)n(um)n(b)r(ers.)0 2911 y(Hamming)47
b(n)n(um)n(b)r(ers)g(are)f(all)h(the)g(in)n(tegers)f(whic)n(h)h(are)0
3011 y(pro)r(ducts)34 b(of)h(p)r(o)n(w)n(ers)e(of)i(2,)h(3,)g(and)f(5.)
58 b(An)35 b(elegan)n(t)f(w)n(a)n(y)0 3111 y(to)h(compute)h(the)g
(\(in\014nite\))g(list)g(of)f(all)g(Hamming)h(n)n(um-)0
3210 y(b)r(ers)e(is)f(to)h(sa)n(y)f(that)h(the)g(\014rst)g(n)n(um)n(b)r
(er)f(in)i(the)f(list)g(is)g(1,)0 3310 y(and)28 b(that)h(the)g(rest)f
(of)h(the)g(list)g(is)f(computed)h(b)n(y)g(merging)0
3409 y(three)35 b(other)f(lists:)52 b(t)n(wice,)36 b(three)f(times,)i
(and)e(\014v)n(e)f(times)0 3509 y(the)e(list)g(of)f(Hamming)h(n)n(um)n
(b)r(ers)f(itself.)49 b(The)32 b(solution)f(is)0 3609
y(v)n(ery)23 b(easy)g(to)i(express)e(recursiv)n(ely)f(in)j(Hask)n(ell;)
f(it)h(is)f(giv)n(en)0 3708 y(in)37 b(Figure)f(12.)62
b(Notice)37 b(ho)n(w)f(the)g(de\014nition)h(of)g Fi(hamming)0
3808 y Fm(refers)30 b(to)h Fi(hamming)i Fm(itself.)47
b(T)-7 b(o)31 b(construct)f(the)i(same)e(solu-)0 3908
y(tion)23 b(in)f(C++,)h(w)n(e)f(need)h(to)f(b)r(e)h(a)g(little)g(more)f
(v)n(erb)r(ose,)g(but)0 4007 y(the)33 b(structure)f(is)h(exactly)f(the)
h(same.)51 b(The)33 b(F)n(C++)f(co)r(de)0 4107 y(is)27
b(sho)n(wn)g(in)h(Figure)f(13.)83 4209 y(T)-7 b(able)26
b(3)f(sho)n(ws)g(the)h(relativ)n(e)f(p)r(erformance)g(of)h(the)h(pro-)0
4309 y(grams)35 b(to)h(prin)n(t)f(the)i Fk(N)14 b Fm(th)36
b(Hamming)g(n)n(um)n(b)r(er.)62 b(Again,)0 4408 y(F)n(C++)38
b(outp)r(erforms)h(Hugs,)j(this)d(time)h(b)n(y)f(a)g(factor)f(of)0
4508 y(ab)r(out)g(10;)k(the)c(times)g(for)g(F)n(C++)e(and)i(ghc)g(are)e
(nearly)0 4608 y(equal.)42 b(It)30 b(is)f(w)n(orth)g(noting)g(that)g
(Hamming)h(is)f(an)g(excel-)0 4707 y(len)n(t)19 b(test)g(of)f(\\cac)n
(hing")f(in)h(lists)h(\(Section)g(5.1\).)33 b(In)19 b(an)f(older)0
4807 y(v)n(ersion)26 b(of)i(F)n(C++)e(where)h(cac)n(hing)g(w)n(as)g
(not)g(a)n(v)-5 b(ailable)27 b(to)0 4907 y(lists,)38
b(the)e(p)r(erformance)e(grew)h(exp)r(onen)n(tially)-7
b(.)61 b(\(F)-7 b(or)35 b(ex-)0 5006 y(ample,)28 b(Hamming\(300\))e(to)
r(ok)h(o)n(v)n(er)f(30s)g(to)i(compute!\))1988 505 y
Fi(#include)41 b(<iostream>)1988 596 y(#include)g("prelude.h")1988
687 y(using)g(namespace)g(fcpp;)1988 779 y(using)g(std::cout;)g(using)g
(std::endl;)1988 961 y(struct)g(Merge)f({)2067 1053 y(template)h
(<class)f(L,)g(class)h(M>)2067 1144 y(struct)f(Sig)g(:)g(public)g
(FunType<L,M,)2145 1235 y(OddList<typename)j(L::ElementType>)g(>)c({};)
2067 1418 y(template)i(<class)f(T>)2067 1509 y(OddList<T>)h
(operator\(\)\()h(const)e(List<T>&)h(a,)2891 1600 y(const)f(List<T>&)h
(b)e(\))h(const)g({)2145 1692 y(T)g(x)f(=)h(head\(a\);)2145
1783 y(T)g(y)f(=)h(head\(b\);)2145 1874 y(if\()g(x)g(<)f(y)h(\))2224
1966 y(return)g(cons\()h(x,)e(curry2\(Merge\(\),tail\(a\),b\)\);)2145
2057 y(else)h(if\()g(x)g(>)f(y)h(\))2224 2148 y(return)g(cons\()h(y,)e
(curry2\(Merge\(\),a,tail\(b\)\)\);)2145 2240 y(else)2224
2331 y(return)h(cons\()h(x,)2616 2422 y
(curry2\(Merge\(\),tail\(a\),tail\(b)q(\)\)\);)2067 2514
y(})1988 2605 y(})f(merge;)1988 2788 y(typedef)h(long)f(long)g(int)g
(FOO;)h(//)e(g++)h(has)g("long)g(long")1988 2970 y(struct)h(Hamming)g
(:)e(public)i(CFunType<)g(List<FOO>)g(>)f({)2067 3062
y(List<FOO>)h(operator)g(\(\))f(\(\))g(const)g({)2185
3153 y(using)g(fcpp::multiplies;)2185 3244 y(static)g(List<FOO>)h(h)f
(=)f(Hamming\(\);)2185 3336 y(static)h(List<FOO>)h(x)f(=)2577
3427 y(curry2\(map,multiplies\(\(FOO\)2\),)q(h\);)2185
3518 y(static)g(List<FOO>)h(y)f(=)2577 3610 y
(curry2\(map,multiplies\(\(FOO\)3\),)q(h\);)2185 3701
y(static)g(List<FOO>)h(z)f(=)2577 3792 y
(curry2\(map,multiplies\(\(FOO\)5\),)q(h\);)2185 3884
y(static)g(List<FOO>)h(m1=)f(curry2\()h(merge,)g(x,)e(y)h(\);)2185
3975 y(static)g(List<FOO>)h(m2=)f(curry2\()h(merge,)g(m1,)f(z)f(\);)
2185 4066 y(return)h(cons\()g(\(FOO\)1,)h(m2)f(\);)2067
4158 y(})1988 4249 y(})g(hamming;)1988 4432 y(int)g(main\(\))h({)2106
4523 y(cout)f(<<)g("The)g("<<NUM<<"th)i(hamming)f(number)f(is:)g(";)
2106 4614 y(cout)g(<<)g(at\()g(hamming\(\),)h(NUM)f(\))g(<<)f(endl;)
1988 4706 y(})2379 4971 y Fm(Figure)27 b(13:)36 b(Hamming)28
b(in)g(F)n(C++)1926 5255 y(9)p eop
%%Page: 10 10
10 9 bop 364 443 1178 4 v 362 543 4 100 v 486 513 a Fm(N)p
670 543 V 173 w(F)n(C++)p 1010 543 V 110 w(ghc)p 1257
543 V 111 w(Hugs)p 1540 543 V 364 546 1178 4 v 364 563
V 362 663 4 100 v 435 633 a(1000)p 670 663 V 165 w(0.02)p
1010 663 V 145 w(0.01)p 1257 663 V 115 w(0.17)p 1540
663 V 364 666 1178 4 v 362 765 4 100 v 435 736 a(1500)p
670 765 V 165 w(0.03)p 1010 765 V 145 w(0.02)p 1257 765
V 115 w(0.24)p 1540 765 V 364 769 1178 4 v 362 868 4
100 v 435 839 a(2000)p 670 868 V 165 w(0.03)p 1010 868
V 145 w(0.02)p 1257 868 V 115 w(0.34)p 1540 868 V 364
872 1178 4 v 362 971 4 100 v 435 941 a(4000)p 670 971
V 165 w(0.07)p 1010 971 V 145 w(0.05)p 1257 971 V 115
w(0.68)p 1540 971 V 364 975 1178 4 v 362 1074 4 100 v
435 1044 a(8000)p 670 1074 V 165 w(0.14)p 1010 1074 V
145 w(0.13)p 1257 1074 V 115 w(1.42)p 1540 1074 V 364
1078 1178 4 v 362 1177 4 100 v 414 1147 a(12000)p 670
1177 V 144 w(0.21)p 1010 1177 V 145 w(0.19)p 1257 1177
V 115 w(2.21)p 1540 1177 V 364 1181 1178 4 v 212 1417
a(T)-7 b(able)27 b(3:)36 b(Hamming)28 b(\(all)g(times)f(in)h(seconds\))
0 1681 y Fl(5)135 b(P)l(erformance)46 b(Analysis)0 1863
y Fm(The)29 b(curren)n(t)g(F)n(C++)f(implemen)n(tation)i(is)f(more)f
(than)i(an)0 1963 y(order)19 b(or)h(magnitude)h(faster)f(than)h(the)g
(previous)e(release)g(of)0 2062 y(the)29 b(library)-7
b(.)40 b(In)29 b(this)h(section,)f(w)n(e)f(discuss)h(six)f(ma)5
b(jor)28 b(op-)0 2162 y(timizations)33 b(w)n(e)g(ha)n(v)n(e)f(applied)i
(to)f(our)f(implemen)n(tation,)0 2262 y(quan)n(tifying)38
b(the)i(individual)f(b)r(ene\014ts)g(whenev)n(er)f(p)r(ossi-)0
2361 y(ble.)e(F)-7 b(or)24 b(eac)n(h)g(optimization,)h(w)n(e)g(pic)n(k)
n(ed)f(an)g(appropriate)0 2461 y(b)r(enc)n(hmark)34 b(that)i(clearly)e
(demonstrates)g(the)i(di\013erence)0 2560 y(in)i(p)r(erformance.)66
b(\(The)38 b(di\013erence)g(for)f(the)h(other)g(pro-)0
2660 y(grams)26 b(is)i(t)n(ypically)f(less)g(dramatic.\))0
2891 y Fc(5.1)112 b(Cac)m(hing)0 3044 y Fm(The)40 b(\014rst)g
(optimization)g(is)g(cac)n(hing)f(\(memoization\))h(in)0
3144 y(lazy)33 b(lists.)54 b(A)34 b(lazy)f(list)h(is)f(represen)n(ted)f
(b)n(y)h(an)h(unev)-5 b(alu-)0 3244 y(ated)23 b(function,)j(or)c(\\th)n
(unk".)35 b(When)24 b(the)g(v)-5 b(alue)24 b(of)f(the)h(list)0
3343 y(is)i(requested)g(\()p Fi(head\(\))p Fm(,)j Fi(tail\(\))p
Fm(,)f(or)d Fi(null\(\))j Fm(is)e(called\),)h(the)0 3443
y(th)n(unk)e(is)f(called)h(in)f(order)g(to)g(pro)r(duce)g(the)h(v)-5
b(alue.)36 b(Rather)0 3543 y(than)i(re-call)f(the)i(th)n(unk)f(eac)n(h)
g(time)h(the)f(list's)g(v)-5 b(alue)39 b(is)0 3642 y(needed,)h(the)e
(th)n(unk)f(should)h(b)r(e)f(called)g(only)g(once,)j(and)0
3742 y(its)d(v)-5 b(alue)37 b(remem)n(b)r(ered.)65 b(This)38
b(optimization)f(is)g(imp)r(er-)0 3841 y(ativ)n(e)e(for)g(programs)e
(lik)n(e)j(Hamming;)j(without)d(cac)n(hing,)0 3941 y(Hamming)23
b(gro)n(ws)e(exp)r(onen)n(tially)i(\(rather)g(than)g(linearly\).)83
4032 y(Cac)n(hing)d(is)g(implemen)n(ted)h(as)f(a)g(kind)h(of)f(v)-5
b(arian)n(t)20 b(record.)0 4124 y(Conceptually)-7 b(,)27
b(a)g(\\memoized)g(th)n(unk")h(or)e(\\cac)n(he")g(is)78
4276 y Fi(class)41 b(Cache)472 b({)157 4367 y(bool)40
b(value_is_valid;)157 4458 y(Fun0<Value>)i(function;)157
4550 y(Value)e(value;)78 4641 y(public:)157 4732 y(Value)g(val\(\))198
b({)235 4824 y(if\()40 b(!value_is_valid)j(\))314 4915
y({)c(value=function\(\);)k(value_is_valid=true;)h(})235
5006 y(return)d(value;)g(})157 b(};)1988 523 y Fm(In)60
b(the)f(actual)g(implemen)n(tation,)67 b(w)n(e)58 b(eliminate)h(the)
1988 623 y(space)40 b(o)n(v)n(erhead)e(of)j(the)g(b)r(o)r(olean)f(v)-5
b(ariable)39 b(b)n(y)h(using)g(a)1988 722 y(distinguished)i
Fi(Value)i Fm(\(named)e Fi(XBAD)p Fm(\))h(to)f(represen)n(t)e(the)1988
822 y Fi(!value_is_valid)31 b Fm(state.)1988 1062 y Fc(5.2)113
b(Structure)37 b(of)g(list)f(implemen)m(tation)1988 1218
y Fm(When)50 b(w)n(e)f(reimplemen)n(ted)g(F)n(C++)f(lazy)g(lists)h(to)g
(use)1988 1317 y(cac)n(hing,)29 b(w)n(e)g(exp)r(erimen)n(ted)g(with)h
(three)f(di\013eren)n(t)g(struc-)1988 1417 y(tures)d(for)f(the)h
(underlying)f(implemen)n(tation)h(of)g(lazy)f(lists.)1988
1516 y(W)-7 b(e)29 b(arbitrarily)d(named)i(the)g(three)g(v)n(ersions)e
(TOP)-7 b(,)28 b(MID-)1988 1616 y(DLE,)42 b(and)f(BOTTOM)g(\(the)i
(names)e(re\015ect)g(the)h(order)1988 1716 y(that)28
b(w)n(e)f(wrote)g(them)h(on)f(a)g(white)h(b)r(oard\).)36
b(These)27 b(struc-)1988 1815 y(tures)22 b(are)g(represen)n(ted)f(b)r
(oth)i(as)f(sk)n(eleton)f(C++)h(co)r(de)g(and)1988 1915
y(pictorially)28 b(in)g(Figure)f(14.)38 b(\(T)-7 b(o)28
b(simplify)h(the)f(exp)r(osition,)1988 2015 y(the)41
b(co)r(de)f(assumes)f(that)i(lists)f(hold)g(only)g Fi(int)p
Fm(s)h(\(rather)1988 2114 y(than)33 b(b)r(eing)f Fi(template)42
b(<class)e(T>)p Fm(s\),)34 b(and)f(also)e(uses)h(ra)n(w)1988
2214 y(p)r(oin)n(ters)27 b(rather)g(than)h(reference-coun)n(ted)e(p)r
(oin)n(ters.\))2071 2315 y(W)-7 b(e)71 b(tested)f(all)g(three)g(list)g
(implemen)n(tations)g(on)1988 2415 y(Primes\(1000\);)38
b(the)e(results)g(are)e(sho)n(wn)i(in)g(T)-7 b(able)35
b(4.)61 b(It)1988 2514 y(should)26 b(b)r(e)g(no)f(surprise)g(that)g
(MIDDLE)h(w)n(as)f(the)h(winner;)1988 2614 y(MIDDLE)32
b(con)n(tains)e(few)n(er)g(indirections)g(than)h(the)g(other)1988
2713 y(t)n(w)n(o)g(solutions.)46 b(TOP)30 b(and)h(BOTTOM)f(are)g(b)r
(oth)i(slo)n(w)n(er)1988 2813 y(due)c(to)e(the)i(extra)e(indirection)g
(and)h(p)r(o)r(orer)f(lo)r(calit)n(y)-7 b(.)36 b(Ad-)1988
2913 y(ditionally)-7 b(,)40 b(BOTTOM)d(\(and)g(MIDDLE)h(to)r(o,)i
(actually\))1988 3012 y(su\013ers)35 b(another)g(hit)h(b)r(ecause)f(it)
g(needs)h(a)f(sp)r(ecial)g Fi(value)1988 3112 y Fm(to)27
b(represen)n(t)e(the)i(empt)n(y)f(list)h(\(called)f Fi(XNIL)p
Fm(,)i(whic)n(h)e(is)g(lik)n(e)1988 3212 y Fi(XBAD)h
Fm(men)n(tioned)f(in)g(Section)g(5.1\),)g(and)g(ev)n(ery)e(ev)-5
b(aluation)1988 3311 y(of)39 b(a)f(list)h(requires)e(an)i(extra)f(test)
h(to)f(determine)h(whic)n(h)1988 3411 y(mem)n(b)r(er)28
b(of)f(the)h(v)-5 b(arian)n(t)27 b(record)f(is)i(activ)n(e.)2071
3512 y(The)73 b(c)n(hallenge)e(is)h(implemen)n(ting)h(MIDDLE)f(for)1988
3611 y Fi(List<T>)p Fm(s)36 b(where)e Fi(T)h Fm(has)e(no)h(default)h
(constructor.)56 b(C++)1988 3711 y(requires)31 b(that)g(constructors)f
(b)r(e)i(called)f(for)g(all)g(mem)n(b)r(ers)1988 3811
y(of)g(an)g(ob)5 b(ject,)32 b(but)f(in)g(the)h(case)e(of)h(MIDDLE,)g
(when)g(the)1988 3910 y Fi(value)j Fm(in)f(the)g Fi(Cache)h
Fm(isn't)f(v)-5 b(alid,)35 b(w)n(e)d(ha)n(v)n(e)g(no)g(construc-)1988
4010 y(tor)39 b(to)g(call.)70 b(As)39 b(a)g(result,)i(the)f(\014rst)e
(\014eld)i(of)e(the)i Fi(pair)1988 4110 y Fm(is)i(actually)f(an)h
Fi(unsigned)f(char)i Fm(arra)n(y)c(whose)i(size)h(and)1988
4209 y(alignmen)n(t)26 b(are)f(appropriate)g(for)g Fi(T)p
Fm(s.)37 b(Placemen)n(t)25 b Fi(new)i Fm(and)1988 4309
y(explicit)k(destructor)f(in)n(v)n(o)r(cations)f(are)h(used)h(to)g
(explicitly)1988 4408 y(manage)c(the)h(lifetime)g(of)g(the)f
Fi(T)h Fm(created)f(in)h(the)g(ra)n(w)e(stor-)1988 4508
y(age)18 b(when)i(the)f Fi(Cache)40 b(value)21 b Fm(b)r(ecomes)d(v)-5
b(alid.)34 b(It)20 b(should)e(b)r(e)1988 4608 y(noted)32
b(that)g(the)f(C++)g(language)f(standard)g(pro)n(vides)g(no)1988
4707 y(mec)n(hanism)25 b(to)g(ensure)g(that)h(the)g Fi(unsigned)41
b(char)26 b Fm(arra)n(y)d(is)1988 4807 y(prop)r(erly)g(aligned)g(to)g
(hold)g(data)g(of)g(t)n(yp)r(e)h Fi(T)p Fm(.)g(Nev)n(ertheless,)1988
4907 y(there)d(is)f(a)h(relativ)n(ely)e(p)r(ortable)h(\\hac)n(k":)32
b(creating)19 b(a)i(union)1988 5006 y(of)39 b(all)f(kinds)h(of)g(C++)f
(ob)5 b(jects)38 b(\(primitiv)n(e)h(data)f(t)n(yp)r(es,)1905
5255 y(10)p eop
%%Page: 11 11
11 10 bop 0 4203 a @beginspecial 0 @llx 0 @lly 508 @urx
379 @ury 5080 @rwi @setspecial
%%BeginDocument: figure.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 379 moveto 0 0 lineto 508 0 lineto 508 379 lineto closepath clip newpath
-12.0 389.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Courier ff 180.00 scf sf
5100 1350 m
gs 1 -1 sc (   typedef pair<int,List>* Value;) col0 sh gr
/Courier ff 180.00 scf sf
5100 300 m
gs 1 -1 sc (TOP) col0 sh gr
/Courier ff 180.00 scf sf
5100 510 m
gs 1 -1 sc (class List {) col0 sh gr
/Courier ff 180.00 scf sf
5100 720 m
gs 1 -1 sc (   Cache* c;) col0 sh gr
/Courier ff 180.00 scf sf
5100 930 m
gs 1 -1 sc (};) col0 sh gr
/Courier ff 180.00 scf sf
5100 1140 m
gs 1 -1 sc (class Cache {) col0 sh gr
/Courier ff 180.00 scf sf
5100 1560 m
gs 1 -1 sc (   Fun0<Value> function;) col0 sh gr
/Courier ff 180.00 scf sf
5100 1770 m
gs 1 -1 sc (   Value value;) col0 sh gr
/Courier ff 180.00 scf sf
5100 1980 m
gs 1 -1 sc (};) col0 sh gr
/Courier ff 180.00 scf sf
5100 5010 m
gs 1 -1 sc (class List {) col0 sh gr
/Courier ff 180.00 scf sf
5100 5220 m
gs 1 -1 sc (   Cache* c;) col0 sh gr
/Courier ff 180.00 scf sf
5100 5640 m
gs 1 -1 sc (class Cache {) col0 sh gr
/Courier ff 180.00 scf sf
5100 5850 m
gs 1 -1 sc (   typedef pair<int*,List> Value;) col0 sh gr
/Courier ff 180.00 scf sf
5100 6060 m
gs 1 -1 sc (   Fun0<Value> function;) col0 sh gr
/Courier ff 180.00 scf sf
5100 6270 m
gs 1 -1 sc (   Value value;) col0 sh gr
/Courier ff 180.00 scf sf
5100 4800 m
gs 1 -1 sc (BOTTOM) col0 sh gr
/Courier ff 180.00 scf sf
5100 5430 m
gs 1 -1 sc (};) col0 sh gr
/Courier ff 180.00 scf sf
5100 6480 m
gs 1 -1 sc (};) col0 sh gr
/Courier ff 180.00 scf sf
5100 3600 m
gs 1 -1 sc (   typedef pair<int,List> Value;) col0 sh gr
/Courier ff 180.00 scf sf
5100 2550 m
gs 1 -1 sc (MIDDLE) col0 sh gr
/Courier ff 180.00 scf sf
5100 2760 m
gs 1 -1 sc (class List {) col0 sh gr
/Courier ff 180.00 scf sf
5100 2970 m
gs 1 -1 sc (   Cache* c;) col0 sh gr
/Courier ff 180.00 scf sf
5100 3180 m
gs 1 -1 sc (};) col0 sh gr
/Courier ff 180.00 scf sf
5100 3390 m
gs 1 -1 sc (class Cache {) col0 sh gr
/Courier ff 180.00 scf sf
5100 3810 m
gs 1 -1 sc (   Fun0<Value> function;) col0 sh gr
/Courier ff 180.00 scf sf
5100 4020 m
gs 1 -1 sc (   Value value;) col0 sh gr
/Courier ff 180.00 scf sf
5100 4230 m
gs 1 -1 sc (};) col0 sh gr
% Polyline
7.500 slw
n 750 375 m 1425 375 l 1425 975 l 750 975 l
 cp gs col0 s gr 
% Polyline
n 750 675 m
 1425 675 l gs col0 s gr 
% Polyline
n 821 675 m 829 675 l gs col0 s gr
% Polyline
n 825 375 m
 825 975 l gs col0 s gr 
/Times-Roman ff 180.00 scf sf
975 600 m
gs 1 -1 sc (fxn) col0 sh gr
% Polyline
n 2775 375 m 3450 375 l 3450 975 l 2775 975 l
 cp gs col0 s gr 
% Polyline
n 2775 675 m
 3450 675 l gs col0 s gr 
% Polyline
n 2846 675 m 2854 675 l gs col0 s gr
% Polyline
n 2850 375 m
 2850 975 l gs col0 s gr 
/Times-Roman ff 180.00 scf sf
3000 600 m
gs 1 -1 sc (fxn) col0 sh gr
% Polyline
n 4200 675 m
 4725 675 l gs col0 s gr 
% Polyline
n 4650 525 m
 4650 825 l gs col0 s gr 
% Polyline
n 4725 525 m
 4725 825 l gs col0 s gr 
% Polyline
n 3750 2925 m
 4275 2925 l gs col0 s gr 
% Polyline
n 4200 2775 m
 4200 3075 l gs col0 s gr 
% Polyline
n 4275 2775 m
 4275 3075 l gs col0 s gr 
% Polyline
n 3825 5175 m
 4350 5175 l gs col0 s gr 
% Polyline
n 4275 5025 m
 4275 5325 l gs col0 s gr 
% Polyline
n 4350 5025 m
 4350 5325 l gs col0 s gr 
% Polyline
gs  clippath
1748 698 m 1729 641 l 1586 689 l 1710 680 l 1605 746 l cp
eoclip
n 1275 825 m
 1725 675 l gs col0 s gr gr

% arrowhead
n 1605 746 m 1710 680 l 1586 689 l 1605 746 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2715 705 m 2715 645 l 2564 645 l 2684 675 l 2564 705 l cp
eoclip
n 2250 675 m
 2700 675 l gs col0 s gr gr

% arrowhead
n 2564 705 m 2684 675 l 2564 645 l 2564 705 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3773 698 m 3754 641 l 3611 689 l 3735 680 l 3630 746 l cp
eoclip
n 3300 825 m
 3750 675 l gs col0 s gr gr

% arrowhead
n 3630 746 m 3735 680 l 3611 689 l 3630 746 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 3825 525 m 4425 525 l 4425 825 l 3825 825 l
 cp gs col0 s gr 
% Polyline
n 4125 525 m
 4125 825 l gs col0 s gr 
% Polyline
gs  clippath
698 698 m 679 641 l 536 689 l 660 680 l 555 746 l cp
eoclip
n 225 825 m
 675 675 l gs col0 s gr gr

% arrowhead
n 555 746 m 660 680 l 536 689 l 555 746 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1800 525 m 2400 525 l 2400 825 l 1800 825 l
 cp gs col0 s gr 
% Polyline
n 2100 525 m
 2100 825 l gs col0 s gr 
% Polyline
gs  clippath
2947 2799 m 2931 2742 l 2785 2783 l 2909 2779 l 2801 2840 l cp
eoclip
n 2400 2925 m
 2925 2775 l gs col0 s gr gr

% arrowhead
n 2801 2840 m 2909 2779 l 2785 2783 l 2801 2840 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1523 2798 m 1504 2741 l 1361 2789 l 1485 2780 l 1380 2846 l cp
eoclip
n 1050 2925 m
 1500 2775 l gs col0 s gr gr

% arrowhead
n 1380 2846 m 1485 2780 l 1361 2789 l 1380 2846 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1575 2475 m 2550 2475 l 2550 3075 l 1575 3075 l
 cp gs col0 s gr 
% Polyline
n 1650 2475 m
 1650 3075 l gs col0 s gr 
% Polyline
n 2100 2775 m 2100 2850 l 2100 3000 l
 2100 3075 l gs col0 s gr 
% Polyline
n 1575 2775 m
 2550 2775 l gs col0 s gr 
% Polyline
n 3000 2475 m 3975 2475 l 3975 3075 l 3000 3075 l
 cp gs col0 s gr 
% Polyline
n 3075 2475 m
 3075 3075 l gs col0 s gr 
% Polyline
n 3525 2775 m 3525 2850 l 3525 3000 l
 3525 3075 l gs col0 s gr 
% Polyline
n 3000 2775 m
 3975 2775 l gs col0 s gr 
% Polyline
gs  clippath
3022 5049 m 3006 4992 l 2860 5033 l 2984 5029 l 2876 5090 l cp
eoclip
n 2475 5175 m
 3000 5025 l gs col0 s gr gr

% arrowhead
n 2876 5090 m 2984 5029 l 2860 5033 l 2876 5090 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1598 5048 m 1579 4991 l 1436 5039 l 1560 5030 l 1455 5096 l cp
eoclip
n 1125 5175 m
 1575 5025 l gs col0 s gr gr

% arrowhead
n 1455 5096 m 1560 5030 l 1436 5039 l 1455 5096 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1650 4725 m 2625 4725 l 2625 5325 l 1650 5325 l
 cp gs col0 s gr 
% Polyline
n 1725 4725 m
 1725 5325 l gs col0 s gr 
% Polyline
n 2175 5025 m 2175 5100 l 2175 5250 l
 2175 5325 l gs col0 s gr 
% Polyline
n 3075 4725 m 4050 4725 l 4050 5325 l 3075 5325 l
 cp gs col0 s gr 
% Polyline
n 3150 4725 m
 3150 5325 l gs col0 s gr 
% Polyline
n 3600 5025 m 3600 5100 l 3600 5250 l
 3600 5325 l gs col0 s gr 
% Polyline
n 3075 5025 m
 4050 5025 l gs col0 s gr 
% Polyline
n 1725 5625 m 2175 5625 l 2175 5925 l 1725 5925 l
 cp gs col0 s gr 
% Polyline
n 3150 5625 m 3600 5625 l 3600 5925 l 3150 5925 l
 cp gs col0 s gr 
% Polyline
gs  clippath
1920 5565 m 1980 5565 l 1980 5414 l 1950 5534 l 1920 5414 l cp
eoclip
n 1950 5175 m
 1950 5550 l gs col0 s gr gr

% arrowhead
n 1920 5414 m 1950 5534 l 1980 5414 l 1920 5414 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3345 5565 m 3405 5565 l 3405 5414 l 3375 5534 l 3345 5414 l cp
eoclip
n 3375 5175 m
 3375 5550 l gs col0 s gr gr

% arrowhead
n 3345 5414 m 3375 5534 l 3405 5414 l 3345 5414 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1650 5025 m
 2625 5025 l gs col0 s gr 
/Times-Roman ff 180.00 scf sf
2175 1425 m
gs 1 -1 sc (TOP) col0 sh gr
/Times-Roman ff 180.00 scf sf
2100 6300 m
gs 1 -1 sc (BOTTOM) col0 sh gr
/Times-Roman ff 180.00 scf sf
2100 3900 m
gs 1 -1 sc (MIDDLE) col0 sh gr
/Times-Roman ff 180.00 scf sf
1950 2700 m
gs 1 -1 sc (fxn) col0 sh gr
/Times-Roman ff 180.00 scf sf
3375 2700 m
gs 1 -1 sc (fxn) col0 sh gr
/Times-Roman ff 180.00 scf sf
2025 4950 m
gs 1 -1 sc (fxn) col0 sh gr
/Times-Roman ff 180.00 scf sf
3450 4950 m
gs 1 -1 sc (fxn) col0 sh gr
/Times-Roman ff 180.00 scf sf
1875 750 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 180.00 scf sf
3900 750 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 180.00 scf sf
1800 3000 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 180.00 scf sf
3225 3000 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 180.00 scf sf
1875 5850 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 180.00 scf sf
3300 5850 m
gs 1 -1 sc (2) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 1100 4386 a Fm(Figure)27 b(14:)36 b(Three)27
b(p)r(ossible)g(list)h(implemen)n(tations)1905 5255 y(11)p
eop
%%Page: 12 12
12 11 bop 455 443 995 4 v 453 543 4 100 v 505 513 a Fm(Primes\(1000\))p
1035 543 V 97 w(Time)28 b(\(s\))p 1448 543 V 455 546
995 4 v 455 563 V 453 663 4 100 v 655 633 a(TOP)p 1035
663 V 312 w(12.43)p 1448 663 V 455 666 995 4 v 453 765
4 100 v 575 736 a(MIDDLE)p 1035 765 V 253 w(7.77)p 1448
765 V 455 769 995 4 v 453 868 4 100 v 554 839 a(BOTTOM)p
1035 868 V 210 w(26.36)p 1448 868 V 455 872 995 4 v 96
1104 a(T)-7 b(able)27 b(4:)36 b(Comparison)26 b(of)i(di\013eren)n(t)g
(list)g(structures)p 10 1237 1886 4 v 8 1336 4 100 v
74 1306 a(Hamming\(12000\))e(\(no)i(functoid)g(reuse\))p
1480 1336 V 113 w(Time)g(\(s\))p 1894 1336 V 10 1340
1886 4 v 10 1356 V 8 1456 4 100 v 60 1426 a(F)n(C++,)f(non-in)n(trusiv)
n(e)f(\(-IR)n(C)h(-REUSE\))p 1480 1456 V 162 w(0.451)p
1894 1456 V 10 1459 1886 4 v 8 1559 4 100 v 122 1529
a(F)n(C++,)g(in)n(trusiv)n(e)g(\(+IR)n(C)g(-REUSE\))p
1480 1559 V 224 w(0.280)p 1894 1559 V 10 1562 1886 4
v 48 1794 a(T)-7 b(able)27 b(5:)37 b(The)28 b(v)-5 b(alue)27
b(of)h(in)n(trusiv)n(e)e(reference)h(coun)n(ting)0 2073
y(structures,)40 b(p)r(oin)n(ters,)f(p)r(oin)n(ters)f(to)f(functions,)k
(p)r(oin)n(ters)0 2173 y(to)30 b(mem)n(b)r(ers,)g(etc.\))43
b(ensures)29 b(that)h(the)g(alignmen)n(t)f(of)h(the)0
2272 y(union)21 b(is)g(wide)g(enough)g(to)g(hold)g(an)n(y)f(kind)h(of)g
(ob)5 b(ject)21 b(on)g(al-)0 2372 y(most)j(an)n(y)f(system.)36
b(Life)24 b(w)n(ould)g(b)r(e)g(a)g(lot)g(simpler)g(if)g(C++)0
2472 y(w)n(ere)h(extended)h(to)g(ha)n(v)n(e)f(either)h(a)g(mec)n
(hanism)f(to)h(sp)r(ecify)0 2571 y(alignmen)n(ts)k(\(a)h(system-lev)n
(el)f(solution\))g(or)g(a)h(w)n(a)n(y)e(to)i(ex-)0 2671
y(plicitly)i(ask)e(to)h(ha)n(v)n(e)f(a)h(particular)f(structure)h(mem)n
(b)r(er's)0 2771 y(constructor)c Fk(not)38 b Fm(called)30
b(when)g(the)g(structure)f(is)h(created)0 2870 y(\(a)19
b(language-lev)n(el)e(solution\);)22 b(in)e(the)g(mean)n(time,)h(the)e
(hac)n(k)0 2970 y(w)n(orks)32 b(w)n(ell)h(enough)g(on)g(most)g
(systems.)55 b(\(A)34 b(system)f(for)0 3070 y(whic)n(h)h(the)h(hac)n(k)
f(do)r(es)g(not)g(w)n(ork)f(can)h(alw)n(a)n(ys)e(rev)n(ert)i(to)0
3169 y(an)27 b(alternativ)n(e)g(implemen)n(tation)g(of)h(lists,)g(e.g.)
36 b Fi(TOP)p Fm(.\))0 3438 y Fc(5.3)112 b(In)m(trusiv)m(e)37
b(reference)g(coun)m(ting)0 3605 y Fm(The)44 b(F)n(C++)f(library)f(con)
n(tains)h(t)n(w)n(o)g(reference-coun)n(ted)0 3704 y(p)r(oin)n(ter)48
b(classes:)78 b(one)48 b(that)g(uses)h(an)f(in)n(trusiv)n(e)f(refer-)0
3804 y(ence)33 b(coun)n(t,)i(and)e(one)g(that)h(is)f(non-in)n(trusiv)n
(e.)53 b(The)33 b(t)n(w)n(o)0 3903 y(sc)n(hemes)j(are)f(depicted)j(in)e
(Figure)g(15.)63 b(The)37 b(adv)-5 b(an)n(tage)0 4003
y(of)38 b(non-in)n(trusiv)n(e)e(reference)g(coun)n(ts)h(is)h(that)g
(the)g(ob)5 b(ject)0 4103 y(b)r(eing)32 b(coun)n(ted)g(do)r(es)g(not)g
(need)g(to)g(supp)r(ort)g(an)n(y)f(partic-)0 4202 y(ular)j(in)n
(terface;)39 b(it)c(is)g(ignoran)n(t)e(of)i(the)h(reference)e(coun)n
(t-)0 4302 y(ing.)62 b(In)n(trusiv)n(e)35 b(reference)g(coun)n(ts,)i
(on)f(the)g(other)f(hand,)0 4402 y(require)22 b(that)i(the)g(ob)5
b(jects)23 b(they)h(coun)n(t)f(supply)g(the)h(coun)n(t-)0
4501 y(ing)37 b(mec)n(hanism.)64 b(The)37 b(b)r(ene\014ts)g(of)g(in)n
(trusiv)n(e)f(reference)0 4601 y(coun)n(ts)25 b(are)g(increased)g(lo)r
(calit)n(y)g(and)h(few)n(er)g(separate)e(calls)0 4700
y(to)40 b Fi(new)p Fm(.)73 b(\(F)-7 b(or)40 b(a)f(more)g(thorough)f(in)
n(tro)r(duction)i(to)f(the)0 4800 y(topic)d(of)g(in)n(trusiv)n(e)f
(reference)g(coun)n(ts,)j(see)d([3],)j(Chapter)0 4900
y(7.\))83 5006 y(W)-7 b(e)27 b(tested)g(Hamming)f(b)r(oth)h(with)g(and)
g(without)g(in)n(tru-)1988 492 y Fi(struct)41 b(Take)f({)2067
583 y(template)h(<class)f(T>)2067 675 y(OddList<T>)2067
766 y(operator\(\)\()i(size_t)e(n,)g(const)g(List<T>&)h(l)f(\))f(const)
i({)2145 857 y(if\()f(n==0)g(||)g(null\(l\))h(\))2224
949 y(return)f(NIL;)2145 1040 y(else)2224 1131 y(return)g(cons\()h
(head\(l\),)2734 1222 y(curry2\(Take\(\),n-1,tail\(l\)\))k(\);)2067
1314 y(})1988 1405 y(})40 b(take;)2207 1671 y Fm(Figure)27
b(16:)36 b(tak)n(e\(\))27 b(without)h(functoid)g(reuse)1988
1955 y(siv)n(e)23 b(reference)f(coun)n(ts.)35 b(Since)24
b(the)f(\\reuse)f(functoids")h(op-)1988 2055 y(timization)k
(\(discussed)f(in)h(the)g(follo)n(wing)e(subsection\))i(re-)1988
2154 y(quires)k(in)n(trusiv)n(e)g(reference)g(coun)n(ts,)h(w)n(e)g
(turned)g(o\013)g(that)1988 2254 y(optimization)c(for)f(b)r(oth)i(of)f
(these)g(runs,)f(in)i(order)d(to)i(ha)n(v)n(e)1988 2354
y(a)f(fair)f(comparison.)34 b(As)27 b(seen)f(in)h(T)-7
b(able)26 b(5,)h(the)g(lac)n(k)e(of)i(in-)1988 2453 y(trusiv)n(e)j
(reference)g(coun)n(ts)g(mak)n(es)g(Hamming)h(slo)n(w)e(do)n(wn)1988
2553 y(b)n(y)f(a)f(factor)g(of)g(ab)r(out)h(1.6.)1988
2823 y Fc(5.4)113 b(Reusing)67 b(functoids)g(during)g(recur-)2244
2940 y(siv)m(e)37 b(calls)1988 3106 y Fm(The)32 b(t)n(ypical)f
(implemen)n(tation)h(of)f(a)h(functoid)g(whic)n(h)f(op-)1988
3206 y(erates)22 b(on)g(lazy)g(lists)h(con)n(tains)e(a)i(curried)e
(recursiv)n(e)g(call)h(as)1988 3305 y(its)28 b(last)f(line.)37
b(F)-7 b(or)26 b(example,)h(consider)f(the)i Fi(Take)g
Fm(functoid)1988 3405 y(sho)n(wn)j(in)g(Figure)g(16)f(\(with)i
Fi(Sig)g Fm(mem)n(b)r(er)f(elided\).)49 b(\(Re-)1988
3505 y(call)26 b(that)g Fi(take)h Fm(selects)f(the)g(\014rst)g
Fk(N)39 b Fm(elemen)n(ts)26 b(of)g(a)g(list)g(an)1988
3604 y(discards)21 b(the)h(rest.\))35 b(The)21 b(call)h(to)f
Fi(curry2\(\))j Fm(that)e(is)g(passed)1988 3704 y(to)g
Fi(cons\(\))h Fm(in)f(the)g(last)f(line)h(of)g(the)g(functoid)g
(creates)f(a)g(new)1988 3804 y(ob)5 b(ject)29 b(on)g(the)h(heap)e(that)
i(represen)n(ts)d(the)j(recursiv)n(e)d(call)1988 3903
y(\(the)35 b(\\th)n(unk")e(that)h(mak)n(es)f(functoids)i(lazy\).)55
b(The)34 b(only)1988 4003 y(thing)24 b(that)g(di\013ers)f(b)r(et)n(w)n
(een)h(the)g(newly)f(created)g(functoid)1988 4102 y(and)h(the)g(curren)
n(t)f(functoid)h(itself)h(are)e(the)h(v)-5 b(alues)23
b(of)h Fi(l)g Fm(and)1988 4202 y Fi(n)p Fm(.)44 b(Instead)30
b(of)g(discarding)e(the)i(called)g(functoid)g(and)g(cre-)1988
4302 y(ating)i(a)f(similar)g(new)h(functoid,)h(w)n(e)e(can)h(reco)r(de)
f Fi(take)h Fm(so)1988 4401 y(that)26 b(it)f(reuses)f(the)i(functoid.)
36 b(Figure)25 b(17)f(sho)n(ws)g(the)h(co)r(de)1988 4501
y(with)j(this)g(reuse)f(\(again,)g(with)h Fi(Sig)g Fm(mem)n(b)r(ers)g
(elided\).)2071 4608 y(W)-7 b(e)33 b(tested)f(Primes)g(b)r(oth)g(with)h
(and)f(without)h(\\reuse")1988 4707 y(v)n(ersions)i(of)h
Fi(filter\(\))p Fm(,)41 b Fi(take\(\))p Fm(,)f Fi(at\(\))p
Fm(,)f Fi(enumFrom\(\))p Fm(,)i(and)1988 4807 y Fi(enumFromTo\(\))p
Fm(.)93 b(The)46 b(results)f(are)f(sho)n(wn)g(in)i(T)-7
b(able)45 b(6.)1988 4907 y(Clearly)-7 b(,)24 b(reusing)e(functoids)i
(is)f(a)g(big)g(win.)36 b(When)24 b(there)f(is)1988 5006
y(no)30 b(reuse,)f(eac)n(h)f(call)h(to)h Fi(take\(\))h
Fm(has)d(a)h(functoid)h(destruc-)1905 5255 y(12)p eop
%%Page: 13 13
13 12 bop 0 990 a @beginspecial 0 @llx 0 @lly 424 @urx
66 @ury 4240 @rwi @setspecial
%%BeginDocument: figure2.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 66 moveto 0 0 lineto 424 0 lineto 424 66 lineto closepath clip newpath
-9.0 69.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 5625 750 m
 6300 750 l gs col0 s gr 
% Polyline
n 5625 375 m 6300 375 l 6300 1125 l 5625 1125 l
 cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
5700 600 m
gs 1 -1 sc ( count) col0 sh gr
/Times-Roman ff 180.00 scf sf
5700 300 m
gs 1 -1 sc ( object) col0 sh gr
/Times-Roman ff 180.00 scf sf
5700 975 m
gs 1 -1 sc (obj data) col0 sh gr
% Polyline
n 4725 375 m 5100 375 l 5100 675 l 4725 675 l
 cp gs col0 s gr 
% Polyline
n 6825 375 m 7200 375 l 7200 675 l 6825 675 l
 cp gs col0 s gr 
% Polyline
gs  clippath
5490 555 m 5490 495 l 5339 495 l 5459 525 l 5339 555 l cp
eoclip
n 4950 525 m
 5475 525 l gs col0 s gr gr

% arrowhead
n 5339 555 m 5459 525 l 5339 495 l 5339 555 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
6435 495 m 6435 555 l 6586 555 l 6466 525 l 6586 495 l cp
eoclip
n 6975 525 m
 6450 525 l gs col0 s gr gr

% arrowhead
n 6586 495 m 6466 525 l 6586 555 l 6586 495 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 5550 75 m 6375 75 l 6375 1125 l 5550 1125 l
 cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
4800 300 m
gs 1 -1 sc (ref) col0 sh gr
/Times-Roman ff 180.00 scf sf
6900 300 m
gs 1 -1 sc (ref) col0 sh gr
% Polyline
n 1125 300 m 1500 300 l 1500 900 l 1125 900 l
 cp gs col0 s gr 
% Polyline
n 1125 600 m
 1500 600 l gs col0 s gr 
% Polyline
n 3225 300 m 3600 300 l 3600 900 l 3225 900 l
 cp gs col0 s gr 
% Polyline
n 3225 600 m
 3600 600 l gs col0 s gr 
% Polyline
n 2025 150 m 2700 150 l 2700 450 l 2025 450 l
 cp gs col0 s gr 
% Polyline
gs  clippath
1971 325 m 1957 267 l 1810 304 l 1934 304 l 1824 362 l cp
eoclip
n 1350 450 m
 1950 300 l gs col0 s gr gr

% arrowhead
n 1824 362 m 1934 304 l 1810 304 l 1824 362 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2767 267 m 2753 325 l 2900 362 l 2791 304 l 2914 304 l cp
eoclip
n 3375 450 m
 2775 300 l gs col0 s gr gr

% arrowhead
n 2914 304 m 2791 304 l 2900 362 l 2914 304 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1965 780 m 1965 720 l 1814 720 l 1934 750 l 1814 780 l cp
eoclip
n 1350 750 m
 1950 750 l gs col0 s gr gr

% arrowhead
n 1814 780 m 1934 750 l 1814 720 l 1814 780 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2760 720 m 2760 780 l 2911 780 l 2791 750 l 2911 720 l cp
eoclip
n 3375 750 m
 2775 750 l gs col0 s gr gr

% arrowhead
n 2911 720 m 2791 750 l 2911 780 l 2911 720 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 2025 675 m 2700 675 l 2700 1125 l 2025 1125 l
 cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
2100 375 m
gs 1 -1 sc ( count) col0 sh gr
/Times-Roman ff 180.00 scf sf
2100 975 m
gs 1 -1 sc ( object) col0 sh gr
/Times-Roman ff 180.00 scf sf
1200 225 m
gs 1 -1 sc (ref) col0 sh gr
/Times-Roman ff 180.00 scf sf
3300 225 m
gs 1 -1 sc (ref) col0 sh gr
/Times-Roman ff 180.00 scf sf
150 525 m
gs 1 -1 sc ( ) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 324 1173 a Fm(Figure)27 b(15:)36 b(Non-in)n(trusiv)n(e)26
b(reference)h(coun)n(ting)g(\(left\))h(and)g(in)n(trusiv)n(e)f
(reference)f(coun)n(ting)h(\(righ)n(t\))0 1553 y Fi(struct)41
b(TakeHelp:public)h(Fun0Impl<OddList<T>)i(>)39 b({)78
1644 y(mutable)i(size_t)g(n;)78 1735 y(mutable)g(List<T>)g(l;)78
1826 y(TakeHelp\()h(size_t)e(nn,)g(const)h(List<T>&)g(ll)e(\))157
1918 y(:)g(n\(nn\),)i(l\(ll\))f({})78 2009 y(OddList<T>)i
(operator\(\)\(\))g(const)e({)157 2100 y(if\()g(n==0)g(||)g(null\(l\))g
(\))235 2192 y(return)h(NIL;)157 2283 y(else)f({)235
2374 y(T)g(x)f(=)h(head\(l\);)235 2466 y(l)g(=)f(tail\(l\);)235
2557 y(--n;)235 2648 y(return)i(cons\(x,Fun0<OddList<T>)j(>\(this\)\);)
157 2740 y(})78 2831 y(})0 2922 y(};)0 3014 y(struct)d(Take)f({)78
3105 y(template)i(<class)e(T>)78 3196 y(List<T>)78 3288
y(operator\(\)\(size_t)k(n,const)c(List<T>&)h(l\))f(const)g({)157
3379 y(return)h(Fun0<OddList<T>)h(>)549 3470 y(\(new)e
(TakeHelp<T>\(n,l\)\);)78 3562 y(})0 3653 y(})f(take;)278
3919 y Fm(Figure)27 b(17:)36 b(tak)n(e\(\))28 b(with)g(functoid)g
(reuse)p 22 4291 1862 4 v 20 4391 4 100 v 505 4361 a(Primes\(1000\))p
1468 4391 V 530 w(Time)g(\(s\))p 1882 4391 V 22 4394
1862 4 v 22 4411 V 20 4511 4 100 v 86 4481 a(F)n(C++,)f(no)g(functoid)h
(reuse)f(\(-REUSE\))p 1468 4511 V 176 w(26.36)p 1882
4511 V 22 4514 1862 4 v 20 4614 4 100 v 72 4584 a(F)n(C++,)g(reusing)f
(functoids)i(\(+REUSE\))p 1468 4614 V 183 w(7.77)p 1882
4614 V 22 4617 1862 4 v 239 4849 a(T)-7 b(able)28 b(6:)36
b(The)28 b(v)-5 b(alue)27 b(of)h(reusing)f(functoids)1988
1411 y Fi(struct)41 b(Take)f({)2106 1503 y(template)h(<class)g(T>)2106
1594 y(OddList<T>)2106 1685 y(operator\(\)\()h(size_t)e(n,)g(const)g
(List<T>&)h(l,)2224 1777 y(Reuser2<Inv,Var,Var,Take,size_)q(t,Lis)q
(t<T>)46 b(>)2224 1868 y(r)39 b(=)h(REUSE_INIT)h(\))f(const)g({)2224
2051 y(if\()g(n==0)g(||)f(null\(l\))i(\))2341 2142 y(return)g(NIL;)2224
2233 y(else)2341 2325 y(return)g(cons\()f(head\(l\),)2851
2416 y(r\()g(Take\(\),)h(n-1,)f(tail\(l\))h(\))e(\);)2106
2507 y(})1988 2599 y(})h(take;)2190 2864 y Fm(Figure)27
b(18:)36 b(tak)n(e\(\))27 b(with)h(reuse)f(via)g(a)g(Reuser)1988
3187 y(ted,)42 b(deallo)r(cated,)e(and)e(has)g(a)g(new)h(functoid)g
(allo)r(cated)1988 3286 y(and)25 b(constructed.)35 b(With)26
b(reuse,)f(there)f(is)h(only)f(m)n(utation;)1988 3386
y(no)k(heap)f(allo)r(cation/deallo)r(cation)e(o)r(ccurs.)2071
3512 y(Comparing)39 b(Figures)g(16)g(and)h(17,)i(one)d(can)h(see)g
(that)1988 3611 y(hand-co)r(ding)32 b(a)h(\\reuse")e(v)n(ersion)g(of)i
(a)g(functoid)g(tak)n(es)f(a)1988 3711 y(bit)23 b(more)f(co)r(de)g
(than)h(the)g(non-reuse)e(v)n(ersion.)33 b(In)23 b(order)e(to)1988
3811 y(simplify)30 b(the)f(task)f(of)h(applying)f(this)h(v)-5
b(aluable)28 b(optimiza-)1988 3910 y(tion,)34 b(w)n(e)e(ha)n(v)n(e)f
(added)i Fi(Reuser)p Fm(s)g(to)g(the)f(library)-7 b(.)51
b Fi(Reuser)p Fm(s)1988 4010 y(enable)41 b(us)f(to)h(capture)f(the)h
(essence)f(of)g(functoid)i(reuse)1988 4110 y(with)29
b(signi\014can)n(tly)d(less)i(co)r(ding)f(e\013ort.)37
b(Figure)27 b(18)g(sho)n(ws)1988 4209 y Fi(Take)34 b
Fm(written)f(with)g(a)f Fi(Reuser)p Fm(.)53 b(A)33 b
Fi(ReuserN)h Fm(is)e(similar)g(to)1988 4309 y(a)40 b(call)h(to)f
Fi(curryN\(\))p Fm(.)77 b(The)41 b Fi(Reuser)h Fm(app)r(ears)d(as)h(an)
g(ex-)1988 4408 y(tra)27 b(parameter)e(to)i(the)h(functoid.)37
b(This)27 b(parameter)f(has)g(a)1988 4508 y(default)d(v)-5
b(alue)22 b(\(th)n(us)h(making)e(the)i(in)n(terface)f(c)n(hange)f
(e\013ec-)1988 4608 y(tiv)n(ely)34 b(\\in)n(visible")f(to)h(clien)n
(ts\))g(whic)n(h)g(is)g(used)g(to)g(create)1988 4707
y(a)39 b(new)f(th)n(unk)h(on)g(the)g(heap.)69 b(As)39
b(a)f(result,)k(the)d(initial)1988 4807 y(call)j(to)g(a)f(functoid)i
(that)f(emplo)n(ys)f(a)h Fi(Reuser)h Fm(allo)r(cates)1988
4907 y(space)f(for)g(a)g(th)n(unk.)82 b(Subsequen)n(t)42
b(recursiv)n(e)f(calls)h(are)1988 5006 y(then)29 b(c)n(hannelled)f
(through)f(the)i Fi(Reuser)h Fm(\(rather)d(than)h(via)1905
5255 y(13)p eop
%%Page: 14 14
14 13 bop 0 523 a Fm(a)26 b(call)g(to)g Fi(curry\(\))p
Fm(\);)i(the)f Fi(Reuser)p Fm('s)g(heap)f(th)n(unk,)h(when)f(in-)0
623 y(v)n(ok)n(ed,)35 b(explicitly)g(passes)f(itself)h(along)e(to)i
(the)g(next)g(call)0 722 y(as)24 b(the)h(extra)f(parameter.)35
b(This)25 b(enables)f(reuse)g(of)h(the)g(ex-)0 822 y(isting)g(heap)f
(th)n(unk.)36 b Fi(Reuser)p Fm(s)26 b(tak)n(e)e(template)h(parameters)0
922 y(sp)r(ecifying)41 b(the)g(argumen)n(t)f(t)n(yp)r(es)h(of)f(the)i
(to-b)r(e-curried)0 1021 y(call,)28 b(as)g(w)n(ell)f(as)h(extra)f
(template)i(parameters)d(that)j(sp)r(ec-)0 1121 y(ify)35
b(whether)f(those)h(parameters)d(are)i(in)n(v)-5 b(arian)n(t)33
b(\()p Fi(Inv)p Fm(\))j(or)0 1220 y(v)-5 b(arian)n(t)40
b(\()p Fi(Var)p Fm(\))i(b)r(et)n(w)n(een)f(calls)f(\(kno)n(wing)g(this)
h(informa-)0 1320 y(tion)d(prev)n(en)n(ts)f(needless)h(o)n(v)n
(erwriting)e(of)i(duplicate)g(v)-5 b(al-)0 1420 y(ues\).)51
b(Though)32 b(the)h(in)n(ternal)e(mec)n(hanism)h(is)g(quite)h(com-)0
1519 y(plicated,)k Fi(Reuser)p Fm(s)f(are)d(relativ)n(ely)h(easy)g(to)g
(apply)h(\(com-)0 1619 y(pare)j(the)i(co)r(de)f(in)h(Figures)e(16)h
(and)g(18\),)j(and)d(p)r(erform)0 1719 y(nearly)24 b(as)g(w)n(ell)h(as)
f(the)h(\\hand-written")f(co)r(de)g(to)h(p)r(erform)0
1818 y(the)33 b(optimization)f(\(there)g(is)g(only)g(a)g(small)g
(\\abstraction)0 1918 y(p)r(enalt)n(y"\).)0 2144 y Fc(5.5)112
b(Av)m(oiding)92 b(functions)h(with)g(static)255 2260
y(data)0 2405 y Fm(The)50 b Fi(Cache)h Fm(implemen)n(tation)f(\(Figure)
f(14,)55 b(MIDDLE\))0 2496 y(uses)19 b(t)n(w)n(o)f(distinguished)h(v)-5
b(alues)19 b(for)f(its)h(p)r(oin)n(ter)g(\014eld.)34
b(The)0 2587 y(v)-5 b(alue)39 b Fi(XNIL)h Fm(represen)n(ts)d(an)i(empt)
n(y)g(list,)j(and)c(the)i(v)-5 b(alue)0 2679 y Fi(XBAD)28
b Fm(represen)n(ts)e(an)h(\\uncac)n(hed")f(v)-5 b(alue)28
b(\(the)g(function)g(is)0 2770 y(v)-5 b(alid,)21 b(the)e(v)-5
b(alue)18 b(is)h(not\).)34 b(These)19 b(w)n(ere)e(originally)g(enco)r
(ded)0 2861 y(as)118 2989 y Fi(template)41 b(<class)f(T>)g(class)g
(Cache)h({)e(...)235 3080 y(static)i(Ref<Cache<T>)h(>&)e(XNIL\(\))g({)
353 3171 y(static)h(Ref<Cache<T>)h(>)d(dummy\()i(new)f(Cache)g(\);)353
3263 y(return)h(dummy;)235 3354 y(})f(//)g(XBAD)g(similarly)118
3445 y(})0 3573 y Fm(Ho)n(w)n(ev)n(er)26 b(it)i(is)f(far)g(b)r(etter)h
(to)g(sa)n(y)118 3700 y Fi(template)41 b(<class)f(T>)g(class)g(Cache)h
({)e(...)235 3791 y(static)i(Ref<Cache<T>)h(>)d(XNIL;)118
3883 y(})118 3974 y(Ref<Cache<T>)j(>)d(Cache<T>::XNIL\()k(new)d(Cache)g
(\);)0 4110 y Fm(In)32 b(the)g(former,)g(eac)n(h)f(time)h
Fi(XNIL\(\))h Fm(is)e(called,)i(a)e(b)r(o)r(olean)0 4209
y(\015ag)h(\(inserted)i(b)n(y)f(the)g(compiler\))g(m)n(ust)h(b)r(e)f(c)
n(hec)n(k)n(ed)f(\(to)0 4309 y(see)e(if)h(initialization)f(of)g(the)h
(static)f(v)-5 b(ariable)29 b(has)h(already)0 4408 y(o)r(ccurred\).)35
b(In)24 b(the)h(latter,)f(initialization)g(happ)r(ens)g(at)g(the)0
4508 y(start)34 b(of)h(the)g(program,)g(and)f Fi(XNIL)i
Fm(is)f(just)g(a)g(v)-5 b(alue.)58 b(W)-7 b(e)0 4608
y(tested)23 b(b)r(oth)g(v)n(ersions)e(on)i(Primes;)g(the)g(results)f
(are)g(sho)n(wn)0 4707 y(in)28 b(T)-7 b(able)27 b(7.)83
4807 y(Using)39 b(global)f(data)h(that)g(calls)g(constructors)e(can)i
(b)r(e)0 4907 y(p)r(erilous;)g(there)d(are)e(order-of-initialization)g
(and)h(order-)0 5006 y(of-destruction)30 b(issues)g(for)h(global)f(ob)5
b(jects)30 b(in)h(C++)f(that)p 1999 443 1885 4 v 1997
543 4 100 v 2493 513 a(Primes\(1000\))p 3468 543 V 542
w(Time)e(\(s\))p 3882 543 V 1999 546 1885 4 v 1999 563
V 1997 663 4 100 v 2049 633 a(F)n(C++,)e(static)i(data)f(in)h
(functions)g(\(-GL\))p 3468 663 V 162 w(11.63)p 3882
663 V 1999 666 1885 4 v 1997 765 4 100 v 2248 736 a(F)n(C++,)f(global)g
(data)g(\(+GL\))p 3468 765 V 383 w(7.77)p 3882 765 V
1999 769 1885 4 v 2225 1001 a(T)-7 b(able)27 b(7:)37
b(The)27 b(v)-5 b(alue)28 b(of)f(using)g(global)g(data)1988
1261 y(are)43 b(often)h(hard)f(to)g(solv)n(e.)84 b(F)-7
b(ortunately)g(,)47 b(all)c(of)h(these)1988 1360 y(global)20
b(ob)5 b(jects)20 b(\(whic)n(h)g(sometimes)g(refer)g(to)g(one)g
(another\))1988 1460 y(are)i(de\014ned)h(in)g(the)g(same)f(translation)
g(unit.)35 b(This)23 b(greatly)1988 1560 y(simpli\014es)j(the)f(issue,)
g(and)g(enables)g(us)g(to)g(ensure)g(the)g(cor-)1988
1659 y(rect)33 b(order)f(of)g(initialization)h(for)f(these)h(ob)5
b(jects)33 b(\(section)1988 1759 y(3.6.2,)47 b(paragraph)41
b(1)i(of)g(the)h(C++)f(standard)f([4],)48 b(pre-)1988
1859 y(scrib)r(es)28 b(the)g(order)f(of)h(initialization)g(for)g(suc)n
(h)f(ob)5 b(jects)3801 1828 y Fj(3)3838 1859 y Fm(\).)1988
1958 y(As)27 b(for)f(order-of-destruction)d(issues,)j(w)n(e)g(circum)n
(v)n(en)n(t)f(the)1988 2058 y(p)r(oten)n(tial)20 b(problems)e(b)n(y)h
(arti\014cally)g(incremen)n(ting)g(the)g(ref-)1988 2157
y(erence)30 b(coun)n(ts)g(of)g(the)h(global)e(ob)5 b(jects)30
b(during)g(initializa-)1988 2257 y(tion.)35 b(Then,)22
b(ev)n(en)e(when)g(the)h(reference-coun)n(ted)d(p)r(oin)n(ters)1988
2357 y(are)25 b(destructed)h(after)g(the)g(end)g(of)g
Fi(main\(\))p Fm(,)h(the)g(ref)e(coun)n(ts)1988 2456
y(do)32 b(not)f(go)f(to)i(zero,)f(and)g(so)g(the)h(ob)5
b(jects)31 b(to)g(whic)n(h)h(they)1988 2556 y(refer)d(are)e(left)j
(aliv)n(e;)f(they)g(dangle)f(in)h(the)g(heap)g(un)n(til)g(the)1988
2656 y(system)f(collects)f(them)h(when)g(the)g(program)d(exits.)2071
2755 y(Note)j(also)f(that)i(ha)n(ving)e Fi(XNIL\(\))i
Fm(return)f(a)f(reference)h(in)1988 2855 y(the)22 b(former)e(v)n
(ersion)f(is)i(quite)h(imp)r(ortan)n(t;)h(return)d(b)n(y)h(v)-5
b(alue)1988 2954 y(degrades)21 b(the)h(p)r(erformance)f(ev)n(en)h(more)
f(sev)n(erely)-7 b(.)34 b(This)22 b(is)1988 3054 y(b)r(ecause)31
b(returning)e(a)i Fi(Ref)g Fm(ob)5 b(ject)31 b(b)n(y)f(v)-5
b(alue)30 b(do)r(es)h(\(need-)1988 3154 y(less\))26 b(w)n(ork,)f
(incremen)n(ting)h(and)g(decremen)n(ting)f(the)i(refer-)1988
3253 y(ence)i(coun)n(t)f(as)g(the)g(temp)r(orary)g(reference)f(liv)n
(es)h(its)h(short)1988 3353 y(life.)1988 3584 y Fc(5.6)113
b(Using)43 b(iteration)e(instead)j(of)g(tail)d(re-)2244
3700 y(cursion)1988 3854 y Fm(g++)25 b(do)r(es)g(not)h(transform)e
(tail)i(recursion)e(in)n(to)h(iteration.)1988 3953 y(As)d(a)e(result,)i
(w)n(e)f(ha)n(v)n(e)f(done)h(the)h(transformation)d(b)n(y)i(hand)1988
4053 y(in)32 b(library)e(functions)i(lik)n(e)f Fi(filter\(\))i
Fm(and)f Fi(at\(\))p Fm(,)h(and)e(call)1988 4153 y(this)21
b(the)g(\\tail)f(recursion)f(optimization".)34 b(W)-7
b(e)21 b(ran)f(Primes)p 1988 4219 763 4 v 2081 4273 a
Fh(3)2115 4296 y Fg(It)57 b(should)e(b)r(e)h(noted)h(that)f(a)g(defect)
h(rep)r(ort)e(has)h(b)r(een)1988 4375 y(\014led)41 b(to)f(the)h(C++)e
(committee,)k(and)e(the)g(prop)r(osed)f(resolution)1988
4454 y(of)i(the)h(defect)h(rep)r(ort)e(w)n(ould)h(in)n(v)l(alidate)g
(the)g(paragraph)g(cited)1988 4533 y(ab)r(o)n(v)n(e.)88
b(The)43 b(authors)g(of)f(this)g(pap)r(er)h(ha)n(v)n(e)g(suggested)h
(an)e(al-)1988 4612 y(ternativ)n(e)36 b(resolution)e(for)f(the)i
(issue,)h(whic)n(h)e(b)r(oth)h(addresses)g(the)1988 4691
y(defect)49 b(and)f(preserv)n(es)f(initialization)g(order.)102
b(The)47 b(matter)g(is)1988 4770 y(still)35 b(an)i(op)r(en)g(issue)e
(at)i(the)g(time)e(of)h(this)g(writing.)68 b(The)36 b(in)n(ter-)1988
4848 y(ested)i(reader)f(should)g(visit)g(h)n(ttp://an)n
(ubis.dkuug.dk/jtc1/sc22/)1988 4927 y(wg21/do)r(cs/cwg)p
2470 4927 22 4 v 28 w(activ)n(e.h)n(tml#270)31 b(and)g(read)g
(comp.std.c++)e(for)1988 5006 y(a)24 b(thorough)h(discussion)f(of)f
(the)i(issue.)1905 5255 y Fm(14)p eop
%%Page: 15 15
15 14 bop 77 443 1751 4 v 75 543 4 100 v 505 513 a Fm(Primes\(1000\))p
1412 543 V 475 w(Time)28 b(\(s\))p 1826 543 V 77 546
1751 4 v 77 563 V 75 663 4 100 v 127 633 a(F)n(C++)f(with)h(tail)g
(recursion)e(\(-TR)n(O\))p 1412 663 V 161 w(10.69)p 1826
663 V 77 666 1751 4 v 75 765 4 100 v 192 736 a(F)n(C++)h(with)h
(iteration)f(\(+TR)n(O\))p 1412 765 V 247 w(7.77)p 1826
765 V 77 769 1751 4 v 0 1001 a(T)-7 b(able)22 b(8:)34
b(The)22 b(v)-5 b(alue)22 b(of)g(transforming)f(tail)h(recursion)f(in)n
(to)0 1100 y(iteration)p 0 1213 1920 4 v -2 1312 4 100
v 512 1282 a(Primes\(1000\))p 1504 1312 V 560 w(Time)27
b(\(s\))p 1918 1312 V 0 1316 1920 4 v 0 1332 V -2 1432
4 100 v 124 1402 a(F)n(C++)f(\(-IR)n(C)i(-REUSE)f(-GL)g(-TR)n(O\))p
1504 1432 V 235 w(62.05)p 1918 1432 V 0 1435 1920 4 v
-2 1535 4 100 v 50 1505 a(F)n(C++)f(\(+IR)n(C)i(+REUSE)f(+GL)g(+TR)n
(O\))p 1504 1535 V 182 w(7.77)p 1918 1535 V 0 1538 1920
4 v 31 1770 a(T)-7 b(able)27 b(9:)37 b(The)27 b(v)-5
b(alue)28 b(of)f(four)h(optimizations)f(com)n(bined)0
2036 y(b)r(oth)h(with)g(and)g(without)g(this)g(optimization;)g(the)g
(results)0 2136 y(are)e(sho)n(wn)h(in)g(T)-7 b(able)27
b(8.)37 b(T)-7 b(ransforming)25 b(tail)j(recursion)e(to)0
2235 y(iteration)20 b(has)g(a)g(signi\014can)n(t)g(impact)g(on)h(the)f
(p)r(erformance.)0 2470 y Fc(5.7)112 b(Summary)37 b(of)h(Optimizations)
0 2625 y Fm(The)e(results)e(of)i(these)f(optimizations)g(accum)n
(ulate.)60 b(W)-7 b(e)0 2724 y(ran)19 b(Primes)g(b)r(oth)h(in)g(its)g
(optimal)g(con\014guration,)g(and)g(also)0 2824 y(with)26
b(all)g(four)f(of)h(the)g(previous)e(optimizations)i(turned)f(o\013)0
2923 y(\(in)n(trusiv)n(e)20 b(reference)g(coun)n(ting)g(\(IR)n(C\),)h
(reusing)e(functoids)0 3023 y(\(REUSE\),)29 b(global)e(data)h(\(GL\),)h
(and)f(tail)h(recursion)e(opti-)0 3123 y(mization)j(\(TR)n(O\)\).)g
(The)g(results)f(are)g(sho)n(wn)g(in)h(T)-7 b(able)30
b(9;)0 3222 y(note)24 b(that)h(without)f(an)n(y)g(of)g(these)g
(optimizations,)g(Primes)0 3322 y(is)i(eigh)n(t)f(times)h(slo)n(w)n
(er.)34 b(Keep)26 b(in)g(mind)g(also)e(that)i(the)g(un-)0
3422 y(optimized)c(program)d(still)j(includes)f(the)h(b)r(est)g(cac)n
(hing)f(and)0 3521 y(list)34 b(implemen)n(tation;)k(our)c(original)e
(naiv)n(e)i(implemen)n(ta-)0 3621 y(tion)28 b(w)n(as)e(ev)n(en)h(slo)n
(w)n(er.)0 3856 y Fc(5.8)112 b(Disclaimers)35 b(and)j(Conclusions)0
4010 y Fm(In)c(the)f(previous)f(section,)j(w)n(e)e(ha)n(v)n(e)f
(compared)g(the)i(p)r(er-)0 4110 y(formance)e(of)h(C++)f(programs)f
(with)j(Hask)n(ell)e(programs.)0 4209 y(It)23 b(is)g(imp)r(ortan)n(t)g
(to)g(note)g(that)h(no)e(direct)h(comparison)f(can)0
4309 y(really)33 b(b)r(e)h(made.)55 b(All)34 b(cross-language)c(exp)r
(erimen)n(ts)j(are)0 4408 y(fraugh)n(t)41 b(with)h(factors)e(that)i
(mak)n(e)f(a)g(direct)h(apples-to-)0 4508 y(apples)35
b(comparison)e(imp)r(ossible,)k(and)e(our)f(exp)r(erimen)n(ts)0
4608 y(are)i(no)h(di\013eren)n(t.)66 b(There)37 b(are)f(man)n(y)h
(confounding)g(fac-)0 4707 y(tors,)24 b(a)g(few)h(of)f(whic)n(h)h(w)n
(ere)e(men)n(tioned)h(at)h(the)g(b)r(eginning)0 4807
y(of)i(this)g(section.)36 b(Here)27 b(w)n(e)g(list)g(a)f(handful)i(of)f
(ob)n(vious)e(dif-)0 4907 y(ferences)31 b(b)r(et)n(w)n(een)h(F)n(C++)f
(and)h(Hask)n(ell)f(whic)n(h)h(w)n(e)g(ha)n(v)n(e)0 5006
y(not)c(attempted)g(to)f(accoun)n(t)g(for.)2071 523 y
Fb(\017)41 b Fm(Hask)n(ell)29 b(is)f(lazy)h(\(non-strict\))g
(throughout,)f(whereas)2154 623 y(C++)h(is)h(strict)g(except)f(in)i(F)n
(C++)d(lazy)i(lists,)g(whic)n(h)2154 722 y(are)d(explicitly)h(co)r(ded)
f(to)h(b)r(e)g(lazy)-7 b(.)2071 952 y Fb(\017)41 b Fm(F)n(C++)25
b(manages)f(memory)g(with)i(reference-coun)n(ted)2154
1052 y(p)r(oin)n(ters)i(and)g(uses)f(the)i(default)g(allo)r(cator)d
(pro)n(vided)2154 1151 y(b)n(y)43 b(our)e(implemen)n(tation.)82
b(Hask)n(ell)42 b(uses)g(garbage)2154 1251 y(collection,)22
b(and)d(a)h(sophisticated)g(allo)r(cator)e(designed)2154
1350 y(for)44 b(optimal)h(p)r(erformance)e(for)h(a)g(lazy)g(functional)
2154 1450 y(language.)2071 1680 y Fb(\017)d Fm(Hask)n(ell)26
b(has)f(more)g(exception-handling)h(b)n(y)f(default;)2154
1779 y(for)31 b(example,)g(taking)f(the)i Fi(head\(\))g
Fm(of)f(an)g(empt)n(y)g(list)2154 1879 y(raises)24 b(an)g(exception)h
(in)g(Hask)n(ell,)g(whereas)e(it)j(simply)2154 1979 y(leads)19
b(to)f(unde\014ned)i(b)r(eha)n(vior)d(in)i(F)n(C++)f(\(though)h(w)n(e)
2154 2078 y(do)31 b(ha)n(v)n(e)f(a)g(compiler)g(\015ag)g(that)h
(enables)f(exceptions)2154 2178 y(for)d(this)h(kind)g(of)g(misuse\).)
2071 2408 y Fb(\017)41 b Fm(GHC)27 b(Hask)n(ell)f(uses)g(a)g(64-bit)g
(represen)n(tation)f(for)h(all)2154 2507 y(in)n(tegers,)34
b(whereas)e(g++)g(uses)h(a)g(smaller)f(represen-)2154
2607 y(tation)c(for)f Fi(int)p Fm(s.)2071 2837 y Fb(\017)41
b Fm(Hask)n(ell)d(has)g(a)h(run-time)f(system)h(whic)n(h)f(supp)r(orts)
2154 2936 y(a)g(mix)g(of)f(compiled)h(and)g(in)n(terpreted)f(co)r(de,)j
(man-)2154 3036 y(ages)23 b(storage)f(allo)r(cation,)h(and)h(supp)r
(orts)f(concurren)n(t)2154 3135 y(threads)34 b(of)f(execution.)56
b(C++)33 b(has)g(no)g(comparable)2154 3235 y(run-time)28
b(system.)2071 3465 y Fb(\017)41 b Fm(Man)n(y)f(F)n(C++)f
(optimizations)g(m)n(ust)h(b)r(e)h(done)f(\\b)n(y)2154
3564 y(hand";)23 b(the)f(Hask)n(ell)e(compiler)h(p)r(erforms)f(similar)
g(op-)2154 3664 y(timizations)28 b(automatically)-7 b(.)2071
3910 y(By)32 b(listing)f(these)h(confounding)f(factors,)h(it)g(is)g
(not)g(our)1988 4010 y(in)n(ten)n(tion)27 b(to)g(in)n(v)-5
b(alidate)26 b(the)h(results)f(of)h(the)g(exp)r(erimen)n(ts)1988
4110 y(of)35 b(the)h(previous)d(section.)59 b(Rather,)36
b(w)n(e)f(simply)g(wish)g(to)1988 4209 y(mak)n(e)19 b(explicit)g(the)h
(con)n(text)f(in)g(whic)n(h)h(the)f(results)g(m)n(ust)g(b)r(e)1988
4309 y(in)n(terpreted.)39 b(It)29 b(is)f(meaningless)f(to)i(mak)n(e)e
(general)g(state-)1988 4408 y(men)n(ts)40 b(lik)n(e)f(\\F)n(C++)f(is)h
(faster)g(than)g(Hask)n(ell")f(or)g(vice-)1988 4508 y(v)n(ersa.)c(Our)
22 b(goal)f(is)h(merely)g(to)g(demonstrate)g(that)h(F)n(C++)1988
4608 y(can)34 b(p)r(erform)f(comparably)g(to)h(Hask)n(ell)f(on)g(some)h
(simple)1988 4707 y(example)26 b(programs,)e(and)i(to)g(suggest)e(that)
j(the)f(t)n(w)n(o)f(plat-)1988 4807 y(forms)e(ma)n(y)f(ha)n(v)n(e)g
(roughly)g(comparable)g(run-time)h(p)r(erfor-)1988 4907
y(mance)38 b(for)f(programs)e(whic)n(h)j(mak)n(e)f(hea)n(vy)g(use)g(of)
h(lists)1988 5006 y(and)28 b(lazy)f(ev)-5 b(aluation.)1905
5255 y(15)p eop
%%Page: 16 16
16 15 bop 0 523 a Fl(6)135 b(Applications)149 b(and)g(Conclu-)202
672 y(sions)0 854 y Fm(The)24 b(F)n(C++)f(library)f(supp)r(orts)i
(functional)g(programming)0 954 y(in)32 b(C++,)f(b)n(y)g(enabling)g
(users)g(to)g(write)g(and)g(manipulate)0 1054 y(p)r(olymorphic)24
b(and)h(higher-order)e(functions.)37 b(The)25 b(library)0
1153 y(has)33 b(a)g(smo)r(oth)h(in)n(terface)f(to)h(the)g(rest)f(of)h
(C++,)g(so)f(that)0 1253 y(functional)27 b(co)r(de)h(and)f(OO)f(co)r
(de)h(can)g(blend)h(w)n(ell.)37 b(In)27 b(this)0 1352
y(pap)r(er)35 b(w)n(e)h(ga)n(v)n(e)e(an)h(o)n(v)n(erview)f(of)i(F)n
(C++)f(and)g(analyzed)0 1452 y(the)g(p)r(erformance)e(of)i(its)g(lazy)f
(lists.)57 b(More)34 b(information)0 1552 y(ab)r(out)27
b(F)n(C++)f(can)g(b)r(e)h(found)g(in)h(the)f(references)e([1][6][7)o
(].)83 1651 y(F)n(C++)43 b(is)h(useful)g(for)g(functional)g
(programmers)d(b)r(e-)0 1751 y(cause)28 b(it)h(pro)n(vides)e(an)h
(alternativ)n(e,)g(commonly)g(a)n(v)-5 b(ailable)0 1851
y(platform)33 b(for)h(implemen)n(ting)g(familiar)f(designs.)55
b(An)34 b(ex-)0 1950 y(ample)21 b(of)f(this)h(approac)n(h)e(is)i(the)g
(XR)g(\()p Fk(Exact)j(R)l(e)l(al)9 b Fm(\))21 b(library)0
2050 y([9].)36 b(XR)27 b(uses)e(the)i(F)n(C++)e(infrastructure)g(to)h
(pro)n(vide)f(ex-)0 2149 y(act)38 b(\(or)g Fk(c)l(onstructive)6
b Fm(\))39 b(real-n)n(um)n(b)r(er)e(arithmetic,)k(using)0
2249 y(lazy)27 b(ev)-5 b(aluation.)83 2349 y(F)n(C++)36
b(is)g(also)f(an)h(in)n(teresting)g(platform)g(for)g(ob)5
b(ject-)0 2448 y(orien)n(ted)36 b(programming,)i(b)r(ecause)e(it)i
(allo)n(ws)d(functional)0 2548 y(tec)n(hniques)g(to)g(b)r(e)h(used)g
(in)f(conjunction)h(with)g(common)0 2648 y(OO)22 b(st)n(yles.)34
b(In)23 b(another)e(pap)r(er)h([7],)h(w)n(e)f(sho)n(w)g(ho)n(w)g(a)g(n)
n(um-)0 2747 y(b)r(er)33 b(of)f(OO)g(design)g(patterns)h(can)f(b)r(e)h
(simpli\014ed,)i(gener-)0 2847 y(alized,)f(or)f(made)g(safer)f(using)h
(functional)h(programming)0 2946 y(tec)n(hniques.)0 3219
y Fl(References)0 3401 y Fm([1])41 b(The)28 b(F)n(C++)e(w)n(eb)i(page:)
129 3501 y Fi(http://www.cc.gatech.edu/)p Fa(\030)p Fi(yanni)q(s/fc)q
(++/)0 3662 y Fm([2])41 b Fk(The)31 b(lamb)l(da)g(libr)l(ary)p
Fm(.)e Fi(http://lambda.cs.utu.fi/)0 3824 y Fm([3])41
b(A.)25 b(Alexandrescu,)f Fk(Mo)l(dern)j(C++)g(Design)p
Fm(,)e(Addison-)129 3924 y(W)-7 b(esley)g(,)28 b(2001.)0
4085 y([4])41 b Fk(ISO/IEC)67 b(14882:)113 b(Pr)l(o)l(gr)l(amming)67
b(L)l(anguages)f({)129 4185 y(C++)p Fm(.)28 b(ANSI,)g(1998.)0
4346 y([5])41 b(K.)23 b(L\177)-42 b(aufer,)23 b(\\A)g(F)-7
b(ramew)n(ork)20 b(for)j(Higher-Order)d(F)-7 b(unc-)129
4446 y(tions)19 b(in)f(C++",)i Fk(Pr)l(o)l(c.)i(Conf.)h(Obje)l
(ct-Oriente)l(d)e(T)-6 b(e)l(ch-)129 4546 y(nolo)l(gies)31
b(\(COOTS\))p Fm(,)d(Mon)n(terey)-7 b(,)26 b(CA,)i(June)g(1995.)0
4707 y([6])41 b(B.)56 b(McNamara)e(and)h(Y.)h(Smaragdakis,)61
b(\\F)n(C++:)129 4807 y(F)-7 b(unctional)35 b(Programming)c(in)k(C++",)
g Fk(Pr)l(o)l(c.)i(Inter-)129 4907 y(national)c(Confer)l(enc)l(e)f(on)g
(F)-6 b(unctional)32 b(Pr)l(o)l(gr)l(amming)129 5006
y(\(ICFP\))p Fm(,)d(Mon)n(treal,)d(Canada,)h(Septem)n(b)r(er)g(2000.)
1988 523 y([7])42 b(Y.)56 b(Smaragdakis)d(and)i(B.)h(McNamara,)61
b(\\F)n(C++:)2118 623 y(F)-7 b(unctional)65 b(T)-7 b(o)r(ols)65
b(for)g(Ob)5 b(ject-Orien)n(ted)64 b(T)-7 b(asks")2118
722 y(Georgia)21 b(T)-7 b(ec)n(h)24 b(CoC)f(T)-7 b(ec)n(h.)23
b(Rep)r(ort)g(00-37,)g(also)f(a)n(v)-5 b(ail-)2118 822
y(able)27 b(in)h([1)o(].)1988 988 y([8])42 b(J.)55 b(Striegnitz,)64
b Fk(F)-8 b(A)n(CT!)56 b(The)h(F)-6 b(unctional)56 b(Side)h(of)2118
1088 y(C++)p Fm(,)27 b Fi(http://www.fz-juelich.de/zam/)q(FACT)p
Fm(.)1988 1254 y([9])42 b Fk(The)30 b(XR)f(Exact)h(R)l(e)l(al)g(Home)g
(Page)p Fm(.)e Fi(http://)2118 1353 y(www.btexact.com/people/briggsk2)q
(/XR.h)q(tml)1905 5255 y Fm(16)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
